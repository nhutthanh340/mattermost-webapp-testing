{"version":3,"sources":["webpack:///./components/linking_landing_page/index.tsx","webpack:///./components/linking_landing_page/linking_landing_page.tsx","webpack:///./components/widgets/icons/checkbox_checked_icon.jsx","webpack:///./images/deep-linking/deeplinking-desktop-img.png","webpack:///./images/deep-linking/deeplinking-mobile-img.png","webpack:///./images/logo.svg"],"names":["mapStateToProps","state","config","getConfig","desktopAppLink","AppDownloadLink","iosAppLink","IosAppDownloadLink","androidAppLink","AndroidAppDownloadLink","defaultTheme","getTheme","siteUrl","SiteURL","siteName","SiteName","brandImageUrl","Client4","getBrandImageUrl","enableCustomBrand","EnableCustomBrand","connect","LinkingLandingPage","PureComponent","constructor","props","navigating","BrowserStore","clearLandingPreference","landingPreference","getLandingPreference","LandingPreferenceTypes","BROWSER","MATTERMOSTAPP","rememberChecked","setState","pref","clearIfNotChecked","setLandingPreferenceToMattermostApp","setLandingPreferenceToBrowser","setPreference","redirectPage","window","location","href","nativeLocation","isMobile","UserAgent","Utils","timeout","setTimeout","replace","getDownloadLink","addEventListener","clearTimeout","renderSystemDialogMessage","brandImageError","mobileImg","desktopImg","downloadLink","link","renderDownloadLinkText","openingLink","viewApp","renderDialogHeader","renderDownloadLinkSection","renderGoNativeAppMessage","handleChecked","renderCheckboxIcon","header","MattermostLogoSvg","customLogo","handleBrandImageError","hasSeenLandingPage","setLandingPageSeen","componentDidMount","checkLandingPreferenceApp","openMattermostApp","clearLandingPreferenceIfNotChecked","componentWillUnmount","removeEventListener","render","checkLandingPreferenceBrowser","openInBrowser","renderHeader","renderGraphic","renderDialogBody","CheckboxCheckedIcon","React"],"mappings":"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","file":"19.0dd4654435c3a8308c9e.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getTheme} from 'mattermost-redux/selectors/entities/preferences';\n\nimport {GlobalState} from 'types/store';\n\nimport LinkingLandingPage from './linking_landing_page';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    return {\n        desktopAppLink: config.AppDownloadLink,\n        iosAppLink: config.IosAppDownloadLink,\n        androidAppLink: config.AndroidAppDownloadLink,\n        defaultTheme: getTheme(state),\n        siteUrl: config.SiteURL,\n        siteName: config.SiteName,\n        brandImageUrl: Client4.getBrandImageUrl('0'),\n        enableCustomBrand: config.EnableCustomBrand === 'true',\n    };\n}\n\nexport default connect(mapStateToProps)(LinkingLandingPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport desktopImg from 'images/deep-linking/deeplinking-desktop-img.png';\nimport mobileImg from 'images/deep-linking/deeplinking-mobile-img.png';\nimport MattermostLogoSvg from 'images/logo.svg';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon';\nimport BrowserStore from 'stores/browser_store';\nimport {LandingPreferenceTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils';\n\nimport * as UserAgent from 'utils/user_agent';\n\ntype Props = {\n    defaultTheme: any;\n    desktopAppLink?: string;\n    iosAppLink?: string;\n    androidAppLink?: string;\n    siteUrl?: string;\n    siteName?: string;\n    brandImageUrl?: string;\n    enableCustomBrand: boolean;\n}\n\ntype State = {\n    rememberChecked: boolean;\n    redirectPage: boolean;\n    location: string;\n    nativeLocation: string;\n    brandImageError: boolean;\n    navigating: boolean;\n}\n\nexport default class LinkingLandingPage extends PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        const location = window.location.href.replace('/landing#', '');\n\n        this.state = {\n            rememberChecked: false,\n            redirectPage: false,\n            location,\n            nativeLocation: location.replace(/^(https|http)/, 'mattermost'),\n            brandImageError: false,\n            navigating: false,\n        };\n\n        if (Utils.isMobile() && !BrowserStore.hasSeenLandingPage()) {\n            BrowserStore.setLandingPageSeen(true);\n        }\n    }\n\n    componentDidMount() {\n        Utils.applyTheme(this.props.defaultTheme);\n        if (this.checkLandingPreferenceApp()) {\n            this.openMattermostApp();\n        }\n\n        window.addEventListener('beforeunload', this.clearLandingPreferenceIfNotChecked);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', this.clearLandingPreferenceIfNotChecked);\n    }\n\n    clearLandingPreferenceIfNotChecked = () => {\n        if (!this.state.navigating) {\n            BrowserStore.clearLandingPreference(this.props.siteUrl);\n        }\n    }\n\n    checkLandingPreferenceBrowser = () => {\n        const landingPreference = BrowserStore.getLandingPreference(this.props.siteUrl);\n        return landingPreference && landingPreference === LandingPreferenceTypes.BROWSER;\n    }\n\n    checkLandingPreferenceApp = () => {\n        const landingPreference = BrowserStore.getLandingPreference(this.props.siteUrl);\n        return landingPreference && landingPreference === LandingPreferenceTypes.MATTERMOSTAPP;\n    }\n\n    handleChecked = () => {\n        // If it was checked, and now we're unchecking it, clear the preference\n        if (this.state.rememberChecked) {\n            BrowserStore.clearLandingPreference(this.props.siteUrl);\n        }\n        this.setState({rememberChecked: !this.state.rememberChecked});\n    }\n\n    setPreference = (pref: string, clearIfNotChecked?: boolean) => {\n        if (!this.state.rememberChecked) {\n            if (clearIfNotChecked) {\n                BrowserStore.clearLandingPreference();\n            }\n            return;\n        }\n\n        switch (pref) {\n        case LandingPreferenceTypes.MATTERMOSTAPP:\n            BrowserStore.setLandingPreferenceToMattermostApp(this.props.siteUrl);\n            break;\n        case LandingPreferenceTypes.BROWSER:\n            BrowserStore.setLandingPreferenceToBrowser(this.props.siteUrl);\n            break;\n        default:\n            break;\n        }\n    }\n\n    openMattermostApp = () => {\n        this.setPreference(LandingPreferenceTypes.MATTERMOSTAPP);\n        this.setState({redirectPage: true});\n        window.location.href = this.state.nativeLocation;\n    }\n\n    openInBrowser = () => {\n        this.setPreference(LandingPreferenceTypes.BROWSER);\n        window.location.href = this.state.location;\n    }\n\n    renderSystemDialogMessage = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <FormattedMessage\n                    id='get_app.systemDialogMessageMobile'\n                    defaultMessage='View in App'\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='get_app.systemDialogMessage'\n                defaultMessage='View in Desktop App'\n            />\n        );\n    }\n\n    renderGoNativeAppMessage = () => {\n        return (\n            <a\n                href={Utils.isMobile() ? '#' : this.state.nativeLocation}\n                onMouseDown={() => {\n                    this.setPreference(LandingPreferenceTypes.MATTERMOSTAPP, true);\n                }}\n                onClick={() => {\n                    this.setState({redirectPage: true, navigating: true});\n                    if (Utils.isMobile()) {\n                        if (UserAgent.isAndroidWeb()) {\n                            const timeout = setTimeout(() => {\n                                window.location.replace(this.getDownloadLink()!);\n                            }, 2000);\n                            window.addEventListener('blur', () => {\n                                clearTimeout(timeout);\n                            });\n                        }\n                        window.location.replace(this.state.nativeLocation);\n                    }\n                }}\n                className='btn btn-primary btn-lg get-app__download'\n            >\n                {this.renderSystemDialogMessage()}\n            </a>\n        );\n    }\n\n    getDownloadLink = () => {\n        if (UserAgent.isIosWeb()) {\n            return this.props.iosAppLink;\n        } else if (UserAgent.isAndroidWeb()) {\n            return this.props.androidAppLink;\n        }\n\n        return this.props.desktopAppLink;\n    }\n\n    handleBrandImageError = () => {\n        this.setState({brandImageError: true});\n    }\n\n    renderCheckboxIcon = () => {\n        if (this.state.rememberChecked) {\n            return (\n                <CheckboxCheckedIcon/>\n            );\n        }\n\n        return null;\n    }\n\n    renderGraphic = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <img src={mobileImg}/>\n            );\n        }\n\n        return (\n            <img src={desktopImg}/>\n        );\n    }\n\n    renderDownloadLinkText = () => {\n        const isMobile = UserAgent.isMobile();\n\n        if (isMobile) {\n            return (\n                <FormattedMessage\n                    id='get_app.dontHaveTheMobileApp'\n                    defaultMessage={'Don\\'t have the Mobile App?'}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id='get_app.dontHaveTheDesktopApp'\n                defaultMessage={'Don\\'t have the Desktop App?'}\n            />\n        );\n    }\n\n    renderDownloadLinkSection = () => {\n        const downloadLink = this.getDownloadLink();\n\n        if (this.state.redirectPage) {\n            return (\n                <div className='get-app__download-link'>\n                    <FormattedMarkdownMessage\n                        id='get_app.openLinkInBrowser'\n                        defaultMessage='Or, [open this link in your browser.](!{link})'\n                        values={{\n                            link: this.state.location,\n                        }}\n                    />\n                </div>\n            );\n        } else if (downloadLink) {\n            return (\n                <div className='get-app__download-link'>\n                    {this.renderDownloadLinkText()}\n                    {'\\u00A0'}\n                    <br/>\n                    <a href={downloadLink}>\n                        <FormattedMessage\n                            id='get_app.downloadTheAppNow'\n                            defaultMessage='Download the app now.'\n                        />\n                    </a>\n                </div>\n            );\n        }\n\n        return null;\n    }\n\n    renderDialogHeader = () => {\n        const downloadLink = this.getDownloadLink();\n        const isMobile = UserAgent.isMobile();\n\n        let openingLink = (\n            <FormattedMessage\n                id='get_app.openingLink'\n                defaultMessage='Opening link in Mattermost...'\n            />\n        );\n        if (this.props.enableCustomBrand) {\n            openingLink = (\n                <FormattedMessage\n                    id='get_app.openingLinkWhiteLabel'\n                    defaultMessage='Opening link in the Desktop App...'\n                />\n            );\n        }\n\n        if (this.state.redirectPage) {\n            return (\n                <div className='get-app__launching'>\n                    {openingLink}\n                    <div className={`get-app__alternative${this.state.redirectPage ? ' redirect-page' : ''}`}>\n                        <FormattedMessage\n                            id='get_app.redirectedInMoments'\n                            defaultMessage='You will be redirected in a few moments.'\n                        />\n                        <br/>\n                        {this.renderDownloadLinkText()}\n                        {'\\u00A0'}\n                        <br className='mobile-only'/>\n                        <a href={downloadLink}>\n                            <FormattedMessage\n                                id='get_app.downloadTheAppNow'\n                                defaultMessage='Download the app now.'\n                            />\n                        </a>\n                    </div>\n                </div>\n            );\n        }\n\n        let viewApp = (\n            <FormattedMessage\n                id='get_app.ifNothingPrompts'\n                defaultMessage='You can view {siteName} in the desktop app or continue in your web browser.'\n                values={{\n                    siteName: this.props.enableCustomBrand ? '' : ' Mattermost',\n                }}\n            />\n        );\n        if (isMobile) {\n            viewApp = (\n                <FormattedMessage\n                    id='get_app.ifNothingPromptsMobile'\n                    defaultMessage='You can view {siteName} in the mobile app or continue in your web browser.'\n                    values={{\n                        siteName: this.props.enableCustomBrand ? '' : ' Mattermost',\n                    }}\n                />\n            );\n        }\n\n        return (\n            <div className='get-app__launching'>\n                <FormattedMessage\n                    id='get_app.launching'\n                    defaultMessage='Where would you like to view this?'\n                />\n                <div className='get-app__alternative'>\n                    {viewApp}\n                </div>\n            </div>\n        );\n    }\n\n    renderDialogBody = () => {\n        if (this.state.redirectPage) {\n            return (\n                <div className='get-app__dialog-body'>\n                    {this.renderDialogHeader()}\n                    {this.renderDownloadLinkSection()}\n                </div>\n            );\n        }\n\n        return (\n            <div className='get-app__dialog-body'>\n                {this.renderDialogHeader()}\n                <div className='get-app__buttons'>\n                    <div className='get-app__status'>\n                        {this.renderGoNativeAppMessage()}\n                    </div>\n                    <div className='get-app__status'>\n                        <a\n                            href={this.state.location}\n                            onMouseDown={() => {\n                                this.setPreference(LandingPreferenceTypes.BROWSER, true);\n                            }}\n                            onClick={() => {\n                                this.setState({navigating: true});\n                            }}\n                            className='btn btn-default btn-lg get-app__continue'\n                        >\n                            <FormattedMessage\n                                id='get_app.continueToBrowser'\n                                defaultMessage='View in Browser'\n                            />\n                        </a>\n                    </div>\n                </div>\n                <div className='get-app__preference'>\n                    <button\n                        className={`get-app__checkbox ${this.state.rememberChecked ? 'checked' : ''}`}\n                        onClick={this.handleChecked}\n                    >\n                        {this.renderCheckboxIcon()}\n                    </button>\n                    <FormattedMessage\n                        id='get_app.rememberMyPreference'\n                        defaultMessage='Remember my preference'\n                    />\n                </div>\n                {this.renderDownloadLinkSection()}\n            </div>\n        );\n    }\n\n    renderHeader = () => {\n        let header = (\n            <div className='get-app__header'>\n                <img\n                    src={MattermostLogoSvg}\n                    className='get-app__logo'\n                />\n            </div>\n        );\n        if (this.props.enableCustomBrand && this.props.brandImageUrl) {\n            let customLogo;\n            if (this.props.brandImageUrl && !this.state.brandImageError) {\n                customLogo = (\n                    <img\n                        src={this.props.brandImageUrl}\n                        onError={this.handleBrandImageError}\n                        className='get-app__custom-logo'\n                    />\n                );\n            }\n\n            header = (\n                <div className='get-app__header'>\n                    {customLogo}\n                    <div className='get-app__custom-site-name'>\n                        <span>{this.props.siteName}</span>\n                    </div>\n                </div>\n            );\n        }\n\n        return header;\n    }\n\n    render() {\n        const isMobile = UserAgent.isMobile();\n\n        if (this.checkLandingPreferenceBrowser()) {\n            this.openInBrowser();\n            return null;\n        }\n\n        return (\n            <div className='get-app'>\n                {this.renderHeader()}\n                <div className='get-app__dialog'>\n                    <div\n                        className={`get-app__graphic ${isMobile ? 'mobile' : ''}`}\n                    >\n                        {this.renderGraphic()}\n                    </div>\n                    {this.renderDialogBody()}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxCheckedIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-285.000000, -933.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---Public-Channels'\n                                        transform='translate(12.000000, 35.000000)'\n                                    >\n                                        <g\n                                            id='Stacked-Group'\n                                            transform='translate(0.000000, 5.000000)'\n                                        >\n                                            <g id='data-table/1st/row-checkbox-label-base'>\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\n                                                        id='checkbox---checked'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/f7a3c9f15d767d9213e24747475ad378.png\";","module.exports = __webpack_public_path__ + \"files/807f8dec6df738e5763f348da53be881.png\";","module.exports = __webpack_public_path__ + \"files/5ebcaf72977c6c3ca8b636edcc2677f1.svg\";"],"sourceRoot":""}