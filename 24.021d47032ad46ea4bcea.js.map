{"version":3,"sources":["webpack:///./components/terms_of_service/index.js","webpack:///./components/terms_of_service/terms_of_service.jsx","webpack:///./components/widgets/icons/fa_logout_icon.jsx"],"names":["mapStateToProps","state","config","getConfig","termsEnabled","EnableCustomTermsOfService","emojiMap","getEmojiMap","mapDispatchToProps","dispatch","actions","bindActionCreators","getTermsOfService","updateMyTermsOfServiceStatus","connect","TermsOfService","React","PureComponent","constructor","props","setState","customTermsOfServiceId","customTermsOfServiceText","loading","data","id","text","GlobalActions","Constants","GET_TERMS_ERROR","e","preventDefault","loadingAgree","serverError","registerUserAction","query","URLSearchParams","location","search","redirectTo","get","match","browserHistory","push","loadingDisagree","TERMS_REJECTED","accepted","success","formattedText","memoizeResult","formatText","componentDidMount","render","termsMarkdownClasses","handleLogoutClick","messageHtmlToComponent","mentions","handleAcceptTerms","handleRejectTerms","Boolean","PropTypes","object","bool","isRequired","shape","func","LogoutIcon","title"],"mappings":"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","file":"24.021d47032ad46ea4bcea.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTermsOfService, updateMyTermsOfServiceStatus} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport TermsOfService from './terms_of_service';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    return {\n        termsEnabled: config.EnableCustomTermsOfService === 'true',\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTermsOfService,\n            updateMyTermsOfServiceStatus,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TermsOfService);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Button, ButtonGroup} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport AnnouncementBar from 'components/announcement_bar';\nimport LoadingScreen from 'components/loading_screen';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport LogoutIcon from 'components/widgets/icons/fa_logout_icon';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport {browserHistory} from 'utils/browser_history';\nimport messageHtmlToComponent from 'utils/message_html_to_component';\nimport {formatText} from 'utils/text_formatting';\nimport {Constants} from 'utils/constants.jsx';\n\nexport default class TermsOfService extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object,\n        termsEnabled: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            getTermsOfService: PropTypes.func.isRequired,\n            updateMyTermsOfServiceStatus: PropTypes.func.isRequired,\n        }).isRequired,\n        emojiMap: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            customTermsOfServiceId: '',\n            customTermsOfServiceText: '',\n            loading: true,\n            loadingAgree: false,\n            loadingDisagree: false,\n            serverError: null,\n        };\n\n        this.formattedText = memoizeResult((text) => formatText(text, {}, props.emojiMap));\n    }\n\n    componentDidMount() {\n        if (this.props.termsEnabled) {\n            this.getTermsOfService();\n        } else {\n            GlobalActions.redirectUserToDefaultTeam();\n        }\n    }\n\n    getTermsOfService = async () => {\n        this.setState({\n            customTermsOfServiceId: '',\n            customTermsOfServiceText: '',\n            loading: true,\n        });\n        const {data} = await this.props.actions.getTermsOfService();\n        if (data) {\n            this.setState({\n                customTermsOfServiceId: data.id,\n                customTermsOfServiceText: data.text,\n                loading: false,\n            });\n        } else {\n            GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.GET_TERMS_ERROR}`);\n        }\n    };\n\n    handleLogoutClick = (e) => {\n        e.preventDefault();\n        GlobalActions.emitUserLoggedOutEvent('/login');\n    };\n\n    handleAcceptTerms = () => {\n        this.setState({\n            loadingAgree: true,\n            serverError: null,\n        });\n        this.registerUserAction(\n            true,\n            () => {\n                const query = new URLSearchParams(this.props.location.search);\n                const redirectTo = query.get('redirect_to');\n                if (redirectTo && redirectTo.match(/^\\/([^/]|$)/)) {\n                    browserHistory.push(redirectTo);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            },\n        );\n    };\n\n    handleRejectTerms = () => {\n        this.setState({\n            loadingDisagree: true,\n            serverError: null,\n        });\n        this.registerUserAction(\n            false,\n            () => {\n                GlobalActions.emitUserLoggedOutEvent(`/login?extra=${Constants.TERMS_REJECTED}`);\n            },\n        );\n    };\n\n    registerUserAction = async (accepted, success) => {\n        const {data} = await this.props.actions.updateMyTermsOfServiceStatus(this.state.customTermsOfServiceId, accepted);\n        if (data) {\n            success(data);\n        } else {\n            this.setState({\n                loadingAgree: false,\n                loadingDisagree: false,\n                serverError: (\n                    <FormattedMessage\n                        id='terms_of_service.api_error'\n                        defaultMessage='Unable to complete the request. If this issue persists, contact your System Administrator.'\n                    />\n                ),\n            });\n        }\n    };\n\n    render() {\n        if (this.state.loading) {\n            return <LoadingScreen/>;\n        }\n\n        let termsMarkdownClasses = 'terms-of-service__markdown';\n        if (this.state.serverError) {\n            termsMarkdownClasses += ' terms-of-service-error__height--fill';\n        } else {\n            termsMarkdownClasses += ' terms-of-service__height--fill';\n        }\n        return (\n            <div>\n                <AnnouncementBar/>\n                <div className='signup-header'>\n                    <a\n                        href='#'\n                        onClick={this.handleLogoutClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </a>\n                </div>\n                <div>\n                    <div className='signup-team__container terms-of-service__container'>\n                        <div className={termsMarkdownClasses}>\n                            <div className='medium-center'>\n                                {messageHtmlToComponent(this.formattedText(this.state.customTermsOfServiceText), false, {mentions: false})}\n                            </div>\n                        </div>\n                        <div className='terms-of-service__footer medium-center'>\n                            <ButtonGroup className='terms-of-service__button-group'>\n                                <Button\n                                    bsStyle={'primary'}\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\n                                    id='acceptTerms'\n                                    onClick={this.handleAcceptTerms}\n                                    type='submit'\n                                >\n                                    {this.state.loadingAgree && <LoadingSpinner/>}\n                                    <FormattedMessage\n                                        id='terms_of_service.agreeButton'\n                                        defaultMessage={'I Agree'}\n                                    />\n                                </Button>\n                                <Button\n                                    bsStyle={'link'}\n                                    disabled={this.state.loadingAgree || this.state.loadingDisagree}\n                                    id='rejectTerms'\n                                    onClick={this.handleRejectTerms}\n                                    type='reset'\n                                >\n                                    {this.state.loadingDisagree && <LoadingSpinner/>}\n                                    <FormattedMessage\n                                        id='terms_of_service.disagreeButton'\n                                        defaultMessage={'I Disagree'}\n                                    />\n                                </Button>\n                            </ButtonGroup>\n                            {Boolean(this.state.serverError) && (\n                                <div className='terms-of-service__server-error alert alert-warning'>\n                                    <WarningIcon/>\n                                    {' '}\n                                    {this.state.serverError}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LogoutIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.logout'\n                defaultMessage='Logout Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-1x fa-angle-left'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n"],"sourceRoot":""}