{"version":3,"sources":["webpack:///./actions/views/login.js","webpack:///./components/common/back_button.tsx","webpack:///./components/common/site_name_and_description.tsx","webpack:///./components/signup/signup_email/index.js","webpack:///./components/signup/signup_email/signup_email.jsx","webpack:///./images/logo.png"],"names":["login","loginId","password","mfaToken","dispatch","ignoreMfaRequiredError","UserActions","loginById","userId","promise","result","error","server_error_id","data","BackButton","React","PureComponent","render","props","onClick","url","title","toString","SiteNameAndDescription","customDescriptionText","siteName","description","mapStateToProps","state","config","getConfig","enableSignUpWithEmail","EnableSignUpWithEmail","SiteName","termsOfServiceLink","TermsOfServiceLink","privacyPolicyLink","PrivacyPolicyLink","CustomDescriptionText","hasAccounts","NoAccounts","passwordConfig","getPasswordConfig","mapDispatchToProps","actions","bindActionCreators","createUser","setGlobalItem","getTeamInviteInfo","connect","SignupEmail","constructor","document","token","parsedData","JSON","parse","loading","email","teamName","name","inviteId","setState","noOpenServerError","serverError","user","trackEvent","id","then","verifyUrl","encodeURIComponent","browserHistory","push","message","isSubmitting","stringify","usedBefore","redirectTo","URLSearchParams","location","search","get","GlobalActions","providedEmail","refs","value","trim","nameError","emailError","passwordError","isEmail","providedUsername","toLowerCase","usernameError","Utils","min","Constants","MIN_USERNAME_LENGTH","max","MAX_USERNAME_LENGTH","providedPassword","valid","e","preventDefault","isUserValid","username","allow_marketing","handleSignupSuccess","emailHelpText","emailDivStyle","nameHelpText","nameDivStyle","passwordDivStyle","yourEmailIs","emailContainerStyle","handleSubmit","length","getTokenData","componentDidMount","setDocumentTitle","getInviteInfo","body","classList","remove","componentDidUpdate","emailSignup","renderEmailSignup","terms","logoImage","PropTypes","object","bool","isRequired","string","shape","func"],"mappings":"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","file":"18.79f266fa9ba6aad54bb6.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as UserActions from 'mattermost-redux/actions/users';\n\nexport function login(loginId, password, mfaToken) {\n    return (dispatch) => {\n        return ignoreMfaRequiredError(dispatch(UserActions.login(loginId, password, mfaToken)));\n    };\n}\n\nexport function loginById(userId, password, mfaToken) {\n    return (dispatch) => {\n        return ignoreMfaRequiredError(dispatch(UserActions.loginById(userId, password, mfaToken)));\n    };\n}\n\nasync function ignoreMfaRequiredError(promise) {\n    let result = await promise;\n\n    if (result.error && result.error.server_error_id === 'api.context.mfa_required.app_error') {\n        result = {data: true};\n    }\n\n    return result;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    customDescriptionText?: string;\n    siteName: string;\n}\n\nexport default class SiteNameAndDescription extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        siteName: 'Mattermost',\n    }\n\n    public render(): JSX.Element {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {createUser} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getTeamInviteInfo} from 'mattermost-redux/actions/teams';\n\nimport {setGlobalItem} from 'actions/storage';\nimport {loginById} from 'actions/views/login';\nimport {getPasswordConfig} from 'utils/utils.jsx';\n\nimport SignupEmail from './signup_email.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\n    const siteName = config.SiteName;\n    const termsOfServiceLink = config.TermsOfServiceLink;\n    const privacyPolicyLink = config.PrivacyPolicyLink;\n    const customDescriptionText = config.CustomDescriptionText;\n    const hasAccounts = config.NoAccounts === 'false';\n\n    return {\n        enableSignUpWithEmail,\n        siteName,\n        termsOfServiceLink,\n        privacyPolicyLink,\n        customDescriptionText,\n        passwordConfig: getPasswordConfig(config),\n        hasAccounts,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createUser,\n            loginById,\n            setGlobalItem,\n            getTeamInviteInfo,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupEmail);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {browserHistory} from 'utils/browser_history';\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport BackButton from 'components/common/back_button';\nimport LoadingScreen from 'components/loading_screen';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class SignupEmail extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object,\n        enableSignUpWithEmail: PropTypes.bool.isRequired,\n        siteName: PropTypes.string,\n        termsOfServiceLink: PropTypes.string,\n        privacyPolicyLink: PropTypes.string,\n        customDescriptionText: PropTypes.string,\n        passwordConfig: PropTypes.object,\n        hasAccounts: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            createUser: PropTypes.func.isRequired,\n            loginById: PropTypes.func.isRequired,\n            setGlobalItem: PropTypes.func.isRequired,\n            getTeamInviteInfo: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        const data = (new URLSearchParams(this.props.location.search)).get('d');\n        const token = (new URLSearchParams(this.props.location.search)).get('t');\n        const inviteId = (new URLSearchParams(this.props.location.search)).get('id');\n\n        this.state = {};\n        if (token && token.length > 0) {\n            this.state = this.getTokenData(token, data);\n        } else if (inviteId && inviteId.length > 0) {\n            this.state = {\n                loading: true,\n                inviteId,\n            };\n        }\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_user_01_welcome');\n\n        this.setDocumentTitle(this.props.siteName);\n\n        const {inviteId} = this.state;\n        if (inviteId && inviteId.length > 0) {\n            this.getInviteInfo(inviteId);\n        }\n\n        if (!this.props.hasAccounts) {\n            document.body.classList.remove('sticky');\n        }\n    }\n\n    componentDidUpdate() {\n        this.setDocumentTitle(this.props.siteName);\n    }\n\n    setDocumentTitle = (siteName) => {\n        if (siteName) {\n            document.title = siteName;\n        }\n    }\n\n    getTokenData = (token, data) => {\n        const parsedData = JSON.parse(data);\n\n        return {\n            loading: false,\n            token,\n            email: parsedData.email,\n            teamName: parsedData.name,\n        };\n    }\n\n    getInviteInfo = async (inviteId) => {\n        const {data, error} = await this.props.actions.getTeamInviteInfo(inviteId);\n        if (data) {\n            this.setState({\n                loading: false,\n                noOpenServerError: false,\n                serverError: '',\n                teamName: data.name,\n            });\n        } else if (error) {\n            this.setState({loading: false,\n                noOpenServerError: true,\n                serverError: (\n                    <FormattedMessage\n                        id='signup_user_completed.invalid_invite'\n                        defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                    />\n                ),\n            });\n        }\n    }\n\n    handleSignupSuccess = (user, data) => {\n        trackEvent('signup', 'signup_user_02_complete');\n\n        this.props.actions.loginById(data.id, user.password, '').then(({error}) => {\n            if (error) {\n                if (error.server_error_id === 'api.user.login.not_verified.app_error') {\n                    let verifyUrl = '/should_verify_email?email=' + encodeURIComponent(user.email);\n                    if (this.state.teamName) {\n                        verifyUrl += '&teamname=' + encodeURIComponent(this.state.teamName);\n                    }\n                    browserHistory.push(verifyUrl);\n                } else {\n                    this.setState({\n                        serverError: error.message,\n                        isSubmitting: false,\n                    });\n                }\n\n                return;\n            }\n\n            if (this.state.token > 0) {\n                this.props.actions.setGlobalItem(this.state.token, JSON.stringify({usedBefore: true}));\n            }\n\n            const redirectTo = (new URLSearchParams(this.props.location.search)).get('redirect_to');\n            if (redirectTo) {\n                browserHistory.push(redirectTo);\n            } else {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        });\n    }\n\n    isUserValid = () => {\n        const providedEmail = this.refs.email.value.trim();\n        if (!providedEmail) {\n            this.setState({\n                nameError: '',\n                emailError: (<FormattedMessage id='signup_user_completed.required'/>),\n                passwordError: '',\n                serverError: '',\n            });\n            return false;\n        }\n\n        if (!isEmail(providedEmail)) {\n            this.setState({\n                nameError: '',\n                emailError: (<FormattedMessage id='signup_user_completed.validEmail'/>),\n                passwordError: '',\n                serverError: '',\n            });\n            return false;\n        }\n\n        const providedUsername = this.refs.name.value.trim().toLowerCase();\n        if (!providedUsername) {\n            this.setState({\n                nameError: (<FormattedMessage id='signup_user_completed.required'/>),\n                emailError: '',\n                passwordError: '',\n                serverError: '',\n            });\n            return false;\n        }\n\n        const usernameError = Utils.isValidUsername(providedUsername);\n        if (usernameError === 'Cannot use a reserved word as a username.') {\n            this.setState({\n                nameError: (<FormattedMessage id='signup_user_completed.reserved'/>),\n                emailError: '',\n                passwordError: '',\n                serverError: '',\n            });\n            return false;\n        } else if (usernameError) {\n            this.setState({\n                nameError: (\n                    <FormattedMessage\n                        id='signup_user_completed.usernameLength'\n                        values={{\n                            min: Constants.MIN_USERNAME_LENGTH,\n                            max: Constants.MAX_USERNAME_LENGTH,\n                        }}\n                    />\n                ),\n                emailError: '',\n                passwordError: '',\n                serverError: '',\n            });\n            return false;\n        }\n\n        const providedPassword = this.refs.password.value;\n        const {valid, error} = Utils.isValidPassword(providedPassword, this.props.passwordConfig);\n        if (!valid && error) {\n            this.setState({\n                nameError: '',\n                emailError: '',\n                passwordError: error,\n                serverError: '',\n            });\n            return false;\n        }\n\n        return true;\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        trackEvent('signup_email', 'click_create_account');\n\n        // bail out if a submission is already in progress\n        if (this.state.isSubmitting) {\n            return;\n        }\n\n        if (this.isUserValid()) {\n            this.setState({\n                nameError: '',\n                emailError: '',\n                passwordError: '',\n                serverError: '',\n                isSubmitting: true,\n            });\n\n            const user = {\n                email: this.refs.email.value.trim(),\n                username: this.refs.name.value.trim().toLowerCase(),\n                password: this.refs.password.value,\n                allow_marketing: true,\n            };\n\n            this.props.actions.createUser(user, this.state.token, this.state.inviteId).then((result) => {\n                if (result.error) {\n                    this.setState({\n                        serverError: result.error.message,\n                        isSubmitting: false,\n                    });\n                    return;\n                }\n\n                this.handleSignupSuccess(user, result.data);\n            });\n        }\n    }\n\n    renderEmailSignup = () => {\n        let emailError = null;\n        let emailHelpText = (\n            <span\n                id='valid_email'\n                className='help-block'\n            >\n                <FormattedMessage\n                    id='signup_user_completed.emailHelp'\n                    defaultMessage='Valid email required for sign-up'\n                />\n            </span>\n        );\n        let emailDivStyle = 'form-group';\n        if (this.state.emailError) {\n            emailError = (<label className='control-label'>{this.state.emailError}</label>);\n            emailHelpText = '';\n            emailDivStyle += ' has-error';\n        }\n\n        let nameError = null;\n        let nameHelpText = (\n            <span\n                id='valid_name'\n                className='help-block'\n            >\n                <FormattedMessage\n                    id='signup_user_completed.userHelp'\n                    defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                />\n            </span>\n        );\n        let nameDivStyle = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameHelpText = '';\n            nameDivStyle += ' has-error';\n        }\n\n        let passwordError = null;\n        let passwordDivStyle = 'form-group';\n        if (this.state.passwordError) {\n            passwordError = <label className='control-label'>{this.state.passwordError}</label>;\n            passwordDivStyle += ' has-error';\n        }\n\n        let yourEmailIs = null;\n        if (this.state.email) {\n            yourEmailIs = (\n                <FormattedMarkdownMessage\n                    id='signup_user_completed.emailIs'\n                    defaultMessage=\"Your email address is **{email}**. You'll use this address to sign in to {siteName}.\"\n                    values={{\n                        email: this.state.email,\n                        siteName: this.props.siteName,\n                    }}\n                />\n            );\n        }\n\n        let emailContainerStyle = 'mt-8';\n        if (this.state.email) {\n            emailContainerStyle = 'hidden';\n        }\n\n        return (\n            <form>\n                <div className='inner__content'>\n                    <div className={emailContainerStyle}>\n                        <h5 id='email_label'>\n                            <strong>\n                                <FormattedMessage\n                                    id='signup_user_completed.whatis'\n                                    defaultMessage=\"What's your email address?\"\n                                />\n                            </strong>\n                        </h5>\n                        <div className={emailDivStyle}>\n                            <input\n                                id='email'\n                                type='email'\n                                ref='email'\n                                className='form-control'\n                                defaultValue={this.state.email}\n                                placeholder=''\n                                maxLength='128'\n                                autoFocus={true}\n                                spellCheck='false'\n                                autoCapitalize='off'\n                            />\n                            {emailError}\n                            {emailHelpText}\n                        </div>\n                    </div>\n                    {yourEmailIs}\n                    <div className='mt-8'>\n                        <h5 id='name_label'>\n                            <strong>\n                                <FormattedMessage\n                                    id='signup_user_completed.chooseUser'\n                                    defaultMessage='Choose your username'\n                                />\n                            </strong>\n                        </h5>\n                        <div className={nameDivStyle}>\n                            <input\n                                id='name'\n                                type='text'\n                                ref='name'\n                                className='form-control'\n                                placeholder=''\n                                maxLength={Constants.MAX_USERNAME_LENGTH}\n                                spellCheck='false'\n                                autoCapitalize='off'\n                            />\n                            {nameError}\n                            {nameHelpText}\n                        </div>\n                    </div>\n                    <div className='mt-8'>\n                        <h5 id='password_label'>\n                            <strong>\n                                <FormattedMessage\n                                    id='signup_user_completed.choosePwd'\n                                    defaultMessage='Choose your password'\n                                />\n                            </strong>\n                        </h5>\n                        <div className={passwordDivStyle}>\n                            <input\n                                id='password'\n                                type='password'\n                                ref='password'\n                                className='form-control'\n                                placeholder=''\n                                maxLength='128'\n                                spellCheck='false'\n                            />\n                            {passwordError}\n                        </div>\n                    </div>\n                    <p className='mt-5'>\n                        <button\n                            id='createAccountButton'\n                            type='submit'\n                            onClick={this.handleSubmit}\n                            className='btn-primary btn'\n                            disabled={this.state.isSubmitting}\n                        >\n                            <FormattedMessage\n                                id='signup_user_completed.create'\n                                defaultMessage='Create Account'\n                            />\n                        </button>\n                    </p>\n                </div>\n            </form>\n        );\n    }\n\n    render() {\n        const {\n            customDescriptionText,\n            enableSignUpWithEmail,\n            location,\n            privacyPolicyLink,\n            siteName,\n            termsOfServiceLink,\n            hasAccounts,\n        } = this.props;\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div\n                    id='existingEmailErrorContainer'\n                    className={'form-group has-error'}\n                >\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        let emailSignup;\n        if (enableSignUpWithEmail) {\n            emailSignup = this.renderEmailSignup();\n        } else {\n            return null;\n        }\n\n        let terms = null;\n        if (!this.state.noOpenServerError && emailSignup) {\n            terms = (\n                <p id='signup_agreement'>\n                    <FormattedMarkdownMessage\n                        id='create_team.agreement'\n                        defaultMessage='By proceeding to create your account and use {siteName}, you agree to our [Terms of Service]({TermsOfServiceLink}) and [Privacy Policy]({PrivacyPolicyLink}). If you do not agree, you cannot use {siteName}.'\n                        values={{\n                            siteName,\n                            TermsOfServiceLink: `!${termsOfServiceLink}`,\n                            PrivacyPolicyLink: `!${privacyPolicyLink}`,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        if (this.state.noOpenServerError) {\n            emailSignup = null;\n        }\n\n        return (\n            <div>\n                {hasAccounts && <BackButton onClick={() => trackEvent('signup_email', 'click_back')}/>}\n                <div\n                    id='signup_email_section'\n                    className='col-sm-12'\n                >\n                    <div className='signup-team__container padding--less'>\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <h4\n                            id='create_account'\n                            className='color--light'\n                        >\n                            <FormattedMessage\n                                id='signup_user_completed.lets'\n                                defaultMessage=\"Let's create your account\"\n                            />\n                        </h4>\n                        <span\n                            id='signin_account'\n                            className='color--light'\n                        >\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                id='signin_account_link'\n                                to={'/login' + location.search}\n                                onClick={() => trackEvent('signup_email', 'click_signin_account')}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                        {emailSignup}\n                        {serverError}\n                        {terms}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/6ff072d843f837505f68ad89158fd0b0.png\";"],"sourceRoot":""}