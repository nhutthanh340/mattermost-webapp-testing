{"version":3,"sources":["webpack:///./components/add_users_to_team_modal/add_users_to_team_modal.tsx","webpack:///./components/add_users_to_team_modal/index.ts","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.jsx","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss?86b9","webpack:///./components/admin_console/admin_console.tsx","webpack:///./components/admin_console/admin_definition.jsx","webpack:///./components/admin_console/admin_definition_constants.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/admin_navbar_dropdown.tsx","webpack:///./components/admin_console/admin_navbar_dropdown/index.ts","webpack:///./components/admin_console/admin_navbar_dropdown/menu_item_blockable_link.tsx","webpack:///./components/admin_console/admin_settings.tsx","webpack:///./components/admin_console/admin_sidebar/admin_sidebar.jsx","webpack:///./components/admin_console/admin_sidebar/index.js","webpack:///./components/admin_console/admin_sidebar_category.jsx","webpack:///./components/admin_console/admin_sidebar_header/admin_sidebar_header.tsx","webpack:///./components/admin_console/admin_sidebar_header/index.ts","webpack:///./components/admin_console/admin_sidebar_section.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss?bbb7","webpack:///./components/admin_console/audits/audits.tsx","webpack:///./components/admin_console/audits/index.ts","webpack:///./components/admin_console/banner.tsx","webpack:///./components/admin_console/bleve_settings.jsx","webpack:///./components/admin_console/blockable_link/blockable_link.tsx","webpack:///./components/admin_console/blockable_link/index.ts","webpack:///./components/admin_console/boolean_setting.tsx","webpack:///./components/admin_console/brand_image_setting/brand_image_setting.jsx","webpack:///./components/admin_console/cluster_settings.jsx","webpack:///./components/admin_console/cluster_table.jsx","webpack:///./components/admin_console/cluster_table_container.jsx","webpack:///./components/admin_console/color_setting.tsx","webpack:///./components/admin_console/compliance_reports/compliance_reports.jsx","webpack:///./components/admin_console/compliance_reports/index.js","webpack:///./components/admin_console/custom_enable_disable_guest_accounts_setting.tsx","webpack:///./components/admin_console/custom_plugin_settings/custom_plugin_settings.jsx","webpack:///./components/admin_console/custom_plugin_settings/enable_plugin_setting.js","webpack:///./components/admin_console/custom_plugin_settings/index.js","webpack:///./components/admin_console/custom_terms_of_service_settings/custom_terms_of_service_settings.jsx","webpack:///./components/admin_console/custom_terms_of_service_settings/index.js","webpack:///./components/admin_console/custom_url_schemes_setting.jsx","webpack:///./components/admin_console/data_grid/data_grid.scss?76b8","webpack:///./components/admin_console/data_grid/data_grid.tsx","webpack:///./components/admin_console/data_grid/data_grid_header.tsx","webpack:///./components/admin_console/data_grid/data_grid_row.tsx","webpack:///./components/admin_console/data_grid/data_grid_search.tsx","webpack:///./components/admin_console/data_retention_settings.jsx","webpack:///./components/admin_console/database_settings.jsx","webpack:///./components/admin_console/dropdown_setting.jsx","webpack:///./components/admin_console/elasticsearch_settings.jsx","webpack:///./components/admin_console/feature_discovery/feature_discovery.scss?1856","webpack:///./components/admin_console/feature_discovery/feature_discovery.tsx","webpack:///./components/admin_console/feature_discovery/ldap.tsx","webpack:///./components/admin_console/feature_discovery/saml.tsx","webpack:///./components/admin_console/file_upload_setting.jsx","webpack:///./components/admin_console/generated_setting.tsx","webpack:///./components/admin_console/group_settings/group_details/group_details.jsx","webpack:///./components/admin_console/group_settings/group_details/group_details_errors.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile_and_settings.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users_row.jsx","webpack:///./components/admin_console/group_settings/group_details/index.jsx","webpack:///./components/admin_console/group_settings/group_row.jsx","webpack:///./components/admin_console/group_settings/group_settings.jsx","webpack:///./components/admin_console/group_settings/groups_list/groups_list.tsx","webpack:///./components/admin_console/group_settings/groups_list/index.ts","webpack:///./components/admin_console/highlight.tsx","webpack:///./components/admin_console/index.ts","webpack:///./components/admin_console/jobs/index.jsx","webpack:///./components/admin_console/jobs/table.jsx","webpack:///./components/admin_console/license_settings/index.js","webpack:///./components/admin_console/license_settings/license_settings.jsx","webpack:///./components/admin_console/manage_roles_modal/index.ts","webpack:///./components/admin_console/manage_roles_modal/manage_roles_modal.tsx","webpack:///./components/admin_console/manage_teams_modal/index.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_dropdown.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_modal.jsx","webpack:///./components/admin_console/manage_teams_modal/remove_from_team_button.jsx","webpack:///./components/admin_console/manage_tokens_modal/index.js","webpack:///./components/admin_console/manage_tokens_modal/manage_tokens_modal.jsx","webpack:///./components/admin_console/message_export_settings.jsx","webpack:///./components/admin_console/multiselect_settings.jsx","webpack:///./components/admin_console/password_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/edit_post_time_limit_button.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/edit_post_time_limit_modal.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/guest_permissions_tree.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_checkbox.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_description.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_group.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_row.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_schemes_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/team_in_list.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/permissions_scheme_summary.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/permissions_tree.jsx","webpack:///./components/admin_console/plugin_management/index.js","webpack:///./components/admin_console/plugin_management/plugin_management.jsx","webpack:///./components/admin_console/push_settings.jsx","webpack:///./components/admin_console/radio_setting.tsx","webpack:///./components/admin_console/remove_file_setting.jsx","webpack:///./components/admin_console/request_button/request_button.jsx","webpack:///./components/admin_console/reset_email_modal/reset_email_modal.jsx","webpack:///./components/admin_console/reset_password_modal/index.ts","webpack:///./components/admin_console/reset_password_modal/reset_password_modal.tsx","webpack:///./components/admin_console/revoke_token_button/index.ts","webpack:///./components/admin_console/revoke_token_button/revoke_token_button.tsx","webpack:///./components/admin_console/schema_admin_settings.jsx","webpack:///./components/admin_console/schema_text.jsx","webpack:///./components/admin_console/server_logs/index.js","webpack:///./components/admin_console/server_logs/log_list.jsx","webpack:///./components/admin_console/server_logs/logs.jsx","webpack:///./components/admin_console/session_length_settings.jsx","webpack:///./components/admin_console/set_by_env.jsx","webpack:///./components/admin_console/setting.tsx","webpack:///./components/admin_console/settings_group.jsx","webpack:///./components/admin_console/system_user_detail/index.js","webpack:///./components/admin_console/system_user_detail/system_user_detail.jsx","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss?6606","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss?349b","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.tsx","webpack:///./components/admin_console/system_user_detail/team_list/index.ts","webpack:///./components/admin_console/system_user_detail/team_list/team_list.tsx","webpack:///./components/admin_console/system_user_detail/team_list/team_list_dropdown.tsx","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss?32ba","webpack:///./components/admin_console/system_user_detail/team_list/team_row.tsx","webpack:///./components/admin_console/system_users/index.js","webpack:///./components/admin_console/system_users/list/index.js","webpack:///./components/admin_console/system_users/list/selectors.jsx","webpack:///./components/admin_console/system_users/list/system_users_list.jsx","webpack:///./components/admin_console/system_users/system_users.jsx","webpack:///./components/admin_console/system_users/system_users_dropdown/index.ts","webpack:///./components/admin_console/system_users/system_users_dropdown/system_users_dropdown.tsx","webpack:///./components/admin_console/team_channel_settings/abstract_list.jsx","webpack:///./components/admin_console/team_channel_settings/channel/channel_settings.jsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_details.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_groups.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_members/channel_members.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_members/index.ts","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_moderation.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_modes.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_profile.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/index.js","webpack:///./components/admin_console/team_channel_settings/channel/index.js","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.tsx","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_row.tsx","webpack:///./components/admin_console/team_channel_settings/channel/list/index.ts","webpack:///./components/admin_console/team_channel_settings/convert_and_remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/convert_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/errors.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_list.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_row.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_users.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_users_row.tsx","webpack:///./components/admin_console/team_channel_settings/group/index.js","webpack:///./components/admin_console/team_channel_settings/line_switch.jsx","webpack:///./components/admin_console/team_channel_settings/remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/save_changes_panel.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/index.js","webpack:///./components/admin_console/team_channel_settings/team/details/team_details.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_groups.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_members/index.ts","webpack:///./components/admin_console/team_channel_settings/team/details/team_members/team_members.tsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_modes.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_profile.jsx","webpack:///./components/admin_console/team_channel_settings/team/index.js","webpack:///./components/admin_console/team_channel_settings/team/list/index.js","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.jsx","webpack:///./components/admin_console/team_channel_settings/team/list/team_row.jsx","webpack:///./components/admin_console/team_channel_settings/team/team_settings.jsx","webpack:///./components/admin_console/team_channel_settings/users_to_be_removed_modal.jsx","webpack:///./components/admin_console/text_setting.tsx","webpack:///./components/admin_console/user_autocomplete_setting/index.jsx","webpack:///./components/admin_console/user_autocomplete_setting/user_autocomplete_setting.jsx","webpack:///./components/admin_console/user_grid/user_grid.scss?ce16","webpack:///./components/admin_console/user_grid/user_grid.tsx","webpack:///./components/admin_console/user_grid/user_grid_name.tsx","webpack:///./components/admin_console/user_grid/user_grid_remove.tsx","webpack:///./components/admin_console/user_grid/user_grid_role_dropdown.tsx","webpack:///./components/analytics/doughnut_chart.tsx","webpack:///./components/analytics/format.tsx","webpack:///./components/analytics/line_chart.tsx","webpack:///./components/analytics/statistic_count.tsx","webpack:///./components/analytics/system_analytics/index.js","webpack:///./components/analytics/system_analytics/system_analytics.jsx","webpack:///./components/analytics/table_chart.tsx","webpack:///./components/analytics/team_analytics/index.js","webpack:///./components/analytics/team_analytics/team_analytics.jsx","webpack:///./components/channel_selector_modal/channel_selector_modal.jsx","webpack:///./components/channel_selector_modal/index.js","webpack:///./components/discard_changes_modal.tsx","webpack:///./components/team_selector_modal/index.js","webpack:///./components/team_selector_modal/team_selector_modal.jsx","webpack:///./components/toggle.tsx","webpack:///./components/user_list_row_with_error/index.js","webpack:///./components/user_list_row_with_error/user_list_row_with_error.jsx","webpack:///./components/widgets/admin_console/admin_header.tsx","webpack:///./components/widgets/admin_console/admin_panel.scss?7b8b","webpack:///./components/widgets/admin_console/admin_panel.tsx","webpack:///./components/widgets/admin_console/admin_panel_togglable.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_button.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_link.tsx","webpack:///./components/widgets/admin_console/formatted_admin_header.tsx","webpack:///./components/widgets/icons/accordion_toggle_icon.jsx","webpack:///./components/widgets/icons/at_icon.jsx","webpack:///./components/widgets/icons/checkbox_checked_icon.jsx","webpack:///./components/widgets/icons/checkbox_partial_icon.jsx","webpack:///./components/widgets/icons/ellipsis_h_icon.jsx","webpack:///./components/widgets/icons/email_icon.jsx","webpack:///./components/widgets/icons/fa_next_icon.tsx","webpack:///./components/widgets/icons/fa_previous_icon.tsx","webpack:///./components/widgets/icons/fa_reload_icon.jsx","webpack:///./components/widgets/icons/shield_outline_icon.jsx","webpack:///./images/feature-discovery/ldap.png","webpack:///./images/feature-discovery/saml.png","webpack:///./images/status_green.png","webpack:///./images/status_yellow.png","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss","webpack:///./components/admin_console/data_grid/data_grid.scss","webpack:///./components/admin_console/feature_discovery/feature_discovery.scss","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss","webpack:///./components/admin_console/user_grid/user_grid.scss","webpack:///./components/widgets/admin_console/admin_panel.scss","webpack:///./selectors/admin_console.jsx","webpack:///./utils/admin_console_index.jsx","webpack:///./utils/admin_console_plugin_index.js","webpack:///./utils/filter_users.js","webpack:///./utils/policy_roles_adapter.js","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":["USERS_PER_PAGE","MAX_SELECTABLE_VALUES","AddUsersToTeamModal","React","PureComponent","constructor","props","actions","getProfilesNotInTeam","team","id","setUsersLoadingState","loading","setState","term","searchResults","search","data","searchProfiles","not_in_team_id","replace","state","filterOptions","show","onHide","option","isSelected","onAdd","onMouseMove","rowSelected","Client4","getProfilePictureUrl","last_picture_update","displayEntireNameForUser","Boolean","is_bot","isGuest","value","username","values","includes","push","page","prevPage","needMoreUsers","users","length","then","onAddCallback","handleHide","numRemainingText","num","buttonSubmitText","localizeMessage","buttonSubmitLoadingText","addError","usersToDisplay","excludeUsers","hasUser","user","filter","includeUsers","Object","options","map","label","handleExit","teamName","name","renderOption","renderAriaLabel","renderValue","handlePageChange","handleDelete","handleAdd","handleSubmit","saving","filterExcludeGuests","role","mapStateToProps","teamId","selectProfilesNotInTeam","mapDispatchToProps","dispatch","bindActionCreators","connect","AdminButtonOutline","render","onClick","children","PropTypes","func","isRequired","string","AdminConsole","extraProps","schemas","adminDefinition","reduce","acc","section","items","item","isHidden","config","license","buildEnterpriseReady","schema","concat","schemaRoutes","url","match","defaultUrl","componentDidMount","getConfig","getEnvironmentConfig","loadRolesIfNeeded","selectChannel","selectTeam","mainRolesLoaded","roles","channel_admin","channel_user","team_admin","team_user","system_admin","system_user","environmentConfig","showNavigationPrompt","setNavigationBlocked","cancelNavigation","confirmNavigation","editRole","updateConfig","isCurrentUserSystemAdmin","unauthorizedRoute","keys","discardChangesModal","onFilterChange","renderRoutes","FILE_STORAGE_DRIVER_LOCAL","FILE_STORAGE_DRIVER_S3","MEBIBYTE","Math","pow","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11","it","isnt","enterpriseReady","both","funcs","either","stateMatches","key","regex","stateEquals","stateIsTrue","stateIsFalse","configIsTrue","group","setting","configIsFalse","licensed","IsLicensed","licensedForFeature","feature","AdminDefinition","about","icon","sectionTitle","t","sectionTitleDefault","title","title_default","searchableStrings","component","LicenseSettings","reporting","system_analytics","SystemAnalytics","team_statistics","TeamAnalytics","server_logs","ServerLogs","user_management","system_user_detail","SystemUserDetail","system_users","siteName","SystemUsers","group_detail","GroupDetails","groups","GroupSettings","team_detail","TeamDetails","teams","TeamSettings","channel_detail","ChannelDetails","channel","ChannelSettings","systemScheme","PermissionSystemSchemeSettings","teamSchemeDetail","PermissionTeamSchemeSettings","teamScheme","permissions","PermissionSchemesSettings","environment","web_server","name_default","settings","type","Constants","SettingsTypes","TYPE_BANNER","label_default","banner_type","TYPE_TEXT","help_text","help_text_default","help_text_markdown","placeholder","placeholder_default","TYPE_BUTTON","action","testSiteURL","loading_default","error_message","error_message_default","success_message","success_message_default","TYPE_BOOL","disabled_help_text","disabled_help_text_default","disabled_help_text_markdown","isDisabled","TYPE_DROPDOWN","DefinitionConstants","display_name","display_name_default","TYPE_NUMBER","reloadConfig","help_text_values","featureName","recycleDatabaseConnections","invalidateAllCaches","database","reloadConfiguration","DatabaseSettings","elasticsearch","documentationLink","ElasticSearchSettings","storage","onConfigLoad","configVal","onConfigSave","displayVal","testS3Connection","image_proxy","smtp","testSmtp","push_notification_server","PushNotificationsSettings","high_availability","ClusterSettings","rate_limiting","logging","boldedLogLevel","previousVal","trackEvent","session_lengths","SessionLengthSettings","metrics","developer","site","customization","max_length","MAX_SITENAME_LENGTH","TYPE_CUSTOM","BrandImageSetting","TYPE_LONG_TEXT","MAX_CUSTOM_BRAND_TEXT_LENGTH","localization","TYPE_LANGUAGE","multiple","no_result","no_result_default","not_present","not_present_default","users_and_teams","TYPE_PERMISSION","permissions_mapping_name","TEAMMATE_NAME_DISPLAY","SHOW_USERNAME","SHOW_NICKNAME_FULLNAME","SHOW_FULLNAME","notifications","announcement_banner","TYPE_COLOR","emoji","posts","CustomUrlSchemesSetting","file_sharing_downloads","public_links","TYPE_GENERATED","authentication","signup","invalidateAllEmailInvites","email","password","max","min","PasswordSettings","mfa","label_markdown","ldap","siteURL","getSiteURL","ldapTest","TYPE_JOBSTABLE","job_type","JobTypes","LDAP_SYNC","render_job","job","ldapUsers","deleteCount","updateCount","linkedLdapGroupsCount","totalLdapGroupsCount","groupDeleteCount","groupMemberDeleteCount","groupMemberAddCount","ldap_users_count","delete_count","update_count","ldap_groups_count","total_ldap_groups_count","group_delete_count","group_member_delete_count","group_member_add_count","ldapGroups","ldap_feature_discovery","LDAPFeatureDiscovery","saml","getSamlMetadataFromIdp","sourceUrlKey","setFromMetadataField","TYPE_FILE_UPLOAD","remove_help_text","remove_help_text_default","remove_button_text","remove_button_text_default","removing_text","removing_text_default","uploading_text","uploading_text_default","fileType","upload_action","uploadIdpSamlCertificate","set_action","setSamlIdpCertificateFromMetadata","remove_action","removeIdpSamlCertificate","siteUrl","ServiceSettings","SiteURL","addSlashIfNeeded","uploadPrivateSamlCertificate","removePrivateSamlCertificate","uploadPublicSamlCertificate","removePublicSamlCertificate","saml_feature_discovery","SAMLFeatureDiscovery","gitlab","newState","GitLabSettings","UserApiEndpoint","newConfig","Url","dynamic_value","oauth","Enable","oauthType","GITLAB_SERVICE","Office365Settings","OFFICE365_SERVICE","GoogleSettings","GOOGLE_SERVICE","guest_access","CustomEnableDisableGuestAccountsSetting","plugins","plugin_management","PluginManagement","custom","CustomPluginSettings","integrations","integration_management","bot_accounts","gif","cors","compliance","data_retention","DataRetentionSettings","message_export","MessageExportSettings","audits","Audits","label_values","custom_terms_of_service","CustomTermsOfServiceSettings","experimental","experimental_features","bleve","BleveSettings","SECTION_NONE","SECTION_TLS","SECTION_STARTTLS","CONNECTION_SECURITY_HELP_TEXT_EMAIL","CONNECTION_SECURITY_HELP_TEXT_LDAP","CONNECTION_SECURITY_HELP_TEXT_WEBSERVER","WEBSERVER_MODE_HELP_TEXT","LOG_LEVEL_OPTIONS","AdminNavbarDropdown","e","navigationBlocked","preventDefault","deferNavigation","GlobalActions","locale","formatMessage","intl","teamToRender","switchTeams","teamsArray","filterAndSortTeamsByDisplayName","defaultMessage","ModalIdentifiers","ABOUT","AboutBuildModal","appTitle","handleLogout","injectIntl","getCurrentLocale","getMyTeams","SiteName","getNavigationBlocked","MenuItemBlockableLinkImpl","to","text","MenuItemBlockableLink","menuItem","displayName","AdminSettings","errorTooltip","elm","currentTarget","querySelector","isElipsis","offsetWidth","scrollWidth","prevState","saveNeeded","doSubmit","callback","serverError","JSON","parse","stringify","getConfigFromState","error","getStateFromConfig","handleSaved","message","serverErrorId","server_error_id","str","defaultValue","n","parseInt","isNaN","minimumValue","path","getConfigValue","stateInit","assign","pathParts","split","obj","pathPart","setConfigValue","setValue","part","slice","renderTitle","renderSettings","canSave","openTooltip","closeTooltip","refs","errorMessage","renderScrollView","renderScrollThumbHorizontal","renderScrollThumbVertical","AdminSidebar","target","sections","idx","generateIndex","query","trim","validSection","indexOf","browserHistory","location","pathname","visibleSections","has","currentSiteName","document","Utils","isVisible","result","Set","add","definition","sidebarSections","forEach","sectionIndex","sidebarItems","itemIndex","active","moreSidebarItems","renderPluginsMenu","customPlugins","PluginSettings","sort","a","b","nameCompare","localeCompare","p","hasSettings","settings_schema","header","footer","hasOwnProperty","searchRef","createRef","getPlugins","current","focus","updateTitle","componentDidUpdate","prevProps","isEqual","handleClearFilter","renderRootMenu","object","bool","intlShape","shape","getLicense","BuildEnterpriseReady","getAdminDefinition","entities","admin","pure","AdminSidebarCategory","propTypes","node","sectionClass","parentLink","defaultProps","link","clonedChildren","Children","child","cloneElement","SidebarHeader","me","currentUser","profilePicture","getCurrentUser","AdminSidebarHeader","AdminSidebarSection","subsection","getLink","className","sidebarItemSafeId","sidebarItem","Bullet","first_name","last_name","nickname","AdminUserCard","body","number","element","loadingAudits","getAudits","h4Style","display","marginBottom","divStyle","clear","reload","isLicensed","content","renderComplianceReports","activityLogHeader","Compliance","Selectors","Banner","description","IndexDir","indexDir","EnableIndexing","enableIndexing","EnableSearching","enableSearching","EnableAutocomplete","enableAutocomplete","canPurgeAndIndex","handleChange","handleSettingChanged","isSetByEnv","BLEVE_POST_INDEXING","getExtraInfo","blevePurgeIndexes","status","JobStatuses","IN_PROGRESS","percent","Number","progress","BlockableLink","blocked","Reflect","deleteProperty","handleClick","BooleanSetting","onChange","helpText","disabled","disabledText","setByEnv","trueText","falseText","HTTP_STATUS_OK","$","fileInput","prop","setSaveNeeded","brandImage","deleteBrandImage","brandImageExists","err","uploadBrandImage","brandImageTimestamp","Date","now","fetch","getBrandImageUrl","resp","registerSaveAction","handleSave","componentWillUnmount","unRegisterSaveAction","image","reader","FileReader","img","onload","attr","readAsDataURL","letbtnDefaultClass","overlay","OVERLAY_TIME_DELAY","handleDeleteButtonPressed","handleImageChange","ClusterName","OverrideHostname","UseIpAddress","UseExperimentalGossip","GossipPort","parseIntNonZero","StreamingPort","showWarning","licenseEnabled","Cluster","configLoadedFromCluster","clusterId","style","warning","clusterTableContainer","overrideHandleChange","ClusterTable","versionMismatch","statusGreen","configMismatch","version","configHash","singleItem","clusterInfos","config_hash","clusterInfo","statusYellow","hostname","ipaddress","clusterCell","clusterTable","array","margin","whiteSpace","ClusterTableContainer","getClusterStatus","load","interval","setInterval","clearInterval","ColorSetting","color","hex","showPicker","closest","getPickerClass","contains","addEventListener","closePicker","removeEventListener","picker","onTextInput","togglePicker","backgroundColor","ComplianceReports","loadingReports","getComplianceReports","runningReport","desc","descInput","emails","emailsInput","keywords","keywordsInput","start_at","fromInput","end_at","toInput","createComplianceReport","enabled","getDateTime","millis","date","list","i","reports","report","params","download","getBaseRoute","user_id","profile","dataCell","create_at","count","runReport","arrayOf","greenStatus","redStatus","marginTop","getUsersForReports","createSelector","profiles","complianceReports","usersMap","r","u","ComplianceSettings","requests","createCompliance","selectComplianceReports","submit","confirmNeeded","showConfirm","cancelSubmit","SchemaAdminSettings","getEnablePluginSetting","plugin","escapedPluginId","escapePathPart","pluginEnabledConfigKey","makeGetPluginSchema","pluginId","getAdminConsoleCustomComponents","customComponents","toLowerCase","bannerType","translate","showTitle","unshift","makeMapStateToProps","getPluginSchema","ownProps","plugin_id","getRoles","SupportSettings","CustomTermsOfServiceEnabled","termsEnabled","CustomTermsOfServiceReAcceptancePeriod","reAcceptancePeriod","DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD","receivedTermsText","termsText","createTermsOfService","handleAPIError","loadingTermsText","res","getTermsOfService","CustomTermsOfService","handleTermsEnabledChange","handleTermsTextChange","MAX_TERMS_OF_SERVICE_TEXT_LENGTH","handleReAcceptancePeriodChange","s","arr","join","valueAsArray","stringToArray","arrayToString","MINIMUM_COLUMN_WIDTH","DataGrid","ref","minimumColumnWidth","fixedColumns","fixedColumnWidth","visibleColumns","columns","availableWidth","clientWidth","column","fixed","nextPage","previousPage","startCount","endCount","total","firstPage","lastPage","prevPageFn","nextPageFn","hiddenColumns","col","handleResize","window","renderRows","rows","rowsContainerStyles","rowsToRender","loadingIndicator","placeholderEmpty","row","index","renderHeader","renderSearch","searchPlaceholder","renderFooter","field","width","textAlign","overflow","DataGridHeader","Component","renderHeaderElement","flexGrow","DataGridRow","renderCell","cells","DataGridSearch","onSearch","handleSearch","EnableMessageDeletion","enableMessageDeletion","EnableFileDeletion","enableFileDeletion","MessageRetentionDays","messageRetentionDays","FileRetentionDays","fileRetentionDays","DeletionJobStartTime","deletionJobStartTime","showConfirmModal","messageList","days","confirmButton","handleSaveConfirmed","handleSaveCanceled","enableMessageDeletionOptions","enableFileDeletionOptions","messageRetentionDaysSetting","fileRetentionDaysSetting","confirmModal","renderConfirmModal","DATA_RETENTION","String","SqlSettings","MaxIdleConns","maxIdleConns","MaxOpenConns","maxOpenConns","Trace","trace","DisableDatabaseSearch","disableDatabaseSearch","QueryTimeout","queryTimeout","ConnMaxLifetimeMilliseconds","parseIntNonNegative","connMaxLifetimeMilliseconds","MinimumHashtagLength","minimumHashtagLength","dataSource","substring","recycleDbButton","recycleDatabaseConnection","driverName","DriverName","DataSource","DropdownSetting","ElasticsearchSettings","ConnectionUrl","connectionUrl","SkipTLSVerification","skipTLSVerification","Username","Password","Sniff","sniff","configTested","success","elasticsearchTest","doTestConfig","ELASTICSEARCH_POST_INDEXING","elasticsearchPurgeIndexes","FeatureDiscovery","titleID","titleDefault","copyID","copyDefault","primaryURL","secondaryURL","imgPath","FileUploadSetting","Setting","uploadingText","onSubmit","files","fileSelected","fileName","upload_button","button","btnClass","GeneratedSetting","crypto","randomBytes","toString","regenerateText","regenerateHelpText","regenerate","addChannelOpen","addTeamOpen","groupID","groupTeams","teamsToAdd","group_id","scheme_admin","team_display_name","team_id","team_type","channels","groupChannels","channelsToAdd","channel_display_name","channel_id","channel_type","itemsToRemove","syncableTypeFromEntryType","Groups","SYNCABLE_TYPE_TEAM","gt","gc","entryType","SYNCABLE_TYPE_CHANNEL","schemeAdmin","rolesToChange","listToUpdate","keyName","stateKey","updatedItems","find","allowReference","originalAllowReference","allow_reference","groupMentionName","hasAllowReferenceChanged","originalGroupMentionName","hasGroupMentionNameChanged","nameSuccessful","lcGroupMentionName","patchGroup","addsSuccessful","handleAddedTeamsAndChannels","removesSuccessful","handleRemovedTeamsAndChannels","rolesSuccessful","handleRolesToUpdate","Promise","all","getGroupSyncables","groupTeamOrChannel","fieldKey","promises","entries","syncableID","patchGroupSyncable","groupTeam","roleChangeKey","auto_add","groupChannel","unlink","members","memberCount","onMentionToggle","onMentionChange","openAddTeam","openAddChannel","loadingTeamsAndChannels","onChangeRoles","onRemoveTeamOrChannel","closeAddTeam","addTeams","closeAddChannel","addChannels","getMembers","getGroup","NeedGroupNameError","GroupNameIsTakenError","InvalidOrReservedGroupNameError","GroupProfile","customID","showAtMention","GroupSettingsToggle","isDefault","onToggle","GroupProfileAndSettings","displayname","mentionname","GroupTeamsAndChannels","collapsed","onRemoveItem","roleToBe","existingTeams","teamEntries","hasChildren","some","channelEntriesByTeam","teamChannels","teamsAndChannelsToEntries","entry","onToggleCollapse","GroupTeamsAndChannelsRow","showConfirmationModal","channelAdmin","teamAdmin","member","dropDown","isNil","currentRole","changeRoles","extraClasses","arrowIcon","toggleCollapse","channelIcon","typeText","displayType","removeItem","classNames","displayAssignedRolesDropdown","GROUP_MEMBERS_PAGE_SIZE","GroupUsers","renderPagination","GroupUsersRow","userId","lastPictureUpdate","getGroupTeams","getGroupChannels","getGroupMembers","getGroupMemberCount","fetchGroup","fetchMembers","fetchGroupSyncables","linkGroupSyncable","unlinkGroupSyncable","GroupRow","onCheckToggle","primary_key","stopPropagation","mattermost_group_id","has_syncables","failed","unlinkHandler","linkHandler","checked","onRowClick","renderLinked","renderActions","LDAP_GROUPS_PAGE_SIZE","FILTER_STATE_SEARCH_KEY_MAPPING","filterIsConfigured","is_configured","filterIsUnconfigured","filterIsLinked","is_linked","filterIsUnlinked","GroupsList","showFilters","searchString","getLdapGroups","q","closeFilters","searchGroups","newChecked","linkSelectedGroups","unlinkSelectedGroups","selectionActionButtonType","hasSelectedLinked","renderSelectionActionButton","RegExp","opts","re","test","handleGroupSearchKeyUp","KeyCodes","ENTER","k","newSearchString","stringFilterPresent","handleFilterCheck","updates","renderSearchFilters","nativeEvent","stopImmediatePropagation","resetFiltersAndSearch","once","getSortedListOfLdapGroups","getLdapGroupsCount","fetchLdapGroups","linkLdapGroup","unlinkLdapGroup","Highlight","debounce","markInstance","unmark","Mark","mark","accuracy","leading","trailing","setTimeout","redrawHighlight","generalConfig","getGeneralConfig","LocalStorageStore","getPreviousTeamId","getCurrentUserId","getTeam","General","DEFAULT_CHANNEL","withRouter","jobs","jobType","getJobsByType","createJob","cancelJob","Table","JobTable","PENDING","SUCCESS","WARNING","ERROR","CANCEL_REQUESTED","CANCELED","getExtraInfoText","last_activity_at","runningMillis","lastActivity","formatDate","year","month","day","formatTime","hour","minute","second","seconds","round","minutes","jobId","getAttribute","cancelButton","handleCancelJob","getCancelButton","getStatus","getFinishAt","getRunLength","handleCreateJob","createJobButtonText","createJobHelpText","getLicenseConfig","uploadLicense","removeLicense","file","uploading","removing","edition","licenseType","licenseKey","issued","IssuedAt","startsAt","StartsAt","expiresAt","ExpiresAt","sku","SkuShortName","Name","Company","Users","removeButtonText","handleRemove","uploadButtonText","userAccessTokensEnabled","EnableUserAccessTokens","updateUserRoles","ManageRolesModal","getStateFromProps","hasPostAllRole","UserUtils","hasPostAllPublicRole","hasUserAccessTokenRole","isSystemAdmin","oldRoles","SYSTEM_USER_ACCESS_TOKEN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","trackRoleChanges","onModalDismissed","handleError","additionalRoles","handlePostAllChange","handlePostAllPublicChange","userAccessTokenContent","handleUserAccessTokenChange","handleSystemAdminChange","getDerivedStateFromProps","nextProps","prevUser","renderContents","getTeamMembersForUser","getTeamsForUser","updateTeamMemberSchemeRoles","removeUserFromTeam","ManageTeamsModal","ManageTeamsDropdown","teamMember","onError","onMemberChange","handleRemoveUserFromTeam","isTeamAdmin","isSysAdmin","makeTeamAdmin","makeMember","group_constrained","removeFromTeam","getTeamMembers","teamMembers","handleMemberRemove","teamList","handleMemberChange","systemAdminIndicator","loadTeamsAndTeamMembers","UNSAFE_componentWillReceiveProps","nextUserId","RemoveFromTeamButton","userAccessTokens","userAccessTokensByUser","getUserAccessTokensForUser","ManageTokensModal","tokenList","userAccessTokensList","token","prevUserId","exportFormats","EXPORT_FORMAT_CSV","EXPORT_FORMAT_ACTIANCE","EXPORT_FORMAT_GLOBALRELAY","EnableExport","enableComplianceExport","ExportFormat","exportFormat","DailyRunTime","exportJobStartTime","GlobalRelaySettings","CustomerType","globalRelayCustomerType","SmtpUsername","globalRelaySmtpUsername","SmtpPassword","globalRelaySmtpPassword","EmailAddress","globalRelayEmailAddress","messages_exported","warning_count","exportFormatOptions","globalRelaySettings","globalRelayEmail","dropdownHelpText","MESSAGE_EXPORT","getJobDetails","MultiSelectSetting","newValue","selected","mustBePresent","notPresent","found","newProps","getOptionLabel","noResultText","calculateValue","errorText","MinimumLength","passwordMinimumLength","MIN_PASSWORD_LENGTH","Lowercase","lowercase","Uppercase","uppercase","Symbol","symbol","MaximumLoginAttempts","maximumLoginAttempts","minLength","MAX_PASSWORD_LENGTH","sampleErrorMsgId","sampleErrorMsg","getSampleErrorMsg","handlePasswordLengthChange","passwordLowercase","handleCheckboxChange","passwordUppercase","passwordNumber","passwordSymbol","EditPostTimeLimitButton","messageID","timeLimit","UNSET_POST_EDIT_TIME_LIMIT","PostEditTimeLimit","INT32_MAX","EditPostTimeLimitModal","val","postEditTimeLimit","onClose","ALLOW_EDIT_POST_ALWAYS","handleOptionChange","ALLOW_EDIT_POST_TIME_LIMIT","handleSecondsChange","save","GuestPermissionsTree","editTimeLimitModalIsVisible","ids","readOnly","selectRow","ADDITIONAL_VALUES","parentRole","scope","toggleGroup","closePostTimeLimitModal","edit_post","editTimeLimitButton","openPostTimeLimitModal","Permissions","CREATE_PRIVATE_CHANNEL","EDIT_POST","DELETE_POST","combined","ADD_REACTION","REMOVE_REACTION","USE_CHANNEL_MENTIONS","LDAPGroups","USE_GROUP_MENTIONS","CREATE_POST","GUEST_INCLUDED_PERMISSIONS","schemes","getSchemes","jobsAreEnabled","RunJobs","clusterIsEnabled","EnableCluster","loadSchemes","loadSchemeTeams","PermissionCheckbox","extraClass","PermissionDescription","open","isInheritLink","parentElement","generateId","inherited","rowType","additionalValues","tooltip","parentPermissionClicked","getRecursivePermissions","permission","PermissionGroup","expanded","permissionsToToggle","fromParent","prevPermissions","PermissionsScope","isInScope","comesFromParent","uniqId","toggleSelectRow","g","toggleSelectSubGroup","anyChecked","anyUnchecked","allPermissionsFromParent","root","hasPermissionsOnScope","permissionsRows","addVals","renderPermission","renderGroup","classes","toggleSelectGroup","toggleExpanded","PermissionRow","toggleSelect","PAGE_SIZE","PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE","loadingMore","scheme","phase2MigrationIsComplete","docLink","teamOverrideUnavalableView","defaultMsg","history","hasCustomSchemes","CustomPermissionsSchemes","teamOverrideView","teamOverrideSchemesMigrationView","loadMoreSchemes","renderTeamOverrideSchemes","status_code","catch","rolesRequest","getRolesByNames","openRoles","all_users","scrollIntoView","behavior","block","toggleRole","selectedPermission","goToSelectedRow","system_guest","team_guest","channel_guest","EXCLUDED_PERMISSIONS","teamAdminPromise","channelAdminPromise","restoreExcludedPermissions","deriveRolesFromAllUsers","guestRoles","restoreGuestPermissions","deriveRolesFromGuests","guests","systemUserPromise","teamUserPromise","channelUserPromise","haveGuestAccountsPermissions","systemGuestPromise","teamGuestPromise","channelGuestPromise","results","roleId","newOpenRoles","newPermissions","splice","newRolesState","DefaultRolePermissions","roleName","GuestAccountsPermissions","loaded","EnableGuestAccounts","togglePermission","showResetDefaultModal","resetDefaults","rolesNeeded","GeneralConstants","TEAM_ADMIN_ROLE","TEAM_USER_ROLE","CHANNEL_ADMIN_ROLE","CHANNEL_USER_ROLE","SYSTEM_GUEST_ROLE","TEAM_GUEST_ROLE","CHANNEL_GUEST_ROLE","every","loadRolesIntoState","componentWillReceiveProps","getSchemeTeams","makeGetSchemeTeams","schemeId","scheme_id","getScheme","loadScheme","patchScheme","updateTeamScheme","createScheme","default_team_guest_role","default_team_user_role","default_team_admin_role","default_channel_guest_role","default_channel_user_role","default_channel_admin_role","teamGuest","teamUser","channelGuest","channelUser","isLoaded","baseTeam","baseChannel","schemeName","schemeDescription","getStateRoles","allUsers","derived","derivedGuests","newScheme","currentTeams","serverTeams","addedTeams","removedTeams","ADD_TEAMS_TO_SCHEME","handleNameChange","handleDescriptionChange","removeTeam","stats","getTeamStats","loadTeamStats","TeamInList","imageURLForTeam","onRemoveTeam","deleteScheme","PermissionsSchemeSummary","MAX_TEAMS_PER_SCHEME_SUMMARY","deleting","handleDeleteConfirmed","handleDeleteCanceled","extraTeams","goToEdit","delete","VIEW_MEMBERS","JOIN_PUBLIC_TEAMS","LIST_PUBLIC_TEAMS","JOIN_PRIVATE_TEAMS","LIST_PRIVATE_TEAMS","PermissionsTree","integrationsGroup","postsGroup","teamsGroup","EnableIncomingWebhooks","MANAGE_INCOMING_WEBHOOKS","EnableOutgoingWebhooks","MANAGE_OUTGOING_WEBHOOKS","EnableOAuthServiceProvider","MANAGE_OAUTH","EnableCommands","MANAGE_SLASH_COMMANDS","EnableCustomEmoji","CREATE_EMOJIS","DELETE_EMOJIS","DELETE_OTHERS_EMOJIS","INVITE_GUEST","INVITE_USER","GET_PUBLIC_LINK","ADD_USER_TO_TEAM","CREATE_TEAM","CREATE_PUBLIC_CHANNEL","MANAGE_PUBLIC_CHANNEL_PROPERTIES","MANAGE_PUBLIC_CHANNEL_MEMBERS","DELETE_PUBLIC_CHANNEL","MANAGE_PRIVATE_CHANNEL_PROPERTIES","MANAGE_PRIVATE_CHANNEL_MEMBERS","DELETE_PRIVATE_CHANNEL","EDIT_OTHERS_POSTS","DELETE_OTHERS_POSTS","updateGroups","pluginStatuses","uploadPlugin","installPluginFromUrl","removePlugin","getPluginStatuses","enablePlugin","disablePlugin","PluginItemState","PluginState","PLUGIN_STATE_NOT_RUNNING","PLUGIN_STATE_STARTING","PLUGIN_STATE_RUNNING","PLUGIN_STATE_FAILED_TO_START","PLUGIN_STATE_FAILED_TO_STAY_RUNNING","PLUGIN_STATE_STOPPING","PluginItemStateDescription","PluginItem","pluginStatus","handleEnable","handleDisable","showInstances","activateButton","activating","deactivating","settingsButton","removeButton","notices","instances","instance","cluster_id","clusterSummary","enable","EnableUploads","enableUploads","AllowInsecureDownloadUrl","allowInsecureDownloadUrl","EnableMarketplace","enableMarketplace","EnableRemoteMarketplace","enableRemoteMarketplace","AutomaticPrepackagedPlugins","automaticPrepackagedPlugins","MarketplaceUrl","marketplaceUrl","RequirePluginSignature","requirePluginSignature","lastMessage","force","confirmOverwriteUploadModal","overwritingUpload","msg","helpSubmitUpload","pluginDownloadUrl","installing","confirmOverwriteInstallModal","overwritingInstall","installFromUrl","showRemoveModal","onConfirm","onCancel","overwriteButton","hideEnablePlugins","ExperimentalSettings","RestrictSystemAdmin","enableUploadButton","pluginsList","pluginsContainer","pluginsListContainer","showRemovePluginModal","uploadHelpText","overwriteUploadPluginModal","renderOverwritePluginModal","handleOverwriteUploadPlugin","handleOverwriteUploadPluginCancel","removePluginModal","renderRemovePluginModal","handleRemovePlugin","handleRemovePluginCancel","renderEnablePluginsSetting","handleUpload","handleSubmitUpload","getMarketplaceUrlHelpText","resolveRemoveModal","PUSH_NOTIFICATIONS_OFF","PUSH_NOTIFICATIONS_MHPNS","PUSH_NOTIFICATIONS_MTPNS","PUSH_NOTIFICATIONS_CUSTOM","PushSettings","pushNotificationServerType","agree","pushNotificationServer","MHPNS","MTPNS","EmailSettings","SendPushNotifications","PushNotificationServer","MaxNotificationsPerChannel","maxNotificationsPerChannel","pushNotificationServerTypes","sendHelpText","pushServerHelpText","tosCheckbox","handleAgreeChange","handleDropdownChange","isPushNotificationServerSetByEnv","RadioSetting","RemoveFileSetting","remove_button","removingText","RequestButton","busy","fail","doRequest","requestAction","errMsg","includeDetailedError","detailed_error","saveConfigAction","showSuccessMessage","successMessage","widgetClassNames","handleRequest","loadingText","buttonText","alternativeActionElement","ResetEmailModal","isEmail","adminResetEmail","onModalSubmit","urlClass","errorMsg","doCancel","passwordConfig","currentUserId","getPasswordConfig","updateUserPassword","ResetPasswordModal","currentPassword","serverErrorCurrentPass","valid","serverErrorNewPass","auth_service","newPasswordFocus","urlClassCurrentPass","minimumLength","requireLowercase","requireNumber","requireSymbol","requireUppercase","revokeUserAccessToken","RevokeTokenButton","response","tokenId","confirmNeededId","showConfirmId","rolesBinding","updatedRoles","rolesFromMapping","isMarkdown","helpTextValues","helpTextDefault","disabled_help_text_values","handleRequestAction","successCallback","metadata","Map","tsetting","inputData","get","buildSettingFunctions","onSetData","renderHelpText","renderLabel","inputType","handlePermissionChange","o","selectedValue","selectedOptionForHelpText","locales","I18n","l","order","changedId","renderBanner","regenerate_help_text","handleGeneratedChange","confirm","clientWarning","setData","filename","errorCallback","removeFile","uploadFile","idpCertificateFileError","CustomComponent","componentInstance","saveAction","indexOfSaveAction","saveActions","settingsList","hasSaveActionError","hasError","customComponentWrapperClass","hybridSchemaAndComponent","isPlugin","buildTextSetting","buildColorSetting","buildBoolSetting","buildPermissionSetting","buildDropdownSetting","TYPE_RADIO","buildRadioSetting","buildBannerSetting","buildGeneratedSetting","TYPE_USERNAME","buildUsernameSetting","buildButtonSetting","buildLanguageSetting","buildJobsTableSetting","buildFileUploadSetting","buildCustomSetting","prevSchemaId","getSettingValue","previousValue","mappingValueFromRoles","default","getSetting","unescapePathPart","SchemaText","textDefault","textValues","html","marked","breaks","sanitize","renderer","CustomRenderer","__html","isTranslated","renderTranslated","renderUntranslated","oneOfType","logs","getLogs","Logs","NEXT_BUTTON_TIMEOUT","nextDisabled","nextTimeoutId","logPanel","scrollTop","scrollHeight","nextButton","previousButton","perPage","fontFamily","loadingLogs","MINIMUM_IDLE_TIMEOUT","ExtendSessionLengthWithActivity","extendSessionLengthWithActivity","SessionLengthWebInDays","sessionLengthWebInDays","SessionLengthMobileInDays","sessionLengthMobileInDays","SessionLengthSSOInDays","sessionLengthSSOInDays","SessionCacheInMinutes","sessionCacheInMinutes","SessionIdleTimeoutInMinutes","parseIntZeroOrMin","sessionIdleTimeoutInMinutes","sessionLengthWebHelpText","sessionLengthMobileHelpText","sessionLengthSSOHelpText","sessionTimeoutSetting","Settings","inputId","SettingsGroup","container","wrapperClass","contentClass","getUser","mfaEnabled","EnableMultifactorAuthentication","getProfiles","updateUserActive","addUserToTeam","teamIds","refreshTeams","finally","showPasswordModal","onUpdateActiveResult","showDeactivateMemberModal","adminResetMfa","emailChanged","EMAIL_SERVICE","confirmButtonClass","deactivateMemberButton","handleDeactivateMember","handleDeactivateCancel","delete_at","handleMakeActive","handleShowDeactivateMemberModal","mfa_active","handleResetMfa","searching","getAuthenticationText","authLine","service","LDAP_SERVICE","SAML_SERVICE","toUpperCase","deactivateMemberModal","currentRoles","renderDeactivateMemberModal","position","handleEmailChange","doPasswordReset","renderActivateDeactivate","renderRemoveMFA","setTeamsData","doPasswordResetSubmit","doPasswordResetDismiss","AbstractList","performSearch","getTeamsData","onPageChangedCallback","getPaging","headerLabels","headerLabel","emptyListTextId","emptyListTextDefaultMessage","pageStart","pageEnd","pageData","renderRow","renderHeaderLabels","removeGroup","TeamList","minWidth","marginLeft","memberships","mergeTeamsWithMemberships","teamsWithMemberships","userDetailCallback","getTeamsAndMemberships","doRemoveUserFromTeam","doMakeUserTeamAdmin","doMakeUserTeamMember","TeamListDropdown","isAdmin","isMember","scheme_user","scheme_guest","showMakeTeamAdmin","showMakeTeamMember","TeamRow","allow_open_invite","teamIconUrl","renderTeamType","renderTeamRole","enableUserAccessTokens","experimentalEnableAuthenticationTransfer","ExperimentalEnableAuthenticationTransfer","views","systemUsersSearch","totalUsers","searchTerm","SearchUserTeamFilter","ALL_USERS","analytics","Stats","TOTAL_USERS","TOTAL_INACTIVE_USERS","NO_TEAM","total_member_count","getTeamsList","getUsers","getTeams","getUserAccessToken","loadProfilesAndTeamMembers","setSystemUsersSearch","loadProfilesWithoutTeam","revokeSessionsForAllUsers","logError","getNonBotUsers","SystemUsersList","USER_ID_LENGTH","filters","userSelectorOptionsFromFilter","searchProfilesInTeam","getProfilesWithoutTeam","getProfilesInTeam","showManageTeamsModal","showManageRolesModal","showManageTokensModal","showEmailModal","getInfoForUser","info","userID","renderCount","isSearch","extraInfo","SystemUsersDropdown","doEmailReset","doManageTeams","doManageRoles","doManageTokens","onTermChange","UserListRowWithError","doManageTeamsDismiss","doManageRolesDismiss","doManageTokensDismiss","doEmailResetSubmit","doEmailResetDismiss","usersPerPage","focusOnMount","renderFilterRow","doSearch","getUserOptionsFromFilter","PROFILE_CHUNK_SIZE","getStandardAnalytics","loadDataForTeam","emitUserLoggedOutEvent","showRevokeAllSessionsModal","searchUserOptionsFromFilter","UserSearchOptions","WITHOUT_TEAM","allow_inactive","getUserByTokenOrId","SEARCH_TIMEOUT_MILLISECONDS","getUserById","revokeAllButton","handleRevokeAllSessions","handleRevokeAllSessionsCancel","handleTeamChange","handleFilterChange","UserFilters","SYSTEM_ADMIN","SYSTEM_GUEST","INACTIVE","revokeAllUsersModal","renderRevokeAllUsersModal","handleTermChange","REVOKE_USER_ACCESS_TOKEN","handleShowRevokeAllSessionsModal","bots","getBotAccounts","revokeAllSessionsForUser","promoteGuestToUser","demoteUserToGuest","loadBots","ROWS_FROM_BOTTOM_TO_OPEN_UP","TOTAL_USERS_TO_OPEN_UP","shouldDisableBotsWhenOwnerIsDeactivated","Integrations","START_PAGE_NUM","confirmationMessage","messageForUsersWithBotAccounts","bot","owner_id","showRevokeSessionsModal","showPromoteToUserModal","showDemoteToGuestModal","promoteUserButton","handlePromoteToUserConfirm","handlePromoteToUserCancel","demoteGuestButton","handleDemoteToGuestConfirm","handleDemoteToGuestCancel","revokeUserButtonButton","handleRevokeSessions","handleRevokeSessionsCancel","messageId","DisableBotsWhenOwnerIsDeactivated","showMakeActive","showMakeNotActive","showManageTeams","showRevokeSessions","showMfaReset","disableActivationToggle","revokeSessionsModal","renderRevokeSessionsModal","promoteToUserModal","renderPromoteToUserModal","demoteToGuestModal","renderDemoteToGuestModal","renderAccessToken","handleManageRoles","handleManageTeams","handleManageTokens","handleResetPassword","handleResetEmail","handlePromoteToUser","handleDemoteToGuest","handleShowRevokeSessionsModal","offset","getData","noPadding","ChannelsSettings","isSynced","isPublic","isOriginallyPublic","OPEN_CHANNEL","isPrivacyChanging","processGroupsChange","gid","totalGroups","cloneDeep","channelRole","currentValueIndex","channelPermissions","findIndex","currentValue","CHANNEL_MODERATED_PERMISSIONS","originalObj","groupIDs","allGroups","showConvertConfirmModal","showRemoveConfirmModal","showConvertAndRemoveConfirmModal","usersToRemoveCount","usersToAdd","usersToRemove","rolesToUpdate","origGroups","channelID","convert","updateChannelPrivacy","PRIVATE_CHANNEL","patchChannel","patchChannelSyncable","resultWithError","actionsToAwait","getGroups","getChannelModerations","manageMembersIndex","MANAGE_MEMBERS","updatedManageMembers","patchChannelPermissionsArray","patchChannelModerationsResult","patchChannelModerations","restrictChannelMentions","privacyChanging","usersToAddList","usersToRemoveList","userRolesToUpdate","usersToUpdate","userActions","addChannelMember","removeChannelMember","updateChannelMemberSchemeRoles","userResult","userResultWithError","roleActions","schemeUser","missingGroup","og","removedGroups","hideConvertConfirmModal","hideRemoveConfirmModal","hideConvertAndRemoveConfirmModal","setToggles","channelPermissionsChanged","guestAccountsEnabled","handleGroupChange","handleGroupRemoved","setNewGroupRole","addUserToRemove","addUsersToAdd","addRolesToUpdate","onSave","getChannel","currentCreatePostRoles","membersMinusGroupMembers","total_count","ex","ChannelGroups","onGroupRemoved","synced","AddGroupsToChannelModal","skipCommit","includeGroups","excludeGroups","ChannelMembers","loadProfilesAndReloadChannelMembers","channelId","onRemoveCallback","setModalSearchTerm","membership","updateRole","channelMembers","totalCount","ChannelInviteModal","loadPage","removeUser","updateMembership","searchTimeoutId","getChannelStats","setStateLoading","clearTimeout","searchProfilesAndChannelMembers","in_channel_id","searchUsersToAdd","filterProfilesMatchingTerm","filteredProfilesMap","filterProfiles","profileListToMap","doGetProfilesInChannel","makeGetProfilesInChannel","getChannelMembersInChannels","getAllChannelStats","member_count","pinnedpost_count","modalSearch","searchProfilesInChannel","PERIOD_TO_SLASH_REGEX","formattedMessages","defineMessages","descriptionMembers","disabledGuests","disabledMembers","disabledBoth","CREATE_REACTIONS","disabledGuestsDueToCreatePosts","disabledMembersDueToCreatePosts","disabledBothDueToCreatePosts","subtitle","subtitleMembers","ChannelModerationTableRow","descriptionId","descriptionDefaultMessage","errorMessages","Roles","GUESTS","guestsDisabled","MEMBERS","membersDisabled","ChannelModeration","isGuestsDisabled","isMembersDisabled","createPostsKey","createPostsObject","disabledKey","schemeLink","teamSchemeID","teamSchemeDisplayName","scheme_name","scheme_link","onChannelPermissionsChanged","errorMessagesToDisplay","SyncGroupsToggle","AllowAllToggle","ChannelModes","ChannelProfile","getGroupsAssociatedToChannel","getAllGroups","fetchChannelModerations","fetchChannel","fetchTeam","fetchAssociatedGroups","ChannelList","handleChannelSearchKeyUp","searchBarChangeHandler","resetSearch","searchAllChannels","searchMode","searchTotalCount","pageResetKey","Array","pagination","onChannelClick","absProps","getDataBySearch","searchBar","ChannelRow","handleRowClick","compareByDisplayName","getSortedListOfChannels","getAllChannels","c","List","ConvertAndRemoveConfirmModal","toPublic","removeAmount","toPublicMsg","toPrivateMsg","convertMessageId","toPublicTitle","toPrivateTitle","titleId","toPublicConfirmMsg","toPrivateConfirmMsg","confirmMsgId","amount","modalClass","ConvertConfirmModal","NeedGroupsError","isChannel","NeedDomainsError","UsersWillBeRemovedError","UsersToBeRemovedModal","Header","GroupList","displayCurrentRole","displayRoleToBe","AdminGroupUsers","AdminGroupUsersRow","padding","renderRolesColumn","renderGroupsColumn","isModeSync","resolve","LineSwitch","subTitle","singleLine","toggled","offText","onText","last","RemoveConfirmModal","inChannel","messageChannel","messageTeam","buttonClass","SaveChangesPanel","cancelLink","teamID","getGroupsAssociatedToTeam","patchTeam","showRemoveConfirmation","allAllowedChecked","allowedDomainsChecked","allowedDomains","syncChecked","patchTeamPromise","allowed_domains","patchTeamSyncable","hideRemoveUsersModal","showRemoveUsersModal","TeamGroups","AddGroupsToTeamModal","getMembersInTeams","loadProfilesAndReloadTeamMembers","searchProfilesAndTeamMembers","TeamMembers","AllowedDomainsToggle","TeamModes","TeamProfile","TeamsSettings","getSortedListOfTeams","pageSize","fetchTeams","searchTeams","handleTeamSearchKeyUp","onTeamClick","renderManagementMethodText","AdminTextSetting","sharedProps","isTextDisabled","autocompleteUsers","UserAutocompleteSetting","userSuggestionProviders","GenericUserProvider","handleUserSelected","SuggestionList","ROW_HEIGHT","UserGrid","includeUsersCount","excludeUsersCount","getVisibleTotalCount","getPaginationProps","membershipsToUpdate","forceUpdate","includeUsersList","numberOfUsersRemoved","pagesOfUsersRemoved","floor","pageToLoad","newMembership","new","remove","getRows","getColumns","minHeight","UserGridName","UserGridRemove","UserGridRoleDropdown","makeAdmin","handleUpdateMembership","getDropDownOptions","getCurrentRole","localizedRole","getLocalizedRole","ariaLabel","getAriaLabel","dropdownEnabled","showMakeAdmin","showMakeMember","handleMakeAdmin","handleMakeUser","DoughnutChart","update","canvas","el","ReactDOM","findDOMNode","ctx","getContext","dataCopy","chart","Chart","initChart","destroy","height","formatChannelDoughtnutData","totalPublic","totalPrivate","channelTypeData","labels","datasets","hoverBackgroundColor","formatPostDoughtnutData","filePosts","hashtagPosts","totalPosts","postTypeData","formatPostsPerDayData","chartData","fillColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","synchronizeChartData","chartDatas","formatUsersWithPostsPerDayData","LineChart","legend","chartOptions","currentData","hasData","hasChart","StatisticCount","StatTypes","AdminActions","skippedIntensiveQueries","TOTAL_POSTS","postCountsDay","POST_PER_DAY","botPostCountsDay","BOT_POST_PER_DAY","userCountsWithPostsDay","USERS_WITH_POSTS_PER_DAY","banner","postCount","postTotalGraph","botPostTotalGraph","activeUserGraph","advancedStats","advancedGraphs","sessionCount","commandCount","incomingCount","outgoingCount","TOTAL_SESSIONS","TOTAL_COMMANDS","TOTAL_IHOOKS","TOTAL_OHOOKS","TOTAL_WEBSOCKET_CONNECTIONS","TOTAL_MASTER_DB_CONNECTIONS","TOTAL_READ_DB_CONNECTIONS","TOTAL_PUBLIC_CHANNELS","TOTAL_PRIVATE_GROUPS","TOTAL_FILE_POSTS","TOTAL_HASHTAG_POSTS","postTypeGraph","userCount","teamCount","TOTAL_TEAMS","channelCount","dailyActiveUsers","DAILY_ACTIVE_USERS","monthlyActiveUsers","MONTHLY_ACTIVE_USERS","firstRow","secondRow","thirdRow","TableChart","tip","LAST_ANALYTICS_TEAM","BrowserStore","getGlobalItem","initialTeam","teamAnalytics","recentlyActiveUsers","newUsers","setGlobalItem","totalPostsCount","userActiveGraph","recentActiveUsers","formatRecentUsersData","newlyCreatedUsers","formatNewUsersData","aName","bName","formattedData","getMonthLong","CHANNELS_PER_PAGE","ChannelSelectorModal","onChannelsSelected","v","loadingState","loadingChannels","setChannelsLoadingState","loadChannels","stateChannelIDs","stateChannel","serverChannel","compareChannels","multiselectComponent","searchChannels","addValue","DiscardChangesModal","startsWith","loadTeams","TeamSelectorModal","TEAMS_PER_PAGE","onTeamsSelected","confirmed","modalID","confirmAddModal","confirmAddTeam","loadingTeams","setTeamsLoadingState","confirmButtonText","currentSchemeId","alreadySelected","Toggle","getStatusForUserId","UserListRow","errorObj","buttons","Action","actionProps","actionUserProps","emailStyle","userCountID","userCountEmail","AdminHeader","AdminPanel","onHeaderClick","subtitleId","subtitleDefault","subtitleValues","AdminPanelTogglable","AdminPanelWithButton","onButtonClick","buttonTextId","buttonId","buttonTextDefault","AdminPanelWithLink","linkTextId","linkTextDefault","FormattedAdminHeader","AccordionToggleIcon","AtIcon","CheckboxCheckedIcon","CheckboxPartialIcon","EllipsisHorizontalIcon","EmailIcon","NextIcon","additionalClassName","PreviousIcon","ReloadIcon","ShieldOutlineIcon","adminConsoleReducers","reducers","reducer","adminConsoleCustomComponents","extractTextsFromSection","texts","searchableString","adminDefinitionsToUrlsAndTexts","FlexSearch","addToIndex","getPluginEntries","extractTextsFromPlugin","extractTextFromSetting","stripMarkdown","settingsTexts","pluginsObj","UserListOptions","ROLE","ALLOW_INACTIVE","MAPPING","enableTeamCreation","true","shouldHave","false","editOthersPosts","enableOnlyAdminIntegrations","mappingValues","rolesClone","purgeNonPertinentRoles","mappingKey","mutateRolesBasedOnMapping","roleClone","originalPermissionSet","newPermissionSet","difference","x","size","mappingPartIterator","allConditionsAreMet","Error","pertinentRoleNames","roleNamesInMapping","roleRules","addPermissionToRole","removePermissionFromRole","roleNames","v1","v2","names","mappingPart","hasUnmetCondition","permissionIndex"],"mappings":"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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvErB;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,MAAM8C,yBAAyB,GAAG,OAAlC;AACA,MAAMC,sBAAsB,GAAG,UAA/B;AACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAAS,IAAT,EAAe,CAAf,CAAjB;AAEA,MAAMC,sCAAsC,GAAG,aAA/C;AACA,MAAMC,wCAAwC,GAAG,eAAjD;AACA,MAAMC,wCAAwC,GAAG,eAAjD;AAEA,MAAMC,sCAAsC,GAAG,cAA/C;AACA,MAAMC,wCAAwC,GAAG,cAAjD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,EAAE,GAAG;AACdC,MAAI,EAAG5D,IAAD,IAAU,CAACa,MAAD,EAASnF,KAAT,EAAgBoF,OAAhB,EAAyB+C,eAAzB,KAA6C,CAAC7D,IAAI,CAACa,MAAD,EAASnF,KAAT,EAAgBoF,OAAhB,EAAyB+C,eAAzB,CADpD;AAEdC,MAAI,EAAE,CAAC,GAAGC,KAAJ,KAAc,CAAClD,MAAD,EAASnF,KAAT,EAAgBoF,OAAhB,KAA4B;AAC5C,SAAK,MAAMd,IAAX,IAAmB+D,KAAnB,EAA0B;AACtB,UAAI,CAAC/D,I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","file":"7.bf27234959ca64d11090.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport {displayEntireNameForUser, localizeMessage, isGuest} from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport GuestBadge from 'components/widgets/badges/guest_badge';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport MultiSelect, {Value} from 'components/multiselect/multiselect';\nimport AddIcon from 'components/widgets/icons/fa_add_icon';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = 20;\n\ntype UserProfileValue = Value & UserProfile;\n\ntype Props = {\n    team: Team;\n    users: UserProfile[];\n    filterExcludeGuests?: boolean;\n    excludeUsers: { [userId: string]: UserProfile };\n    includeUsers: { [userId: string]: UserProfile };\n    onAddCallback: (users: UserProfile[]) => void;\n    onHide?: () => void;\n\n    actions: {\n        getProfilesNotInTeam: (teamId: string, groupConstrained: boolean, page: number, perPage?: number, options?: {}) => Promise<{ data: UserProfile[] }>;\n        searchProfiles: (term: string, options?: any) => Promise<{ data: UserProfile[] }>;\n    };\n}\n\ntype State = {\n    searchResults: UserProfile[];\n    values: UserProfileValue[];\n    show: boolean;\n    search: boolean;\n    saving: boolean;\n    addError: null;\n    loading: boolean;\n    filterOptions: {};\n}\n\nexport default class AddUsersToTeamModal extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        let filterOptions: {} = {};\n        if (props.filterExcludeGuests) {\n            filterOptions = {role: 'system_user'};\n        }\n\n        this.state = {\n            searchResults: [],\n            values: [],\n            show: true,\n            search: false,\n            saving: false,\n            addError: null,\n            loading: true,\n            filterOptions,\n        };\n    }\n    public componentDidMount = async () => {\n        await this.props.actions.getProfilesNotInTeam(this.props.team.id, false, 0, USERS_PER_PAGE * 2);\n        this.setUsersLoadingState(false);\n    }\n\n    private setUsersLoadingState = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    public search = async (term: string) => {\n        this.setUsersLoadingState(true);\n        let searchResults: UserProfile[] = [];\n        const search = term !== '';\n        if (search) {\n            const {data} = await this.props.actions.searchProfiles(term, {not_in_team_id: this.props.team.id, replace: true, ...this.state.filterOptions});\n            searchResults = data;\n        } else {\n            await this.props.actions.getProfilesNotInTeam(this.props.team.id, false, 0, USERS_PER_PAGE * 2);\n        }\n        this.setState({loading: false, searchResults, search});\n    }\n\n    public handleHide = () => {\n        this.setState({show: false});\n    }\n\n    private handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    private renderOption = (option: UserProfileValue, isSelected: boolean, onAdd: (user: UserProfileValue) => void, onMouseMove: (user: UserProfileValue) => void) => {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    size='md'\n                />\n                <div className='more-modal__details'>\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                        <BotBadge\n                            show={Boolean(option.is_bot)}\n                            className='badge-popoverlist'\n                        />\n                        <GuestBadge\n                            show={isGuest(option)}\n                            className='popoverlist'\n                        />\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <AddIcon/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private renderValue = (value: { data: UserProfileValue }): string => {\n        return value.data?.username || '';\n    }\n\n    private renderAriaLabel = (option: UserProfileValue): string => {\n        return option?.username || '';\n    }\n\n    private handleAdd = (value: UserProfileValue) => {\n        const values: UserProfileValue[] = [...this.state.values];\n        if (!values.includes(value)) {\n            values.push(value);\n        }\n        this.setState({values});\n    }\n\n    private handleDelete = (values: UserProfileValue[]) => {\n        this.setState({values});\n    }\n\n    private handlePageChange = (page: number, prevPage: number) => {\n        if (page > prevPage) {\n            const needMoreUsers = (this.props.users.length / USERS_PER_PAGE) <= page + 1;\n            this.setUsersLoadingState(needMoreUsers);\n            this.props.actions.getProfilesNotInTeam(this.props.team.id, false, page, USERS_PER_PAGE * 2).\n                then(() => this.setUsersLoadingState(false));\n        }\n    };\n\n    private handleSubmit = () => {\n        this.props.onAddCallback(this.state.values);\n        this.handleHide();\n    }\n\n    public render = (): JSX.Element => {\n        const numRemainingText = (\n            <div id='numPeopleRemaining'>\n                <FormattedMessage\n                    id='multiselect.numPeopleRemaining'\n                    defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                    values={{\n                        num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                    }}\n                />\n            </div>\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n        const buttonSubmitLoadingText = localizeMessage('multiselect.adding', 'Adding...');\n\n        let addError = null;\n        if (this.state.addError) {\n            addError = (<div className='has-error col-sm-12'><label className='control-label font-weight--normal'>{this.state.addError}</label></div>);\n        }\n\n        let usersToDisplay: UserProfile[] = [];\n        usersToDisplay = this.state.search ? this.state.searchResults : this.props.users;\n        if (this.props.excludeUsers) {\n            const hasUser = (user: UserProfile) => !this.props.excludeUsers[user.id];\n            usersToDisplay = usersToDisplay.filter(hasUser);\n        }\n        if (this.props.includeUsers) {\n            const includeUsers = Object.values(this.props.includeUsers);\n            usersToDisplay = [...usersToDisplay, ...includeUsers];\n        }\n\n        const options = usersToDisplay.map((user) => {\n            return {label: user.username, value: user.id, ...user};\n        });\n\n        return (\n            <Modal\n                id='addUsersToTeamModal'\n                dialogClassName={'a11y__modal more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title componentClass='h1'>\n                        <FormattedMessage\n                            id='add_users_to_team.title'\n                            defaultMessage='Add New Members to {teamName} Team'\n                            values={{\n                                teamName: (\n                                    <strong>{this.props.team.name}</strong>\n                                ),\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {addError}\n                    <MultiSelect\n                        key='addUsersToTeamKey'\n                        options={options}\n                        optionRenderer={this.renderOption}\n                        ariaLabelRenderer={this.renderAriaLabel}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.handleAdd}\n                        handleSubmit={this.handleSubmit}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        buttonSubmitLoadingText={buttonSubmitLoadingText}\n                        saving={this.state.saving}\n                        loading={this.state.loading}\n                        placeholderText={localizeMessage('multiselect.placeholder', 'Search and add members')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Team} from 'mattermost-redux/types/teams';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {getProfilesNotInTeam, searchProfiles} from 'mattermost-redux/actions/users';\n\nimport {getProfilesNotInTeam as selectProfilesNotInTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport AddUsersToTeamModal from './add_users_to_team_modal';\n\ntype Props = {\n    team: Team;\n    filterExcludeGuests?: boolean;\n};\n\ntype Actions = {\n    getProfilesNotInTeam: (teamId: string, groupConstrained: boolean, page: number, perPage?: number, options?: {}) => Promise<{ data: UserProfile[] }>;\n    searchProfiles: (term: string, options?: any) => Promise<{ data: UserProfile[] }>;\n};\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const {id: teamId} = props.team;\n\n    let filterOptions: {} = {};\n    if (props.filterExcludeGuests) {\n        filterOptions = {role: 'system_user'};\n    }\n\n    const users: UserProfile[] = selectProfilesNotInTeam(state, teamId, filterOptions);\n\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getProfilesNotInTeam,\n            searchProfiles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsersToTeamModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './admin_button_outline.scss';\n\nexport default class AdminButtonOutline extends React.PureComponent {\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n        children: PropTypes.string.isRequired,\n    }\n    render() {\n        return (\n            <button\n                onClick={this.props.onClick}\n                className={'AdminButtonOutline btn btn-primary'}\n            >\n                {this.props.children}\n            </button>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_button_outline.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport 'bootstrap';\n\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport {Role} from 'mattermost-redux/types/roles';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport ModalController from 'components/modal_controller';\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings';\nimport DiscardChangesModal from 'components/discard_changes_modal';\n\nimport AdminSidebar from './admin_sidebar';\nimport Highlight from './highlight';\n\ntype Props = {\n    config: Record<string, any>;\n    adminDefinition: Record<string, any>;\n    environmentConfig?: Record<string, any>;\n    license: Record<string, any>;\n    unauthorizedRoute: string;\n    buildEnterpriseReady: boolean;\n    roles: {\n        [x: string]: string | object;\n    };\n    match: { url: string };\n    showNavigationPrompt: boolean;\n    isCurrentUserSystemAdmin: boolean;\n    actions: {\n        getConfig: () => ActionFunc;\n        getEnvironmentConfig: () => ActionFunc;\n        setNavigationBlocked: () => void;\n        confirmNavigation: () => void;\n        cancelNavigation: () => void;\n        loadRolesIfNeeded: (roles: Iterable<string>) => ActionFunc;\n        selectChannel: (channelId: string) => void;\n        selectTeam: (teamId: string) => void;\n        editRole: (role: Role) => void;\n        updateConfig?: (config: Record<string, any>) => ActionFunc;\n    };\n}\n\ntype State = {\n    filter: string;\n}\n\n// not every page in the system console will need the license and config, but the vast majority will\ntype ExtraProps = {\n    license?: Record<string, any>;\n    config?: Record<string, any>;\n    environmentConfig?: Record<string, any>;\n    setNavigationBlocked?: () => void;\n    roles?: {\n        [x: string]: string | object;\n    };\n    editRole?: (role: Role) => void;\n    updateConfig?: (config: Record<string, any>) => ActionFunc;\n}\n\ntype Item = {\n    isHidden?: (config?: Record<string, any>, state?: Record<string, any>, license?: Record<string, any>, buildEnterpriseReady?: boolean) => void;\n    schema: Record<string, any>;\n    url: string;\n}\n\nexport default class AdminConsole extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            filter: '',\n        };\n    }\n\n    public componentDidMount(): void {\n        this.props.actions.getConfig();\n        this.props.actions.getEnvironmentConfig();\n        this.props.actions.loadRolesIfNeeded(['channel_user', 'team_user', 'system_user', 'channel_admin', 'team_admin', 'system_admin']);\n        this.props.actions.selectChannel('');\n        this.props.actions.selectTeam('');\n    }\n\n    private onFilterChange = (filter: string) => {\n        this.setState({filter});\n    }\n\n    private mainRolesLoaded(roles: Record<string, any>) {\n        return (\n            roles &&\n            roles.channel_admin &&\n            roles.channel_user &&\n            roles.team_admin &&\n            roles.team_user &&\n            roles.system_admin &&\n            roles.system_user\n        );\n    }\n\n    private renderRoutes = (extraProps: ExtraProps) => {\n        const schemas = Object.values(this.props.adminDefinition).reduce((acc, section: Item[]) => {\n            const items = Object.values(section).filter((item: Item) => {\n                if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                    return false;\n                }\n                if (!item.schema) {\n                    return false;\n                }\n                return true;\n            });\n            return acc.concat(items);\n        }, []);\n        const schemaRoutes = schemas.map((item: Item) => {\n            return (\n                <Route\n                    key={item.url}\n                    path={`${this.props.match.url}/${item.url}`}\n                    render={(props) => (\n                        <SchemaAdminSettings\n                            {...extraProps}\n                            {...props}\n                            schema={item.schema}\n                        />\n                    )}\n                />\n            );\n        });\n        const defaultUrl = schemas[0].url;\n\n        return (\n            <Switch>\n                {schemaRoutes}\n                {<Redirect to={`${this.props.match.url}/${defaultUrl}`}/>}\n            </Switch>\n        );\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            license,\n            config,\n            environmentConfig,\n            showNavigationPrompt,\n            roles,\n        } = this.props;\n        const {setNavigationBlocked, cancelNavigation, confirmNavigation, editRole, updateConfig} = this.props.actions;\n\n        if (!this.props.isCurrentUserSystemAdmin) {\n            return (\n                <Redirect to={this.props.unauthorizedRoute}/>\n            );\n        }\n\n        if (!this.mainRolesLoaded(this.props.roles)) {\n            return null;\n        }\n\n        if (Object.keys(config).length === 0) {\n            return <div/>;\n        }\n\n        if (config && Object.keys(config).length === 0 && config.constructor === Object) {\n            return (\n                <div className='admin-console__wrapper'>\n                    <AnnouncementBar/>\n                    <div className='admin-console'/>\n                </div>\n            );\n        }\n\n        const discardChangesModal: JSX.Element = (\n            <DiscardChangesModal\n                show={showNavigationPrompt}\n                onConfirm={confirmNavigation}\n                onCancel={cancelNavigation}\n            />\n        );\n\n        const extraProps: ExtraProps = {\n            license,\n            config,\n            environmentConfig,\n            setNavigationBlocked,\n            roles,\n            editRole,\n            updateConfig,\n        };\n        return (\n            <div\n                className='admin-console__wrapper'\n                id='adminConsoleWrapper'\n            >\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <AdminSidebar onFilterChange={this.onFilterChange}/>\n                <div className='admin-console'>\n                    <Highlight filter={this.state.filter}>\n                        {this.renderRoutes(extraProps)}\n                    </Highlight>\n                </div>\n                {discardChangesModal}\n                <ModalController/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\nimport {\n    ldapTest, invalidateAllCaches, reloadConfig, testS3Connection,\n    removeIdpSamlCertificate, uploadIdpSamlCertificate,\n    removePrivateSamlCertificate, uploadPrivateSamlCertificate,\n    removePublicSamlCertificate, uploadPublicSamlCertificate,\n    invalidateAllEmailInvites, testSmtp, testSiteURL, getSamlMetadataFromIdp, setSamlIdpCertificateFromMetadata,\n} from 'actions/admin_actions';\nimport SystemAnalytics from 'components/analytics/system_analytics';\nimport TeamAnalytics from 'components/analytics/team_analytics';\nimport PluginManagement from 'components/admin_console/plugin_management';\nimport CustomPluginSettings from 'components/admin_console/custom_plugin_settings';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport Audits from './audits';\nimport CustomUrlSchemesSetting from './custom_url_schemes_setting.jsx';\nimport CustomEnableDisableGuestAccountsSetting from './custom_enable_disable_guest_accounts_setting';\nimport LicenseSettings from './license_settings';\nimport PermissionSchemesSettings from './permission_schemes_settings';\nimport PermissionSystemSchemeSettings from './permission_schemes_settings/permission_system_scheme_settings';\nimport PermissionTeamSchemeSettings from './permission_schemes_settings/permission_team_scheme_settings';\nimport SystemUsers from './system_users';\nimport SystemUserDetail from './system_user_detail';\nimport ServerLogs from './server_logs';\nimport BrandImageSetting from './brand_image_setting/brand_image_setting.jsx';\nimport GroupSettings from './group_settings/group_settings.jsx';\nimport GroupDetails from './group_settings/group_details';\nimport TeamSettings from './team_channel_settings/team';\nimport TeamDetails from './team_channel_settings/team/details';\nimport ChannelSettings from './team_channel_settings/channel';\nimport ChannelDetails from './team_channel_settings/channel/details';\nimport PasswordSettings from './password_settings.jsx';\nimport PushNotificationsSettings from './push_settings.jsx';\nimport DataRetentionSettings from './data_retention_settings.jsx';\nimport MessageExportSettings from './message_export_settings.jsx';\nimport DatabaseSettings from './database_settings.jsx';\nimport ElasticSearchSettings from './elasticsearch_settings.jsx';\nimport BleveSettings from './bleve_settings.jsx';\nimport ClusterSettings from './cluster_settings.jsx';\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings';\nimport SessionLengthSettings from './session_length_settings';\nimport LDAPFeatureDiscovery from './feature_discovery/ldap.tsx';\nimport SAMLFeatureDiscovery from './feature_discovery/saml.tsx';\n\nimport * as DefinitionConstants from './admin_definition_constants';\n\nconst FILE_STORAGE_DRIVER_LOCAL = 'local';\nconst FILE_STORAGE_DRIVER_S3 = 'amazons3';\nconst MEBIBYTE = Math.pow(1024, 2);\n\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1 = 'RSAwithSHA1';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256 = 'RSAwithSHA256';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512 = 'RSAwithSHA512';\n\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N = 'Canonical1.0';\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11 = 'Canonical1.1';\n\n// admin_definitions data structure define the autogenerated admin_console\n// section. It defines the structure of the menu based on sections, subsections\n// and pages. Each page contains an schema which defines a component to use for\n// render the entire section or the name of the section (name and\n// name_default), the section in the config file (id), and a list of options to\n// configure (settings).\n//\n// All text fiels contains a transation key, and the <field>_default string are the\n// default text when the translation is still not avaiable (the english version\n// of the text).\n//\n// We can define different types of settings configuration widgets:\n//\n// Widget:\n//   - type: which define the widget type.\n//   - label (and label_default): which define the main text of the setting.\n//   - isDisabled: a function which receive current config, the state of the page and the license.\n//   - isHidden: a function which receive current config, the state of the page and the license.\n//\n// Custom Widget (extends from Widget):\n//   - component: The component used to render the widget\n//\n// JobsTable Widget (extends from Widget):\n//   - job_type: The kind of job from Constants.JobTypes\n//   - render_job: Function to convert a job object into a react component.\n//\n// Banner Widget (extends from Widget):\n//   - banner_type: The type of banner (options: info or warning)\n//\n// Setting Widget (extends from Widget):\n//   - key: The key to store the configuration in the config file.\n//   - help_text (and help_text_default): Long description of the field.\n//   - help_text_markdown: True if the translation text contains markdown.\n//   - help_text_values: Values to fill the translation (if needed).\n//\n// Bool Widget (extends from Setting Widget)\n//\n// Number Widget (extends from Setting Widget)\n//\n// Color Widget (extends from Setting Widget)\n//\n// Text Widget (extends from Setting Widget)\n//   - placeholder (and placeholder_default): Placeholder text to show in the input.\n//   - dynamic_value: function that generate the value of the field based on the current value, the config, the state and the license.\n//   - default_value: function that generate the default value of the field based on the config, the state and the license.\n//   - max_length: The maximun length allowed\n//\n// Button Widget (extends from Setting Widget)\n//   - action: A redux action to execute on click.\n//   - error_message (and error_message_default): Error to show if action doesn't work.\n//   - success_message (and success_message_default): Success message to show if action doesn't work.\n//\n// Language Widget (extends from Setting Widget)\n//   - multiple: If you can select multiple languages.\n//   - no_result (and no_result_default): Text to show on not results found (only for multiple = true).\n//   - not_present (and not_present_default): Text to show when the default language is not present (only for multiple = true).\n//\n// Dropdown Widget (extends from Setting Widget)\n//   - options: List of options of the dropdown (each options has value, display_name, display_name_default and optionally help_text, help_text_default, help_text_values, help_text_markdown fields).\n//\n// Permissions Flag (extends from Setting Widget)\n//   - permissions_mapping_name: A permission name in the utils/policy_roles_adapter.js file.\n//\n// FileUpload (extends from Setting Widget)\n//   - remove_help_text (and remove_help_text_default):  Long description of the field when a file is uploaded.\n//   - remove_help_text_markdown: True if the translation text contains markdown.\n//   - remove_help_text_values: Values to fill the translation (if needed).\n//   - remove_button_text (and remove_button_text_default): Button text for remove when the file is uploaded.\n//   - removing_text (and removing_text_default): Text shown while the system is removing the file.\n//   - uploading_text (and uploading_text_default): Text shown while the system is uploading the file.\n//   - upload_action: An store action to upload the file.\n//   - remove_action: An store action to remove the file.\n//   - fileType: A list of extensions separated by \",\". E.g. \".jpg,.png,.gif\".\n\nexport const it = {\n    isnt: (func) => (config, state, license, enterpriseReady) => !func(config, state, license, enterpriseReady),\n    both: (...funcs) => (config, state, license) => {\n        for (const func of funcs) {\n            if (!func(config, state, license)) {\n                return false;\n            }\n        }\n        return true;\n    },\n    either: (...funcs) => (config, state, license, enterpriseReady) => {\n        for (const func of funcs) {\n            if (func(config, state, license, enterpriseReady)) {\n                return true;\n            }\n        }\n        return false;\n    },\n    stateMatches: (key, regex) => (config, state) => state[key].match(regex),\n    stateEquals: (key, value) => (config, state) => state[key] === value,\n    stateIsTrue: (key) => (config, state) => Boolean(state[key]),\n    stateIsFalse: (key) => (config, state) => !state[key],\n    configIsTrue: (group, setting) => (config) => Boolean(config[group][setting]),\n    configIsFalse: (group, setting) => (config) => !config[group][setting],\n    enterpriseReady: (config, state, license, enterpriseReady) => enterpriseReady,\n    licensed: (config, state, license) => license.IsLicensed === 'true',\n    licensedForFeature: (feature) => (config, state, license) => license.IsLicensed && license[feature] === 'true',\n};\n\nconst AdminDefinition = {\n    about: {\n        icon: 'fa-info-circle',\n        sectionTitle: t('admin.sidebar.about'),\n        sectionTitleDefault: 'About',\n        license: {\n            url: 'about/license',\n            title: t('admin.sidebar.license'),\n            title_default: 'Edition and License',\n            isHidden: it.either(\n                it.isnt(it.enterpriseReady),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.license.title',\n                'admin.license.uploadDesc',\n                'admin.license.keyRemove',\n                'admin.license.edition',\n                'admin.license.type',\n                'admin.license.key',\n                'Mattermost Enterprise Edition. Unlock enterprise features in this software through the purchase of a subscription from ',\n                'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.',\n            ],\n            schema: {\n                id: 'LicenseSettings',\n                component: LicenseSettings,\n            },\n        },\n    },\n    reporting: {\n        icon: 'fa-bar-chart',\n        sectionTitle: t('admin.sidebar.reporting'),\n        sectionTitleDefault: 'Reporting',\n        system_analytics: {\n            url: 'reporting/system_analytics',\n            title: t('admin.sidebar.siteStatistics'),\n            title_default: 'Site Statistics',\n            searchableStrings: [\n                'analytics.system.title',\n                'analytics.system.totalPosts',\n                'analytics.system.activeUsers',\n                'analytics.system.totalSessions',\n                'analytics.system.totalCommands',\n                'analytics.system.totalIncomingWebhooks',\n                'analytics.system.totalOutgoingWebhooks',\n                'analytics.system.totalWebsockets',\n                'analytics.system.totalMasterDbConnections',\n                'analytics.system.totalReadDbConnections',\n                'analytics.system.postTypes',\n                'analytics.system.channelTypes',\n                'analytics.system.totalUsers',\n                'analytics.system.totalTeams',\n                'analytics.system.totalChannels',\n                'analytics.system.dailyActiveUsers',\n                'analytics.system.monthlyActiveUsers',\n            ],\n            schema: {\n                id: 'SystemAnalytics',\n                component: SystemAnalytics,\n            },\n        },\n        team_statistics: {\n            url: 'reporting/team_statistics',\n            title: t('admin.sidebar.teamStatistics'),\n            title_default: 'Team Statistics',\n            searchableStrings: [\n                ['analytics.team.title', {team: ''}],\n                'analytics.system.info',\n                'analytics.team.totalPosts',\n                'analytics.team.activeUsers',\n                'analytics.team.totalUsers',\n                'analytics.team.publicChannels',\n                'analytics.team.privateGroups',\n                'analytics.team.recentUsers',\n                'analytics.team.newlyCreated',\n            ],\n            schema: {\n                id: 'TeamAnalytics',\n                component: TeamAnalytics,\n            },\n        },\n        server_logs: {\n            url: 'reporting/server_logs',\n            title: t('admin.sidebar.logs'),\n            title_default: 'Server Logs',\n            searchableStrings: [\n                'admin.logs.bannerDesc',\n                'admin.logs.title',\n            ],\n            schema: {\n                id: 'ServerLogs',\n                component: ServerLogs,\n            },\n        },\n    },\n    user_management: {\n        icon: 'fa-users',\n        sectionTitle: t('admin.sidebar.userManagement'),\n        sectionTitleDefault: 'User Management',\n        system_user_detail: {\n            url: 'user_management/user/:user_id',\n            schema: {\n                id: 'SystemUserDetail',\n                component: SystemUserDetail,\n            },\n        },\n        system_users: {\n            url: 'user_management/users',\n            title: t('admin.sidebar.users'),\n            title_default: 'Users',\n            searchableStrings: [\n                ['admin.system_users.title', {siteName: ''}],\n            ],\n            schema: {\n                id: 'SystemUsers',\n                component: SystemUsers,\n            },\n        },\n        group_detail: {\n            url: 'user_management/groups/:group_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'GroupDetail',\n                component: GroupDetails,\n            },\n        },\n        groups: {\n            url: 'user_management/groups',\n            title: t('admin.sidebar.groups'),\n            title_default: 'Groups (Beta)',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Groups',\n                component: GroupSettings,\n            },\n        },\n        team_detail: {\n            url: 'user_management/teams/:team_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'TeamDetail',\n                component: TeamDetails,\n            },\n        },\n        teams: {\n            url: 'user_management/teams',\n            title: t('admin.sidebar.teams'),\n            title_default: 'Teams',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Teams',\n                component: TeamSettings,\n            },\n        },\n        channel_detail: {\n            url: 'user_management/channels/:channel_id',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'ChannelDetail',\n                component: ChannelDetails,\n            },\n        },\n        channel: {\n            url: 'user_management/channels',\n            title: t('admin.sidebar.channels'),\n            title_default: 'Channels',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('LDAPGroups')),\n            ),\n            schema: {\n                id: 'Channels',\n                component: ChannelSettings,\n            },\n        },\n        systemScheme: {\n            url: 'user_management/permissions/system_scheme',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionSystemSchemeSettings,\n            },\n        },\n        teamSchemeDetail: {\n            url: 'user_management/permissions/team_override_scheme/:scheme_id',\n            isHidden: it.either(\n                it.isnt(it.licensed),\n                it.isnt(it.licensedForFeature('CustomPermissionsSchemes')),\n            ),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        teamScheme: {\n            url: 'user_management/permissions/team_override_scheme',\n            isHidden: it.either(\n                it.isnt(it.licensed),\n                it.isnt(it.licensedForFeature('CustomPermissionsSchemes')),\n            ),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        permissions: {\n            url: 'user_management/permissions/',\n            title: t('admin.sidebar.permissions'),\n            title_default: 'Permissions',\n            isHidden: it.isnt(it.licensed),\n            searchableStrings: [\n                'admin.permissions.documentationLinkText',\n                'admin.permissions.teamOverrideSchemesNoSchemes',\n                'admin.permissions.loadMoreSchemes',\n                'admin.permissions.introBanner',\n                'admin.permissions.systemSchemeBannerTitle',\n                'admin.permissions.systemSchemeBannerText',\n                'admin.permissions.systemSchemeBannerButton',\n                'admin.permissions.teamOverrideSchemesTitle',\n                'admin.permissions.teamOverrideSchemesBannerText',\n                'admin.permissions.teamOverrideSchemesNewButton',\n            ],\n            schema: {\n                id: 'PermissionSchemes',\n                component: PermissionSchemesSettings,\n            },\n        },\n    },\n    environment: {\n        icon: 'fa-server',\n        sectionTitle: t('admin.sidebar.environment'),\n        sectionTitleDefault: 'Environment',\n        web_server: {\n            url: 'environment/web_server',\n            title: t('admin.sidebar.webServer'),\n            title_default: 'Web Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.environment.webServer'),\n                name_default: 'Web Server',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.SiteURL',\n                        label: t('admin.service.siteURL'),\n                        label_default: 'Site URL:',\n                        help_text: t('admin.service.siteURLDescription'),\n                        help_text_default: 'The URL that users will use to access Mattermost. Standard ports, such as 80 and 443, can be omitted, but non-standard ports are required. For example: http://example.com:8065. This setting is required.\\n \\nMattermost may be hosted at a subpath. For example: http://example.com:8065/company/mattermost. A restart is required before the server will work correctly.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.siteURLExample'),\n                        placeholder_default: 'E.g.: \"http://example.com:8065\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'TestSiteURL',\n                        action: testSiteURL,\n                        label: t('admin.service.testSiteURL'),\n                        label_default: 'Test Live URL',\n                        loading: t('admin.service.testSiteURLTesting'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.service.testSiteURLFail'),\n                        error_message_default: 'Test unsuccessful: {error}',\n                        success_message: t('admin.service.testSiteURLSuccess'),\n                        success_message_default: 'Test successful. This is a valid URL.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.ListenAddress',\n                        label: t('admin.service.listenAddress'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.service.listenExample'),\n                        placeholder_default: 'E.g.: \":8065\"',\n                        help_text: t('admin.service.listenDescription'),\n                        help_text_default: 'The address and port to which to bind and listen. Specifying \":8065\" will bind to all network interfaces. Specifying \"127.0.0.1:8065\" will only bind to the network interface having that IP address. If you choose a port of a lower level (called \"system ports\" or \"well-known ports\", in the range of 0-1023), you must have permissions to bind to that port. On Linux you can use: \"sudo setcap cap_net_bind_service=+ep ./bin/mattermost\" to allow Mattermost to bind to well-known ports.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.Forward80To443',\n                        label: t('admin.service.forward80To443'),\n                        label_default: 'Forward port 80 to 443:',\n                        help_text: t('admin.service.forward80To443Description'),\n                        help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.',\n                        disabled_help_text: t('admin.service.forward80To443Description.disabled'),\n                        disabled_help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.\\n \\nThis setting cannot be enabled until your server is [listening](#ListenAddress) on port 443.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.isnt(it.stateMatches('ServiceSettings.ListenAddress', /:443$/)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_WEBSERVER,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSCertFile',\n                        label: t('admin.service.tlsCertFile'),\n                        label_default: 'TLS Certificate File:',\n                        help_text: t('admin.service.tlsCertFileDescription'),\n                        help_text_default: 'The certificate file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSKeyFile',\n                        label: t('admin.service.tlsKeyFile'),\n                        label_default: 'TLS Key File:',\n                        help_text: t('admin.service.tlsKeyFileDescription'),\n                        help_text_default: 'The private key file to use.',\n                        isDisabled: it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.UseLetsEncrypt',\n                        label: t('admin.service.useLetsEncrypt'),\n                        label_default: 'Use Let\\'s Encrypt:',\n                        help_text: t('admin.service.useLetsEncryptDescription'),\n                        help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.',\n                        disabled_help_text: t('admin.service.useLetsEncryptDescription.disabled'),\n                        disabled_help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.\\n \\nThis setting cannot be enabled unless the [Forward port 80 to 443](#Forward80To443) setting is set to true.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('ServiceSettings.Forward80To443'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.LetsEncryptCertificateCacheFile',\n                        label: t('admin.service.letsEncryptCertificateCacheFile'),\n                        label_default: 'Let\\'s Encrypt Certificate Cache File:',\n                        help_text: t('admin.service.letsEncryptCertificateCacheFileDescription'),\n                        help_text_default: 'Certificates retrieved and other data about the Let\\'s Encrypt service will be stored in this file.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.UseLetsEncrypt'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.ReadTimeout',\n                        label: t('admin.service.readTimeout'),\n                        label_default: 'Read Timeout:',\n                        help_text: t('admin.service.readTimeoutDescription'),\n                        help_text_default: 'Maximum time allowed from when the connection is accepted to when the request body is fully read.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.WriteTimeout',\n                        label: t('admin.service.writeTimeout'),\n                        label_default: 'Write Timeout:',\n                        help_text: t('admin.service.writeTimeoutDescription'),\n                        help_text_default: 'If using HTTP (insecure), this is the maximum time allowed from the end of reading the request headers until the response is written. If using HTTPS, it is the total time from when the connection is accepted until the response is written.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.WebserverMode',\n                        label: t('admin.webserverModeTitle'),\n                        label_default: 'Webserver Mode:',\n                        help_text: DefinitionConstants.WEBSERVER_MODE_HELP_TEXT,\n                        options: [\n                            {\n                                value: 'gzip',\n                                display_name: t('admin.webserverModeGzip'),\n                                display_name_default: 'gzip',\n                            },\n                            {\n                                value: 'uncompressed',\n                                display_name: t('admin.webserverModeUncompressed'),\n                                display_name_default: 'Uncompressed',\n                            },\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.webserverModeDisabled'),\n                                display_name_default: 'Disabled',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableInsecureOutgoingConnections',\n                        label: t('admin.service.insecureTlsTitle'),\n                        label_default: 'Enable Insecure Outgoing Connections: ',\n                        help_text: t('admin.service.insecureTlsDesc'),\n                        help_text_default: 'When true, any outgoing HTTPS requests will accept unverified, self-signed certificates. For example, outgoing webhooks to a server with a self-signed TLS certificate, using any domain, will be allowed. Note that this makes these connections susceptible to man-in-the-middle attacks.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: reloadConfig,\n                        key: 'ReloadConfigButton',\n                        label: t('admin.reload.button'),\n                        label_default: 'Reload Configuration From Disk',\n                        help_text: t('admin.reload.reloadDescription'),\n                        help_text_default: 'Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {featureName} feature to load the new settings while the server is running. The administrator should then use the {recycleDatabaseConnections} feature to recycle the database connections based on the new settings.',\n                        help_text_values: {\n                            featureName: (\n                                <b>\n                                    <FormattedMessage\n                                        id='admin.reload.reloadDescription.featureName'\n                                        defaultMessage='Reload Configuration from Disk'\n                                    />\n                                </b>\n                            ),\n                            recycleDatabaseConnections: (\n                                <a href='../environment/database'>\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.reload.reloadDescription.recycleDatabaseConnections'\n                                            defaultMessage='Environment > Database > Recycle Database Connections'\n                                        />\n                                    </b>\n                                </a>\n                            ),\n                        },\n                        error_message: t('admin.reload.reloadFail'),\n                        error_message_default: 'Reload unsuccessful: {error}',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'PurgeButton',\n                        action: invalidateAllCaches,\n                        label: t('admin.purge.button'),\n                        label_default: 'Purge All Caches',\n                        help_text: t('admin.purge.purgeDescription'),\n                        help_text_default: 'This will purge all the in-memory caches for things like sessions, accounts, channels, etc. Deployments using High Availability will attempt to purge all the servers in the cluster.  Purging the caches may adversely impact performance.',\n                        error_message: t('admin.purge.purgeFail'),\n                        error_message_default: 'Purging unsuccessful: {error}',\n                    },\n                ],\n            },\n        },\n        database: {\n            url: 'environment/database',\n            title: t('admin.sidebar.database'),\n            title_default: 'Database',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.database.title',\n                ['admin.recycle.recycleDescription', {featureName: '', reloadConfiguration: ''}],\n                'admin.recycle.recycleDescription.featureName',\n                'admin.recycle.recycleDescription.reloadConfiguration',\n                'admin.recycle.button',\n                'admin.sql.noteDescription',\n                'admin.sql.disableDatabaseSearchTitle',\n                'admin.sql.disableDatabaseSearchDescription',\n                'admin.sql.driverName',\n                'admin.sql.driverNameDescription',\n                'admin.sql.dataSource',\n                'admin.sql.dataSourceDescription',\n                'admin.sql.maxConnectionsTitle',\n                'admin.sql.maxConnectionsDescription',\n                'admin.sql.maxOpenTitle',\n                'admin.sql.maxOpenDescription',\n                'admin.sql.queryTimeoutTitle',\n                'admin.sql.queryTimeoutDescription',\n                'admin.sql.connMaxLifetimeTitle',\n                'admin.sql.connMaxLifetimeDescription',\n                'admin.sql.traceTitle',\n                'admin.sql.traceDescription',\n            ],\n            schema: {\n                id: 'DatabaseSettings',\n                component: DatabaseSettings,\n            },\n        },\n        elasticsearch: {\n            url: 'environment/elasticsearch',\n            title: t('admin.sidebar.elasticsearch'),\n            title_default: 'Elasticsearch',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Elasticsearch')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.elasticsearch.title',\n                'admin.elasticsearch.enableIndexingTitle',\n                ['admin.elasticsearch.enableIndexingDescription', {documentationLink: ''}],\n                'admin.elasticsearch.enableIndexingDescription.documentationLinkText',\n                'admin.elasticsearch.connectionUrlTitle',\n                ['admin.elasticsearch.connectionUrlDescription', {documentationLink: ''}],\n                'admin.elasticsearch.connectionUrlExample.documentationLinkText',\n                'admin.elasticsearch.skipTLSVerificationTitle',\n                'admin.elasticsearch.skipTLSVerificationDescription',\n                'admin.elasticsearch.usernameTitle',\n                'admin.elasticsearch.usernameDescription',\n                'admin.elasticsearch.passwordTitle',\n                'admin.elasticsearch.passwordDescription',\n                'admin.elasticsearch.sniffTitle',\n                'admin.elasticsearch.sniffDescription',\n                'admin.elasticsearch.testHelpText',\n                'admin.elasticsearch.elasticsearch_test_button',\n                'admin.elasticsearch.bulkIndexingTitle',\n                'admin.elasticsearch.createJob.help',\n                'admin.elasticsearch.purgeIndexesHelpText',\n                'admin.elasticsearch.purgeIndexesButton',\n                'admin.elasticsearch.purgeIndexesButton.label',\n                'admin.elasticsearch.enableSearchingTitle',\n                'admin.elasticsearch.enableSearchingDescription',\n            ],\n            schema: {\n                id: 'ElasticSearchSettings',\n                component: ElasticSearchSettings,\n            },\n        },\n        storage: {\n            url: 'environment/file_storage',\n            title: t('admin.sidebar.fileStorage'),\n            title_default: 'File Storage',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'FileSettings',\n                name: t('admin.environment.fileStorage'),\n                name_default: 'File Storage',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'FileSettings.DriverName',\n                        label: t('admin.image.storeTitle'),\n                        label_default: 'File Storage System:',\n                        help_text: t('admin.image.storeDescription'),\n                        help_text_default: 'Storage system where files and image attachments are saved.\\n \\nSelecting \"Amazon S3\" enables fields to enter your Amazon credentials and bucket details.\\n \\nSelecting \"Local File System\" enables the field to specify a local file directory.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: FILE_STORAGE_DRIVER_LOCAL,\n                                display_name: t('admin.image.storeLocal'),\n                                display_name_default: 'Local File System',\n                            },\n                            {\n                                value: FILE_STORAGE_DRIVER_S3,\n                                display_name: t('admin.image.storeAmazonS3'),\n                                display_name_default: 'Amazon S3',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.Directory',\n                        label: t('admin.image.localTitle'),\n                        label_default: 'Local Storage Directory:',\n                        help_text: t('admin.image.localDescription'),\n                        help_text_default: 'Directory to which files and images are written. If blank, defaults to ./data/.',\n                        placeholder: t('admin.image.localExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_LOCAL)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'FileSettings.MaxFileSize',\n                        label: t('admin.image.maxFileSizeTitle'),\n                        label_default: 'Maximum File Size:',\n                        help_text: t('admin.image.maxFileSizeDescription'),\n                        help_text_default: 'Maximum file size for message attachments in megabytes. Caution: Verify server memory can support your setting choice. Large file sizes increase the risk of server crashes and failed uploads due to network interruptions.',\n                        placeholder: t('admin.image.maxFileSizeExample'),\n                        placeholder_default: '50',\n                        onConfigLoad: (configVal) => configVal / MEBIBYTE,\n                        onConfigSave: (displayVal) => displayVal * MEBIBYTE,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Bucket',\n                        label: t('admin.image.amazonS3BucketTitle'),\n                        label_default: 'Amazon S3 Bucket:',\n                        help_text: t('admin.image.amazonS3BucketDescription'),\n                        help_text_default: 'Name you selected for your S3 bucket in AWS.',\n                        placeholder: t('admin.image.amazonS3BucketExample'),\n                        placeholder_default: 'E.g.: \"mattermost-media\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Region',\n                        label: t('admin.image.amazonS3RegionTitle'),\n                        label_default: 'Amazon S3 Region:',\n                        help_text: t('admin.image.amazonS3RegionDescription'),\n                        help_text_default: 'AWS region you selected when creating your S3 bucket. If no region is set, Mattermost attempts to get the appropriate region from AWS, or sets it to \"us-east-1\" if none found.',\n                        placeholder: t('admin.image.amazonS3RegionExample'),\n                        placeholder_default: 'E.g.: \"us-east-1\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3AccessKeyId',\n                        label: t('admin.image.amazonS3IdTitle'),\n                        label_default: 'Amazon S3 Access Key ID:',\n                        help_text: t('admin.image.amazonS3IdDescription'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Only required if you do not want to authenticate to S3 using an [IAM role](!https://about.mattermost.com/default-iam-role). Enter the Access Key ID provided by your Amazon EC2 administrator.',\n                        placeholder: t('admin.image.amazonS3IdExample'),\n                        placeholder_default: 'E.g.: \"AKIADTOVBGERKLCBV\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Endpoint',\n                        label: t('admin.image.amazonS3EndpointTitle'),\n                        label_default: 'Amazon S3 Endpoint:',\n                        help_text: t('admin.image.amazonS3EndpointDescription'),\n                        help_text_default: 'Hostname of your S3 Compatible Storage provider. Defaults to \"s3.amazonaws.com\".',\n                        placeholder: t('admin.image.amazonS3EndpointExample'),\n                        placeholder_default: 'E.g.: \"s3.amazonaws.com\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3SecretAccessKey',\n                        label: t('admin.image.amazonS3SecretTitle'),\n                        label_default: 'Amazon S3 Secret Access Key:',\n                        help_text: t('admin.image.amazonS3SecretDescription'),\n                        help_text_default: '(Optional) The secret access key associated with your Amazon S3 Access Key ID.',\n                        placeholder: t('admin.image.amazonS3SecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSL',\n                        label: t('admin.image.amazonS3SSLTitle'),\n                        label_default: 'Enable Secure Amazon S3 Connections:',\n                        help_text: t('admin.image.amazonS3SSLDescription'),\n                        help_text_default: 'When false, allow insecure connections to Amazon S3. Defaults to secure connections only.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSE',\n                        label: t('admin.image.amazonS3SSETitle'),\n                        label_default: 'Enable Server-Side Encryption for Amazon S3:',\n                        help_text: t('admin.image.amazonS3SSEDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, encrypt files in Amazon S3 using server-side encryption with Amazon S3-managed keys. See [documentation](!https://about.mattermost.com/default-server-side-encryption) to learn more.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3Trace',\n                        label: t('admin.image.amazonS3TraceTitle'),\n                        label_default: 'Enable Amazon S3 Debugging:',\n                        help_text: t('admin.image.amazonS3TraceDescription'),\n                        help_text_default: '(Development Mode) When true, log additional debugging information to the system logs.',\n                        isDisabled: it.isnt(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testS3Connection,\n                        key: 'TestS3Connection',\n                        label: t('admin.s3.connectionS3Test'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.s3.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.s3.s3Fail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.s3.s3Success'),\n                        success_message_default: 'Connection was successful',\n                    },\n                ],\n            },\n        },\n        image_proxy: {\n            url: 'environment/image_proxy',\n            title: t('admin.sidebar.imageProxy'),\n            title_default: 'Image Proxy',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ImageProxy',\n                name: t('admin.environment.imageProxy'),\n                name_default: 'Image Proxy',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ImageProxySettings.Enable',\n                        label: t('admin.image.enableProxy'),\n                        label_default: 'Enable Image Proxy:',\n                        help_text: t('admin.image.enableProxyDescription'),\n                        help_text_default: 'When true, enables an image proxy for loading all Markdown images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ImageProxySettings.ImageProxyType',\n                        label: t('admin.image.proxyType'),\n                        label_default: 'Image Proxy Type:',\n                        help_text: t('admin.image.proxyTypeDescription'),\n                        help_text_default: 'Configure an image proxy to load all Markdown images through a proxy. The image proxy prevents users from making insecure image requests, provides caching for increased performance, and automates image adjustments such as resizing. See [documentation](!https://about.mattermost.com/default-image-proxy-documentation) to learn more.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'atmos/camo',\n                                display_name: t('atmos/camo'),\n                                display_name_default: 'atmos/camo',\n                            },\n                            {\n                                value: 'local',\n                                display_name: t('local'),\n                                display_name_default: 'local',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ImageProxySettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyURL',\n                        label: t('admin.image.proxyURL'),\n                        label_default: 'Remote Image Proxy URL:',\n                        help_text: t('admin.image.proxyURLDescription'),\n                        help_text_default: 'URL of your remote image proxy server.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyOptions',\n                        label: t('admin.image.proxyOptions'),\n                        label_default: 'Remote Image Proxy Options:',\n                        help_text: t('admin.image.proxyOptionsDescription'),\n                        help_text_default: 'Additional options such as the URL signing key. Refer to your image proxy documentation to learn more about what options are supported.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                ],\n            },\n        },\n        smtp: {\n            url: 'environment/smtp',\n            title: t('admin.sidebar.smtp'),\n            title_default: 'SMTP',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SMTP',\n                name: t('admin.environment.smtp'),\n                name_default: 'SMTP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPServer',\n                        label: t('admin.environment.smtp.smtpServer.title'),\n                        label_default: 'SMTP Server:',\n                        placeholder: t('admin.environment.smtp.smtpServer.placeholder'),\n                        placeholder_default: 'Ex: \"smtp.yourcompany.com\", \"email-smtp.us-east-1.amazonaws.com\"',\n                        help_text: t('admin.environment.smtp.smtpServer.description'),\n                        help_text_default: 'Location of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPort',\n                        label: t('admin.environment.smtp.smtpPort.title'),\n                        label_default: 'SMTP Server Port:',\n                        placeholder: t('admin.environment.smtp.smtpPort.placeholder'),\n                        placeholder_default: 'Ex: \"25\", \"465\", \"587\"',\n                        help_text: t('admin.environment.smtp.smtpPort.description'),\n                        help_text_default: 'Port of SMTP email server.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSMTPAuth',\n                        label: t('admin.environment.smtp.smtpAuth.title'),\n                        label_default: 'Enable SMTP Authentication:',\n                        help_text: t('admin.environment.smtp.smtpAuth.description'),\n                        help_text_default: 'When true, SMTP Authentication is enabled.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPUsername',\n                        label: t('admin.environment.smtp.smtpUsername.title'),\n                        label_default: 'SMTP Server Username:',\n                        placeholder: t('admin.environment.smtp.smtpUsername.placeholder'),\n                        placeholder_default: 'Ex: \"admin@yourcompany.com\", \"AKIADTOVBGERKLCBV\"',\n                        help_text: t('admin.environment.smtp.smtpUsername.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPassword',\n                        label: t('admin.environment.smtp.smtpPassword.title'),\n                        label_default: 'SMTP Server Password:',\n                        placeholder: t('admin.environment.smtp.smtpPassword.placeholder'),\n                        placeholder_default: 'Ex: \"yourpassword\", \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        help_text: t('admin.environment.smtp.smtpPassword.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.ConnectionSecurity',\n                        label: t('admin.environment.smtp.connectionSecurity.title'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_EMAIL,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.none'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.tls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.starttls'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testSmtp,\n                        key: 'TestSmtpConnection',\n                        label: t('admin.environment.smtp.connectionSmtpTest'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.environment.smtp.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.environment.smtp.smtpFail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.environment.smtp.smtpSuccess'),\n                        success_message_default: 'No errors were reported while sending an email. Please check your inbox to make sure.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SkipServerCertificateVerification',\n                        label: t('admin.environment.smtp.skipServerCertificateVerification.title'),\n                        label_default: 'Skip Server Certificate Verification:',\n                        help_text: t('admin.environment.smtp.skipServerCertificateVerification.description'),\n                        help_text_default: 'When true, Mattermost will not verify the email server certificate.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSecurityFixAlert',\n                        label: t('admin.environment.smtp.enableSecurityFixAlert.title'),\n                        label_default: 'Enable Security Alerts:',\n                        help_text: t('admin.environment.smtp.enableSecurityFixAlert.description'),\n                        help_text_default: 'When true, System Administrators are notified by email if a relevant security fix alert has been announced in the last 12 hours. Requires email to be enabled.',\n                    },\n                ],\n            },\n        },\n        push_notification_server: {\n            url: 'environment/push_notification_server',\n            title: t('admin.sidebar.pushNotificationServer'),\n            title_default: 'Push Notification Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.environment.pushNotificationServer',\n                'admin.email.pushTitle',\n                'admin.email.pushServerTitle',\n                'admin.email.pushContentTitle',\n                'admin.email.pushContentDesc',\n            ],\n            schema: {\n                id: 'PushNotificationsSettings',\n                component: PushNotificationsSettings,\n            },\n        },\n        high_availability: {\n            url: 'environment/high_availability',\n            title: t('admin.sidebar.highAvailability'),\n            title_default: 'High Availability',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Cluster')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.advance.cluster',\n                'admin.cluster.noteDescription',\n                'admin.cluster.enableTitle',\n                'admin.cluster.enableDescription',\n                'admin.cluster.ClusterName',\n                'admin.cluster.ClusterNameDesc',\n                'admin.cluster.OverrideHostname',\n                'admin.cluster.OverrideHostnameDesc',\n                'admin.cluster.UseIpAddress',\n                'admin.cluster.UseIpAddressDesc',\n                'admin.cluster.UseExperimentalGossip',\n                'admin.cluster.UseExperimentalGossipDesc',\n                'admin.cluster.GossipPort',\n                'admin.cluster.GossipPortDesc',\n                'admin.cluster.StreamingPort',\n                'admin.cluster.StreamingPortDesc',\n            ],\n            schema: {\n                id: 'ClusterSettings',\n                component: ClusterSettings,\n            },\n        },\n        rate_limiting: {\n            url: 'environment/rate_limiting',\n            title: t('admin.sidebar.rateLimiting'),\n            title_default: 'Rate Limiting',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.rate.title'),\n                name_default: 'Rate Limiting',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties other than Site URL in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.Enable',\n                        label: t('admin.rate.enableLimiterTitle'),\n                        label_default: 'Enable Rate Limiting:',\n                        help_text: t('admin.rate.enableLimiterDescription'),\n                        help_text_default: 'When true, APIs are throttled at rates specified below.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.PerSec',\n                        label: t('admin.rate.queriesTitle'),\n                        label_default: 'Maximum Queries per Second:',\n                        placeholder: t('admin.rate.queriesExample'),\n                        placeholder_default: 'E.g.: \"10\"',\n                        help_text: t('admin.rate.queriesDescription'),\n                        help_text_default: 'Throttles API at this number of requests per second.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MaxBurst',\n                        label: t('admin.rate.maxBurst'),\n                        label_default: 'Maximum Burst Size:',\n                        placeholder: t('admin.rate.maxBurstExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                        help_text: t('admin.rate.maxBurstDescription'),\n                        help_text_default: 'Maximum number of requests allowed beyond the per second query limit.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MemoryStoreSize',\n                        label: t('admin.rate.memoryTitle'),\n                        label_default: 'Memory Store Size:',\n                        placeholder: t('admin.rate.memoryExample'),\n                        placeholder_default: 'E.g.: \"10000\"',\n                        help_text: t('admin.rate.memoryDescription'),\n                        help_text_default: 'Maximum number of users sessions connected to the system as determined by \"Vary rate limit by remote address\" and \"Vary rate limit by HTTP header\".',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByRemoteAddr',\n                        label: t('admin.rate.remoteTitle'),\n                        label_default: 'Vary rate limit by remote address:',\n                        help_text: t('admin.rate.remoteDescription'),\n                        help_text_default: 'When true, rate limit API access by IP address.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByUser',\n                        label: t('admin.rate.varyByUser'),\n                        label_default: 'Vary rate limit by user:',\n                        help_text: t('admin.rate.varyByUserDescription'),\n                        help_text_default: 'When true, rate limit API access by user athentication token.',\n                        isDisabled: it.stateEquals('RateLimitSettings.Enable', false),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'RateLimitSettings.VaryByHeader',\n                        label: t('admin.rate.httpHeaderTitle'),\n                        label_default: 'Vary rate limit by HTTP header:',\n                        placeholder: t('admin.rate.httpHeaderExample'),\n                        placeholder_default: 'E.g.: \"X-Real-IP\", \"X-Forwarded-For\"',\n                        help_text: t('admin.rate.httpHeaderDescription'),\n                        help_text_default: 'When filled in, vary rate limiting by HTTP header field specified (e.g. when configuring NGINX set to \"X-Real-IP\", when configuring AmazonELB set to \"X-Forwarded-For\").',\n                        isDisabled: it.either(\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                            it.stateEquals('RateLimitSettings.VaryByRemoteAddr', true),\n                        ),\n                    },\n                ],\n            },\n        },\n        logging: {\n            url: 'environment/logging',\n            title: t('admin.sidebar.logging'),\n            title_default: 'Logging',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'LogSettings',\n                name: t('admin.general.log'),\n                name_default: 'Logging',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableConsole',\n                        label: t('admin.log.consoleTitle'),\n                        label_default: 'Output logs to console: ',\n                        help_text: t('admin.log.consoleDescription'),\n                        help_text_default: 'Typically set to false in production. Developers may set this field to true to output log messages to console based on the console level option.  If true, server writes messages to the standard output stream (stdout). Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.ConsoleLevel',\n                        label: t('admin.log.levelTitle'),\n                        label_default: 'Console Log Level:',\n                        help_text: t('admin.log.levelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the console. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.ConsoleJson',\n                        label: t('admin.log.consoleJsonTitle'),\n                        label_default: 'Output console logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableConsole'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableFile',\n                        label: t('admin.log.fileTitle'),\n                        label_default: 'Output logs to file: ',\n                        help_text: t('admin.log.fileDescription'),\n                        help_text_default: 'Typically set to true in production. When true, logged events are written to the mattermost.log file in the directory specified in the File Log Directory field. The logs are rotated at 10,000 lines and archived to a file in the same directory, and given a name with a datestamp and serial number. For example, mattermost.2017-03-31.001. Changing this setting requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.FileLevel',\n                        label: t('admin.log.fileLevelTitle'),\n                        label_default: 'File Log Level:',\n                        help_text: t('admin.log.fileLevelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the log file. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.FileJson',\n                        label: t('admin.log.fileJsonTitle'),\n                        label_default: 'Output file logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LogSettings.FileLocation',\n                        label: t('admin.log.locationTitle'),\n                        label_default: 'File Log Directory:',\n                        help_text: t('admin.log.locationDescription'),\n                        help_text_default: 'The location of the log files. If blank, they are stored in the ./logs directory. The path that you set must exist and Mattermost must have write permissions in it. Changing this setting requires a server restart before taking effect.',\n                        placeholder: t('admin.log.locationPlaceholder'),\n                        placeholder_default: 'Enter your file location',\n                        isDisabled: it.stateIsFalse('LogSettings.EnableFile'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableWebhookDebugging',\n                        label: t('admin.log.enableWebhookDebugging'),\n                        label_default: 'Enable Webhook Debugging:',\n                        help_text: t('admin.log.enableWebhookDebuggingDescription'),\n                        help_text_default: 'When true, sends webhook debug messages to the server logs. To also output the request body of incoming webhooks, set {boldedLogLevel} to \"DEBUG\".',\n                        help_text_values: {\n                            boldedLogLevel: (\n                                <strong>\n                                    <FormattedMessage\n                                        id='admin.log.logLevel'\n                                        defaultMessage='Log Level'\n                                    />\n                                </strong>\n                            ),\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableDiagnostics',\n                        label: t('admin.log.enableDiagnostics'),\n                        label_default: 'Enable Diagnostics and Error Reporting:',\n                        help_text: t('admin.log.enableDiagnosticsDescription'),\n                        help_text_default: 'Enable this feature to improve the quality and performance of Mattermost by sending error reporting and diagnostic information to Mattermost, Inc. Read our [privacy policy](!https://about.mattermost.com/default-privacy-policy/) to learn more.',\n                        help_text_markdown: true,\n                        onConfigSave: (displayVal, previousVal) => {\n                            if (previousVal && previousVal !== displayVal) {\n                                trackEvent('ui', 'diagnostics_disabled');\n                            }\n                            return displayVal;\n                        },\n                    },\n                ],\n            },\n        },\n        session_lengths: {\n            url: 'environment/session_lengths',\n            title: t('admin.sidebar.sessionLengths'),\n            title_default: 'Session Lengths',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.sessionLengths.title',\n                'admin.service.webSessionDaysDesc.extendLength',\n                'admin.service.mobileSessionDaysDesc.extendLength',\n                'admin.service.ssoSessionDaysDesc.extendLength',\n                'admin.service.webSessionDaysDesc',\n                'admin.service.mobileSessionDaysDesc',\n                'admin.service.ssoSessionDaysDesc',\n                'admin.service.sessionIdleTimeout',\n                'admin.service.sessionIdleTimeoutDesc',\n                'admin.service.extendSessionLengthActivity.label',\n                'admin.service.extendSessionLengthActivity.helpText',\n                'admin.service.webSessionDays',\n                'admin.service.sessionDaysEx',\n                'admin.service.mobileSessionDays',\n                'admin.service.ssoSessionDays',\n                'admin.service.sessionCache',\n                'admin.service.sessionCacheDesc',\n            ],\n            schema: {\n                id: 'SessionLengths',\n                component: SessionLengthSettings,\n            },\n        },\n        metrics: {\n            url: 'environment/performance_monitoring',\n            title: t('admin.sidebar.metrics'),\n            title_default: 'Performance Monitoring',\n            isHidden: it.either(\n                it.isnt(it.licensedForFeature('Metrics')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            schema: {\n                id: 'MetricsSettings',\n                name: t('admin.advance.metrics'),\n                name_default: 'Performance Monitoring',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'MetricsSettings.Enable',\n                        label: t('admin.metrics.enableTitle'),\n                        label_default: 'Enable Performance Monitoring:',\n                        help_text: t('admin.metrics.enableDescription'),\n                        help_text_default: 'When true, Mattermost will enable performance monitoring collection and profiling. Please see [documentation](!http://docs.mattermost.com/deployment/metrics.html) to learn more about configuring performance monitoring for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'MetricsSettings.ListenAddress',\n                        label: t('admin.metrics.listenAddressTitle'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.metrics.listenAddressEx'),\n                        placeholder_default: 'E.g.: \":8067\"',\n                        help_text: t('admin.metrics.listenAddressDesc'),\n                        help_text_default: 'The address the server will listen on to expose performance metrics.',\n                    },\n                ],\n            },\n        },\n        developer: {\n            url: 'environment/developer',\n            title: t('admin.sidebar.developer'),\n            title_default: 'Developer',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.developer.title'),\n                name_default: 'Developer Settings',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTesting',\n                        label: t('admin.service.testingTitle'),\n                        label_default: 'Enable Testing Commands:',\n                        help_text: t('admin.service.testingDescription'),\n                        help_text_default: 'When true, /test slash command is enabled to load test accounts, data and text formatting. Changing this requires a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableDeveloper',\n                        label: t('admin.service.developerTitle'),\n                        label_default: 'Enable Developer Mode: ',\n                        help_text: t('admin.service.developerDesc'),\n                        help_text_default: 'When true, JavaScript errors are shown in a purple bar at the top of the user interface. Not recommended for use in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowedUntrustedInternalConnections',\n                        label: t('admin.service.internalConnectionsTitle'),\n                        label_default: 'Allow untrusted internal connections to: ',\n                        placeholder: t('admin.service.internalConnectionsEx'),\n                        placeholder_default: 'webhooks.internal.example.com 127.0.0.1 10.0.16.0/28',\n                        help_text: t('admin.service.internalConnectionsDesc'),\n                        help_text_default: 'A whitelist of local network addresses that can be requested by the Mattermost server on behalf of a client. Care should be used when configuring this setting to prevent unintended access to your local network. See [documentation](!https://mattermost.com/pl/default-allow-untrusted-internal-connections) to learn more.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n    },\n    site: {\n        icon: 'fa-cogs',\n        sectionTitle: t('admin.sidebar.site'),\n        sectionTitleDefault: 'Site Configuration',\n        customization: {\n            url: 'site_config/customization',\n            title: t('admin.sidebar.customization'),\n            title_default: 'Customization',\n            schema: {\n                id: 'Customization',\n                name: t('admin.site.customization'),\n                name_default: 'Customization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.SiteName',\n                        label: t('admin.team.siteNameTitle'),\n                        label_default: 'Site Name:',\n                        help_text: t('admin.team.siteNameDescription'),\n                        help_text_default: 'Name of service shown in login screens and UI. When not specified, it defaults to \"Mattermost\".',\n                        placeholder: t('admin.team.siteNameExample'),\n                        placeholder_default: 'E.g.: \"Mattermost\"',\n                        max_length: Constants.MAX_SITENAME_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.CustomDescriptionText',\n                        label: t('admin.team.brandDescriptionTitle'),\n                        label_default: 'Site Description: ',\n                        help_text: t('admin.team.brandDescriptionHelp'),\n                        help_text_default: 'Description of service shown in login screens and UI. When not specified, \"All team communication in one place, searchable and accessible anywhere\" is displayed.',\n                        placeholder: t('web.root.signup_info'),\n                        placeholder_default: 'All team communication in one place, searchable and accessible anywhere',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableCustomBrand',\n                        label: t('admin.team.brandTitle'),\n                        label_default: 'Enable Custom Branding: ',\n                        help_text: t('admin.team.brandDesc'),\n                        help_text_default: 'Enable custom branding to show an image of your choice, uploaded below, and some help text, written below, on the login page.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: BrandImageSetting,\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        key: 'CustomBrandImage',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LONG_TEXT,\n                        key: 'TeamSettings.CustomBrandText',\n                        label: t('admin.team.brandTextTitle'),\n                        label_default: 'Custom Brand Text:',\n                        help_text: t('admin.team.brandTextDescription'),\n                        help_text_default: 'Text that will appear below your custom brand image on your login screen. Supports Markdown-formatted text. Maximum 500 characters allowed.',\n                        isDisabled: it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        max_length: Constants.MAX_CUSTOM_BRAND_TEXT_LENGTH,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.HelpLink',\n                        label: t('admin.support.helpTitle'),\n                        label_default: 'Help Link:',\n                        help_text: t('admin.support.helpDesc'),\n                        help_text_default: 'The URL for the Help link on the Mattermost login page, sign-up pages, and Main Menu. If this field is empty, the Help link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.SupportEmail',\n                        label: t('admin.support.emailTitle'),\n                        label_default: 'Support Email:',\n                        help_text: t('admin.support.emailHelp'),\n                        help_text_default: 'Email address displayed on email notifications and during tutorial for end users to ask support questions.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.TermsOfServiceLink',\n                        label: t('admin.support.termsTitle'),\n                        label_default: 'Terms of Service Link:',\n                        help_text: t('admin.support.termsDesc'),\n                        help_text_default: 'Link to the terms under which users may use your online service. By default, this includes the \"Mattermost Conditions of Use (End Users)\" explaining the terms under which Mattermost software is provided to end users. If you change the default link to add your own terms for using the service you provide, your new terms must include a link to the default terms so end users are aware of the Mattermost Conditions of Use (End User) for Mattermost software.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.PrivacyPolicyLink',\n                        label: t('admin.support.privacyTitle'),\n                        label_default: 'Privacy Policy Link:',\n                        help_text: t('admin.support.privacyDesc'),\n                        help_text_default: 'The URL for the Privacy link on the login and sign-up pages. If this field is empty, the Privacy link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.AboutLink',\n                        label: t('admin.support.aboutTitle'),\n                        label_default: 'About Link:',\n                        help_text: t('admin.support.aboutDesc'),\n                        help_text_default: 'The URL for the About link on the Mattermost login and sign-up pages. If this field is empty, the About link is hidden from users.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.ReportAProblemLink',\n                        label: t('admin.support.problemTitle'),\n                        label_default: 'Report a Problem Link:',\n                        help_text: t('admin.support.problemDesc'),\n                        help_text_default: 'The URL for the Report a Problem link in the Main Menu. If this field is empty, the link is removed from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AppDownloadLink',\n                        label: t('admin.customization.appDownloadLinkTitle'),\n                        label_default: 'Mattermost Apps Download Page Link:',\n                        help_text: t('admin.customization.appDownloadLinkDesc'),\n                        help_text_default: 'Add a link to a download page for the Mattermost apps. When a link is present, an option to \"Download Mattermost Apps\" will be added in the Main Menu so users can find the download page. Leave this field blank to hide the option from the Main Menu.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AndroidAppDownloadLink',\n                        label: t('admin.customization.androidAppDownloadLinkTitle'),\n                        label_default: 'Android App Download Link:',\n                        help_text: t('admin.customization.androidAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the Android app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.IosAppDownloadLink',\n                        label: t('admin.customization.iosAppDownloadLinkTitle'),\n                        label_default: 'iOS App Download Link:',\n                        help_text: t('admin.customization.iosAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the iOS app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                    },\n                ],\n            },\n        },\n        localization: {\n            url: 'site_config/localization',\n            title: t('admin.sidebar.localization'),\n            title_default: 'Localization',\n            schema: {\n                id: 'LocalizationSettings',\n                name: t('admin.site.localization'),\n                name_default: 'Localization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultServerLocale',\n                        label: t('admin.general.localization.serverLocaleTitle'),\n                        label_default: 'Default Server Language:',\n                        help_text: t('admin.general.localization.serverLocaleDescription'),\n                        help_text_default: 'Default language for system messages. Changing this will require a server restart before taking effect.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultClientLocale',\n                        label: t('admin.general.localization.clientLocaleTitle'),\n                        label_default: 'Default Client Language:',\n                        help_text: t('admin.general.localization.clientLocaleDescription'),\n                        help_text_default: 'Default language for newly created users and pages where the user hasn\\'t logged in.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.AvailableLocales',\n                        label: t('admin.general.localization.availableLocalesTitle'),\n                        label_default: 'Available Languages:',\n                        help_text: t('admin.general.localization.availableLocalesDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'Set which languages are available for users in Account Settings (leave this field blank to have all supported languages available). If you\\'re manually adding new languages, the **Default Client Language** must be added before saving this setting.\\n \\nWould like to help with translations? Join the [Mattermost Translation Server](!http://translate.mattermost.com/) to contribute.',\n                        multiple: true,\n                        no_result: t('admin.general.localization.availableLocalesNoResults'),\n                        no_result_default: 'No results found',\n                        not_present: t('admin.general.localization.availableLocalesNotPresent'),\n                        not_present_default: 'The default client language must be included in the available list',\n                    },\n                ],\n            },\n        },\n        users_and_teams: {\n            url: 'site_config/users_and_teams',\n            title: t('admin.sidebar.usersAndTeams'),\n            title_default: 'Users and Teams',\n            schema: {\n                id: 'UserAndTeamsSettings',\n                name: t('admin.site.usersAndTeams'),\n                name_default: 'Users and Teams',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EnableTeamCreation',\n                        label: t('admin.team.teamCreationTitle'),\n                        label_default: 'Enable Team Creation: ',\n                        help_text: t('admin.team.teamCreationDescription'),\n                        help_text_default: 'When false, only System Administrators can create teams.',\n                        permissions_mapping_name: 'enableTeamCreation',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxUsersPerTeam',\n                        label: t('admin.team.maxUsersTitle'),\n                        label_default: 'Max Users Per Team:',\n                        help_text: t('admin.team.maxUsersDescription'),\n                        help_text_default: 'Maximum total number of users per team, including both active and inactive users.',\n                        placeholder: t('admin.team.maxUsersExample'),\n                        placeholder_default: 'E.g.: \"25\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxChannelsPerTeam',\n                        label: t('admin.team.maxChannelsTitle'),\n                        label_default: 'Max Channels Per Team:',\n                        help_text: t('admin.team.maxChannelsDescription'),\n                        help_text_default: 'Maximum total number of channels per team, including both active and archived channels.',\n                        placeholder: t('admin.team.maxChannelsExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.RestrictDirectMessage',\n                        label: t('admin.team.restrictDirectMessage'),\n                        label_default: 'Enable users to open Direct Message channels with:',\n                        help_text: t('admin.team.restrictDirectMessageDesc'),\n                        help_text_default: '\"Any user on the Mattermost server\" enables users to open a Direct Message channel with any user on the server, even if they are not on any teams together. \"Any member of the team\" limits the ability in the Direct Messages \"More\" menu to only open Direct Message channels with users who are in the same team.\\n \\nNote: This setting only affects the UI, not permissions on the server.',\n                        options: [\n                            {\n                                value: 'any',\n                                display_name: t('admin.team.restrict_direct_message_any'),\n                                display_name_default: 'Any user on the Mattermost server',\n                            },\n                            {\n                                value: 'team',\n                                display_name: t('admin.team.restrict_direct_message_team'),\n                                display_name_default: 'Any member of the team',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.TeammateNameDisplay',\n                        label: t('admin.team.teammateNameDisplay'),\n                        label_default: 'Teammate Name Display:',\n                        help_text: t('admin.team.teammateNameDisplayDesc'),\n                        help_text_default: 'Set how to display users\\' names in posts and the Direct Messages list.',\n                        options: [\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_USERNAME,\n                                display_name: t('admin.team.showUsername'),\n                                display_name_default: 'Show username (default)',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_NICKNAME_FULLNAME,\n                                display_name: t('admin.team.showNickname'),\n                                display_name_default: 'Show nickname if one exists, otherwise show first and last name',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_FULLNAME,\n                                display_name: t('admin.team.showFullname'),\n                                display_name_default: 'Show first and last name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.LockTeammateNameDisplay',\n                        label: t('admin.lockTeammateNameDisplay'),\n                        label_default: 'Lock Teammate Name Display for all users: ',\n                        help_text: t('admin.lockTeammateNameDisplayHelpText'),\n                        help_text_default: 'When true, disables users\\' ability to change settings under Main Menu > Account Settings > Display > Teammate Name Display.',\n                        isHidden: it.isnt(it.licensedForFeature('LockTeammateNameDisplay')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EditOthersPosts',\n                        label: t('admin.team.editOthersPostsTitle'),\n                        label_default: 'Allow Team Administrators to edit others posts:',\n                        help_text: t('admin.team.editOthersPostsDesc'),\n                        help_text_default: 'When true, Team Administrators and System Administrators can edit other user\\'s posts.  When false, only System Administrators can edit other user\\'s posts.',\n                        permissions_mapping_name: 'editOthersPosts',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalViewArchivedChannels',\n                        label: t('admin.viewArchivedChannelsTitle'),\n                        label_default: 'Allow users to view archived channels: ',\n                        help_text: t('admin.viewArchivedChannelsHelpText'),\n                        help_text_default: '(Beta) When true, allows users to view, share and search for content of channels that have been archived. Users can only view the content in channels of which they were a member before the channel was archived.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowEmailAddress',\n                        label: t('admin.privacy.showEmailTitle'),\n                        label_default: 'Show Email Address:',\n                        help_text: t('admin.privacy.showEmailDescription'),\n                        help_text_default: 'When false, hides the email address of members from everyone except System Administrators.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowFullName',\n                        label: t('admin.privacy.showFullNameTitle'),\n                        label_default: 'Show Full Name:',\n                        help_text: t('admin.privacy.showFullNameDescription'),\n                        help_text_default: 'When false, hides the full name of members from everyone except System Administrators. Username is shown in place of full name.',\n                    },\n                ],\n            },\n        },\n        notifications: {\n            url: 'environment/notifications',\n            title: t('admin.sidebar.notifications'),\n            title_default: 'Notifications',\n            schema: {\n                id: 'notifications',\n                name: t('admin.environment.notifications'),\n                name_default: 'Notifications',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableConfirmNotificationsToChannel',\n                        label: t('admin.environment.notifications.enableConfirmNotificationsToChannel.label'),\n                        label_default: 'Show @channel and @all and group mention confirmation dialog:',\n                        help_text: t('admin.environment.notifications.enableConfirmNotificationsToChannel.help'),\n                        help_text_default: 'When true, users will be prompted to confirm when posting @channel, @all and group mentions in channels with over five members. When false, no confirmation is required.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SendEmailNotifications',\n                        label: t('admin.environment.notifications.enable.label'),\n                        label_default: 'Enable Email Notifications:',\n                        help_text: t('admin.environment.notifications.enable.help'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost attempts to send email notifications. When false, email invitations and user account setting change emails are still sent as long as the SMTP server is configured. Developers may set this field to false to skip email setup for faster development.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnablePreviewModeBanner',\n                        label: t('admin.environment.notifications.enablePreviewModeBanner.label'),\n                        label_default: 'Enable Preview Mode Banner:',\n                        help_text: t('admin.environment.notifications.enablePreviewModeBanner.help'),\n                        help_text_default: 'When true, the Preview Mode banner is displayed so users are aware that email notifications are disabled. When false, the Preview Mode banner is not displayed to users.',\n                        isDisabled: it.either(\n                            it.stateIsTrue('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableEmailBatching',\n                        label: t('admin.environment.notifications.enableEmailBatching.label'),\n                        label_default: 'Enable Email Batching:',\n                        help_text: t('admin.environment.notifications.enableEmailBatching.help'),\n                        help_text_default: 'When true, users will have email notifications for multiple direct messages and mentions combined into a single email. Batching will occur at a default interval of 15 minutes, configurable in Account Settings > Notifications.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                            it.configIsTrue('ClusterSettings', 'Enable'),\n                            it.configIsFalse('ServiceSettings', 'SiteURL'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.EmailNotificationContentsType',\n                        label: t('admin.environment.notifications.contents.label'),\n                        label_default: 'Email Notification Contents:',\n                        help_text: t('admin.environment.notifications.contents.help'),\n                        help_text_default: '**Send full message contents** - Sender name and channel are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.\\n  **Send generic description with only sender name** - Only the name of the person who sent the message, with no information about channel name or message contents are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('EmailNotificationContents')),\n                        options: [\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.contents.full'),\n                                display_name_default: 'Send full message contents',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.contents.generic'),\n                                display_name_default: 'Send generic description with only sender name',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackName',\n                        label: t('admin.environment.notifications.notificationDisplay.label'),\n                        label_default: 'Notification Display Name:',\n                        placeholder: t('admin.environment.notifications.notificationDisplay.placeholder'),\n                        placeholder_default: 'Ex: \"Mattermost Notification\", \"System\", \"No-Reply\"',\n                        help_text: t('admin.environment.notifications.notificationDisplay.help'),\n                        help_text_default: 'Display name on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackEmail',\n                        label: t('admin.environment.notifications.feedbackEmail.label'),\n                        label_default: 'Notification From Address:',\n                        placeholder: t('admin.environment.notifications.feedbackEmail.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.feedbackEmail.help'),\n                        help_text_default: 'Email address displayed on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.ReplyToAddress',\n                        label: t('admin.environment.notifications.replyToAddress.label'),\n                        label_default: 'Notification Reply-To Address:',\n                        placeholder: t('admin.environment.notifications.replyToAddress.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.replyToAddress.help'),\n                        help_text_default: 'Email address used in the Reply-To header when sending notification emails from Mattermost.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackOrganization',\n                        label: t('admin.environment.notifications.feedbackOrganization.label'),\n                        label_default: 'Notification Footer Mailing Address:',\n                        placeholder: t('admin.environment.notifications.feedbackOrganization.placeholder'),\n                        placeholder_default: 'Ex: \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\"',\n                        help_text: t('admin.environment.notifications.feedbackOrganization.help'),\n                        help_text_default: 'Organization name and address displayed on email notifications from Mattermost, such as \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\". If the field is left empty, the organization name and address will not be displayed.',\n                        isDisabled: it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.',\n                        help_text_markdown: true,\n                        isHidden: it.licensedForFeature('IDLoadedPushNotifications'),\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.withIdLoaded.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.\\n **Full message content fetched from the server on receipt** - The notification payload relayed through APNS or FCM contains no message content, instead it contains a unique message ID used to fetch message content from the server when a push notification is received by a device. If the server cannot be reached, a generic notification will be displayed.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('IDLoadedPushNotifications')),\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            },\n                            {\n                                value: 'id_loaded',\n                                display_name: t('admin.environment.notifications.pushContents.idLoaded'),\n                                display_name_default: 'Full message content fetched from the server on receipt',\n                            },\n                        ],\n                    },\n                ],\n            },\n        },\n        announcement_banner: {\n            url: 'site_config/announcement_banner',\n            title: t('admin.sidebar.announcement'),\n            title_default: 'Announcement Banner',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'AnnouncementSettings',\n                name: t('admin.site.announcementBanner'),\n                name_default: 'Announcement Banner',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.EnableBanner',\n                        label: t('admin.customization.announcement.enableBannerTitle'),\n                        label_default: 'Enable Announcement Banner:',\n                        help_text: t('admin.customization.announcement.enableBannerDesc'),\n                        help_text_default: 'Enable an announcement banner across all teams.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'AnnouncementSettings.BannerText',\n                        label: t('admin.customization.announcement.bannerTextTitle'),\n                        label_default: 'Banner Text:',\n                        help_text: t('admin.customization.announcement.bannerTextDesc'),\n                        help_text_default: 'Text that will appear in the announcement banner.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerColor',\n                        label: t('admin.customization.announcement.bannerColorTitle'),\n                        label_default: 'Banner Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerTextColor',\n                        label: t('admin.customization.announcement.bannerTextColorTitle'),\n                        label_default: 'Banner Text Color:',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.AllowBannerDismissal',\n                        label: t('admin.customization.announcement.allowBannerDismissalTitle'),\n                        label_default: 'Allow Banner Dismissal:',\n                        help_text: t('admin.customization.announcement.allowBannerDismissalDesc'),\n                        help_text_default: 'When true, users can dismiss the banner until its next update. When false, the banner is permanently visible until it is turned off by the System Admin.',\n                        isDisabled: it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                    },\n                ],\n            },\n        },\n        emoji: {\n            url: 'site_config/emoji',\n            title: t('admin.sidebar.emoji'),\n            title_default: 'Emoji',\n            schema: {\n                id: 'EmojiSettings',\n                name: t('admin.site.emoji'),\n                name_default: 'Emoji',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmojiPicker',\n                        label: t('admin.customization.enableEmojiPickerTitle'),\n                        label_default: 'Enable Emoji Picker:',\n                        help_text: t('admin.customization.enableEmojiPickerDesc'),\n                        help_text_default: 'The emoji picker allows users to select emoji to add as reactions or use in messages. Enabling the emoji picker with a large number of custom emoji may slow down performance.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCustomEmoji',\n                        label: t('admin.customization.enableCustomEmojiTitle'),\n                        label_default: 'Enable Custom Emoji:',\n                        help_text: t('admin.customization.enableCustomEmojiDesc'),\n                        help_text_default: 'Enable users to create custom emoji for use in messages. When enabled, Custom Emoji settings can be accessed by switching to a team and clicking the three dots above the channel sidebar, and selecting \"Custom Emoji\".',\n                    },\n                ],\n            },\n        },\n        posts: {\n            url: 'site_config/posts',\n            title: t('admin.sidebar.posts'),\n            title_default: 'Posts',\n            schema: {\n                id: 'PostSettings',\n                name: t('admin.site.posts'),\n                name_default: 'Posts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLinkPreviews',\n                        label: t('admin.customization.enableLinkPreviewsTitle'),\n                        label_default: 'Enable Link Previews:',\n                        help_text: t('admin.customization.enableLinkPreviewsDesc'),\n                        help_text_default: 'Display a preview of website content, image links and YouTube links below the message when available. The server must be connected to the internet and have access through the firewall (if applicable) to the websites from which previews are expected. Users can disable these previews from Account Settings > Display > Website Link Previews.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSVGs',\n                        label: t('admin.customization.enableSVGsTitle'),\n                        label_default: 'Enable SVGs:',\n                        help_text: t('admin.customization.enableSVGsDesc'),\n                        help_text_default: 'Enable previews for SVG file attachments and allow them to appear in messages.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLatex',\n                        label: t('admin.customization.enableLatexTitle'),\n                        label_default: 'Enable Latex Rendering:',\n                        help_text: t('admin.customization.enableLatexDesc'),\n                        help_text_default: 'Enable rendering of Latex code. If false, Latex code will be highlighted only.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomUrlSchemesSetting,\n                        key: 'DisplaySettings.CustomUrlSchemes',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GoogleDeveloperKey',\n                        label: t('admin.service.googleTitle'),\n                        label_default: 'Google API Key:',\n                        placeholder: t('admin.service.googleExample'),\n                        placeholder_default: 'E.g.: \"7rAh6iwQCkV4cA1Gsg3fgGOXJAQ43QV\"',\n                        help_text: t('admin.service.googleDescription'),\n                        help_text_default: 'Set this key to enable the display of titles for embedded YouTube video previews. Without the key, YouTube previews will still be created based on hyperlinks appearing in messages or comments but they will not show the video title. View a [Google Developers Tutorial](!https://www.youtube.com/watch?v=Im69kzhpR3I) for instructions on how to obtain a key and add YouTube Data API v3 as a service to your key.',\n                        help_text_markdown: true,\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                ],\n            },\n        },\n        file_sharing_downloads: {\n            url: 'site_config/file_sharing_downloads',\n            title: t('admin.sidebar.fileSharingDownloads'),\n            title_default: 'File Sharing and Downloads',\n            schema: {\n                id: 'FileSharingDownloads',\n                name: t('admin.site.fileSharingDownloads'),\n                name_default: 'File Sharing and Downloads',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableFileAttachments',\n                        label: t('admin.file.enableFileAttachments'),\n                        label_default: 'Allow File Sharing:',\n                        help_text: t('admin.file.enableFileAttachmentsDesc'),\n                        help_text_default: 'When false, disables file sharing on the server. All file and image uploads on messages are forbidden across clients and devices, including mobile.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileUpload',\n                        label: t('admin.file.enableMobileUploadTitle'),\n                        label_default: 'Allow File Uploads on Mobile:',\n                        help_text: t('admin.file.enableMobileUploadDesc'),\n                        help_text_default: 'When false, disables file uploads on mobile apps. If Allow File Sharing is set to true, users can still upload files from a mobile web browser.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileDownload',\n                        label: t('admin.file.enableMobileDownloadTitle'),\n                        label_default: 'Allow File Downloads on Mobile:',\n                        help_text: t('admin.file.enableMobileDownloadDesc'),\n                        help_text_default: 'When false, disables file downloads on mobile apps. Users can still download files from a mobile web browser.',\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                ],\n            },\n        },\n        public_links: {\n            url: 'site_config/public_links',\n            title: t('admin.sidebar.publicLinks'),\n            title_default: 'Public Links',\n            schema: {\n                id: 'PublicLinkSettings',\n                name: t('admin.site.public_links'),\n                name_default: 'Public Links',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnablePublicLink',\n                        label: t('admin.image.shareTitle'),\n                        label_default: 'Enable Public File Links: ',\n                        help_text: t('admin.image.shareDescription'),\n                        help_text_default: 'Allow users to share public links to files and images.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_GENERATED,\n                        key: 'FileSettings.PublicLinkSalt',\n                        label: t('admin.image.publicLinkTitle'),\n                        label_default: 'Public Link Salt:',\n                        help_text: t('admin.image.publicLinkDescription'),\n                        help_text_default: '32-character salt added to signing of public image links. Randomly generated on install. Click \"Regenerate\" to create new salt.',\n                    },\n                ],\n            },\n        },\n    },\n    authentication: {\n        icon: 'fa-shield',\n        sectionTitle: t('admin.sidebar.authentication'),\n        sectionTitleDefault: 'Authentication',\n        signup: {\n            url: 'authentication/signup',\n            title: t('admin.sidebar.signup'),\n            title_default: 'Signup',\n            schema: {\n                id: 'SignupSettings',\n                name: t('admin.authentication.signup'),\n                name_default: 'Signup',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserCreation',\n                        label: t('admin.team.userCreationTitle'),\n                        label_default: 'Enable Account Creation: ',\n                        help_text: t('admin.team.userCreationDescription'),\n                        help_text_default: 'When false, the ability to create accounts is disabled. The create account button displays error when pressed.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict new system and team members to specified email domains:',\n                        help_text: t('admin.team.restrictDescription'),\n                        help_text_default: 'New user accounts are restricted to the above specified email domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). New teams can only be created by users from the above domain(s). This setting only affects email login for users.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict new system and team members to specified email domains:',\n                        help_text: t('admin.team.restrictGuestDescription'),\n                        help_text_default: 'New user accounts are restricted to the above specified email domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). New teams can only be created by users from the above domain(s). This setting affects email login for users. For Guest users, please add domains under Signup > Guest Access.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.isnt(it.licensed),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableOpenServer',\n                        label: t('admin.team.openServerTitle'),\n                        label_default: 'Enable Open Server: ',\n                        help_text: t('admin.team.openServerDescription'),\n                        help_text_default: 'When true, anyone can signup for a user account on this server without the need to be invited.',\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmailInvitations',\n                        label: t('admin.team.emailInvitationsTitle'),\n                        label_default: 'Enable Email Invitations: ',\n                        help_text: t('admin.team.emailInvitationsDescription'),\n                        help_text_default: 'When true users can invite others to the system using email.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'InvalidateEmailInvitesButton',\n                        action: invalidateAllEmailInvites,\n                        label: t('admin.team.invalidateEmailInvitesTitle'),\n                        label_default: 'Invalidate pending email invites',\n                        help_text: t('admin.team.invalidateEmailInvitesDescription'),\n                        help_text_default: 'This will invalidate active email invitations that have not been accepted by the user.  By default email invitations expire after 48 hours.',\n                        error_message: t('admin.team.invalidateEmailInvitesFail'),\n                        error_message_default: 'Unable to invalidate pending email invites: {error}',\n                        success_message: t('admin.team.invalidateEmailInvitesSuccess'),\n                        success_message_default: 'Pending email invitations invalidated successfully',\n                    },\n                ],\n            },\n        },\n        email: {\n            url: 'authentication/email',\n            title: t('admin.sidebar.email'),\n            title_default: 'Email',\n            schema: {\n                id: 'EmailSettings',\n                name: t('admin.authentication.email'),\n                name_default: 'Email',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignUpWithEmail',\n                        label: t('admin.email.allowSignupTitle'),\n                        label_default: 'Enable account creation with email:',\n                        help_text: t('admin.email.allowSignupDescription'),\n                        help_text_default: 'When true, Mattermost allows account creation using email and password. This value should be false only when you want to limit sign up to a single sign-on service like AD/LDAP, SAML or GitLab.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.RequireEmailVerification',\n                        label: t('admin.email.requireVerificationTitle'),\n                        label_default: 'Require Email Verification: ',\n                        help_text: t('admin.email.requireVerificationDescription'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost requires email verification after account creation prior to allowing login. Developers may set this field to false to skip sending verification emails for faster development.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithEmail',\n                        label: t('admin.email.allowEmailSignInTitle'),\n                        label_default: 'Enable sign-in with email:',\n                        help_text: t('admin.email.allowEmailSignInDescription'),\n                        help_text_default: 'When true, Mattermost allows users to sign in using their email and password.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithUsername',\n                        label: t('admin.email.allowUsernameSignInTitle'),\n                        label_default: 'Enable sign-in with username:',\n                        help_text: t('admin.email.allowUsernameSignInDescription'),\n                        help_text_default: 'When true, users with email login can sign in using their username and password. This setting does not affect AD/LDAP login.',\n                    },\n                ],\n            },\n        },\n        password: {\n            url: 'authentication/password',\n            title: t('admin.sidebar.password'),\n            title_default: 'Password',\n            searchableStrings: [\n                'user.settings.security.passwordMinLength',\n                'admin.security.password',\n                ['admin.password.minimumLength', {max: '', min: ''}],\n                ['admin.password.minimumLengthDescription', {max: '', min: ''}],\n                'passwordRequirements',\n                'admin.password.lowercase',\n                'admin.password.uppercase',\n                'admin.password.number',\n                'admin.password.symbol',\n                'admin.password.preview',\n                'admin.service.attemptTitle',\n                'admin.service.attemptDescription',\n            ],\n            schema: {\n                id: 'PasswordSettings',\n                component: PasswordSettings,\n            },\n        },\n        mfa: {\n            url: 'authentication/mfa',\n            title: t('admin.sidebar.mfa'),\n            title_default: 'MFA',\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.authentication.mfa'),\n                name_default: 'Multi-factor Authentication',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.mfa.bannerDesc'),\n                        label_default: '[Multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is available for accounts with AD/LDAP or email login. If other login methods are used, MFA should be configured with the authentication provider.',\n                        label_markdown: true,\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableMultifactorAuthentication',\n                        label: t('admin.service.mfaTitle'),\n                        label_default: 'Enable Multi-factor Authentication:',\n                        help_text: t('admin.service.mfaDesc'),\n                        help_text_default: 'When true, users with AD/LDAP or email login can add multi-factor authentication to their account using Google Authenticator.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.service.enforceMfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication:',\n                        help_text: t('admin.service.enforceMfaDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is required for login. New users will be required to configure MFA on signup. Logged in users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableMultifactorAuthentication'),\n                        isHidden: it.isnt(it.licensedForFeature('MFA')),\n                    },\n                ],\n            },\n        },\n        ldap: {\n            url: 'authentication/ldap',\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: it.isnt(it.licensedForFeature('LDAP')),\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.Enable',\n                        label: t('admin.ldap.enableTitle'),\n                        label_default: 'Enable sign-in with AD/LDAP:',\n                        help_text: t('admin.ldap.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows login using AD/LDAP',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableSync',\n                        label: t('admin.ldap.enableSyncTitle'),\n                        label_default: 'Enable Synchronization with AD/LDAP:',\n                        help_text: t('admin.ldap.enableSyncDesc'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes users from AD/LDAP. When false, user attributes are updated from AD/LDAP during user login only.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LdapServer',\n                        label: t('admin.ldap.serverTitle'),\n                        label_default: 'AD/LDAP Server:',\n                        help_text: t('admin.ldap.serverDesc'),\n                        help_text_default: 'The domain or IP address of AD/LDAP server.',\n                        placeholder: t('admin.ldap.serverEx'),\n                        placeholder_default: 'E.g.: \"10.0.0.23\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.LdapPort',\n                        label: t('admin.ldap.portTitle'),\n                        label_default: 'AD/LDAP Port:',\n                        help_text: t('admin.ldap.portDesc'),\n                        help_text_default: 'The port Mattermost will use to connect to the AD/LDAP server. Default is 389.',\n                        placeholder: t('admin.ldap.portEx'),\n                        placeholder_default: 'E.g.: \"389\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LdapSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_LDAP,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.connectionSecurityStart'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.SkipCertificateVerification',\n                        label: t('admin.ldap.skipCertificateVerification'),\n                        label_default: 'Skip Certificate Verification:',\n                        help_text: t('admin.ldap.skipCertificateVerificationDesc'),\n                        help_text_default: 'Skips the certificate verification step for TLS or STARTTLS connections. Skipping certificate verification is not recommended for production environments where TLS is required.',\n                        isDisabled: it.stateIsFalse('LdapSettings.ConnectionSecurity'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BaseDN',\n                        label: t('admin.ldap.baseTitle'),\n                        label_default: 'BaseDN:',\n                        help_text: t('admin.ldap.baseDesc'),\n                        help_text_default: 'The Base DN is the Distinguished Name of the location where Mattermost should start its search for user and group objects in the AD/LDAP tree.',\n                        placeholder: t('admin.ldap.baseEx'),\n                        placeholder_default: 'E.g.: \"ou=Unit Name,dc=corp,dc=example,dc=com\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindUsername',\n                        label: t('admin.ldap.bindUserTitle'),\n                        label_default: 'Bind Username:',\n                        help_text: t('admin.ldap.bindUserDesc'),\n                        help_text_default: 'The username used to perform the AD/LDAP search. This should typically be an account created specifically for use with Mattermost. It should have access limited to read the portion of the AD/LDAP tree specified in the BaseDN field.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindPassword',\n                        label: t('admin.ldap.bindPwdTitle'),\n                        label_default: 'Bind Password:',\n                        help_text: t('admin.ldap.bindPwdDesc'),\n                        help_text_default: 'Password of the user given in \"Bind Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UserFilter',\n                        label: t('admin.ldap.userFilterTitle'),\n                        label_default: 'User Filter:',\n                        help_text: t('admin.ldap.userFilterDisc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for user objects. Only the users selected by the query will be able to access Mattermost. For Active Directory, the query to filter out disabled users is (&(objectCategory=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))).',\n                        placeholder: t('admin.ldap.userFilterEx'),\n                        placeholder_default: 'Ex. \"(objectClass=user)\"',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GuestFilter',\n                        label: t('admin.ldap.guestFilterTitle'),\n                        label_default: 'Guest Filter:',\n                        help_text: t('admin.ldap.guestFilterFilterDesc'),\n                        help_text_default: '(Optional) Requires Guest Access to be enabled before being applied. Enter an AD/LDAP filter to use when searching for guest objects. Only the users selected by the query will be able to access Mattermost as Guests. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this filter is removed/changed, active guests will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.guestFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=user)\"',\n                        isDisabled: it.either(\n                            it.configIsFalse('GuestAccountsSettings', 'Enable'),\n                            it.both(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableAdminFilter',\n                        label: t('admin.ldap.enableAdminFilterTitle'),\n                        label_default: 'Enable Admin Filter:',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.AdminFilter',\n                        label: t('admin.ldap.adminFilterTitle'),\n                        label_default: 'Admin Filter:',\n                        help_text: t('admin.ldap.adminFilterFilterDesc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use for designating System Admins. The users selected by the query will have access to your Mattermost server as System Admins. By default, System Admins have complete access to the Mattermost System Console.\\n \\nExisting members that are identified by this attribute will be promoted from member to System Admin upon next login. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to members in **System Console > User Management** to ensure access is restricted immediately.\\n \\nNote: If this filter is removed/changed, System Admins that were promoted via this filter will be demoted to members and will not retain access to the System Console. When this filter is not in use, System Admins can be manually promoted/demoted in **System Console > User Management**.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.adminFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=user)\"',\n                        isDisabled: it.either(\n                            it.stateIsFalse('LdapSettings.EnableAdminFilter'),\n                            it.both(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupFilter',\n                        label: t('admin.ldap.groupFilterTitle'),\n                        label_default: 'Group Filter:',\n                        help_text: t('admin.ldap.groupFilterFilterDesc'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for group objects. Only the groups selected by the query will be available to Mattermost. From [User Management > Groups]({siteURL}/admin_console/user_management/groups), select which AD/LDAP groups should be linked and configured.',\n                        help_text_values: {siteURL: getSiteURL()},\n                        placeholder: t('admin.ldap.groupFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=group)\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: it.isnt(it.licensedForFeature('LDAPGroups')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupDisplayNameAttribute',\n                        label: t('admin.ldap.groupDisplayNameAttributeTitle'),\n                        label_default: 'Group Display Name Attribute:',\n                        help_text: t('admin.ldap.groupDisplayNameAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the group display names.',\n                        placeholder: t('admin.ldap.groupDisplayNameAttributeEx'),\n                        placeholder_default: 'E.g.: \"cn\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: it.isnt(it.licensedForFeature('LDAPGroups')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupIdAttribute',\n                        label: t('admin.ldap.groupIdAttributeTitle'),\n                        label_default: 'Group ID Attribute:',\n                        help_text: t('admin.ldap.groupIdAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier for Groups. This should be a AD/LDAP attribute with a value that does not change such as `entryUUID` for LDAP or `objectGUID` for Active Directory.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.groupIdAttributeEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"entryUUID\"',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        isHidden: it.isnt(it.licensedForFeature('LDAPGroups')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.FirstNameAttribute',\n                        label: t('admin.ldap.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.ldap.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"givenName\"',\n                        help_text: t('admin.ldap.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the first name of users in Mattermost. When set, users cannot edit their first name, since it is synchronized with the LDAP server. When left blank, users can set their first name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LastNameAttribute',\n                        label: t('admin.ldap.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.ldap.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"sn\"',\n                        help_text: t('admin.ldap.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the last name of users in Mattermost. When set, users cannot edit their last name, since it is synchronized with the LDAP server. When left blank, users can set their last name in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.NicknameAttribute',\n                        label: t('admin.ldap.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.ldap.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"nickname\"',\n                        help_text: t('admin.ldap.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the nickname of users in Mattermost. When set, users cannot edit their nickname, since it is synchronized with the LDAP server. When left blank, users can set their nickname in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PositionAttribute',\n                        label: t('admin.ldap.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.ldap.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"title\"',\n                        help_text: t('admin.ldap.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the position field in Mattermost. When set, users cannot edit their position, since it is synchronized with the LDAP server. When left blank, users can set their position in Account Settings.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.EmailAttribute',\n                        label: t('admin.ldap.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.ldap.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"mail\" or \"userPrincipalName\"',\n                        help_text: t('admin.ldap.emailAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the email address field in Mattermost.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PictureAttribute',\n                        label: t('admin.ldap.pictureAttrTitle'),\n                        label_default: 'Profile Picture Attribute:',\n                        placeholder: t('admin.ldap.pictureAttrEx'),\n                        placeholder_default: 'E.g.: \"thumbnailPhoto\" or \"jpegPhoto\"',\n                        help_text: t('admin.ldap.pictureAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the profile picture in Mattermost.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UsernameAttribute',\n                        label: t('admin.ldap.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.ldap.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the username field in Mattermost. This may be the same as the Login ID Attribute.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.IdAttribute',\n                        label: t('admin.ldap.idAttrTitle'),\n                        label_default: 'ID Attribute: ',\n                        placeholder: t('admin.ldap.idAttrEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"uid\"',\n                        help_text: t('admin.ldap.idAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier in Mattermost. It should be an AD/LDAP attribute with a value that does not change such as `uid` for LDAP or `objectGUID` for Active Directory. If a user\\'s ID Attribute changes, it will create a new Mattermost account unassociated with their old one.\\n \\nIf you need to change this field after users have already logged in, use the [mattermost ldap idmigrate](!https://about.mattermost.com/default-mattermost-ldap-idmigrate) CLI tool.',\n                        isDisabled: it.both(\n                            it.stateEquals('LdapSettings.Enable', false),\n                            it.stateEquals('LdapSettings.EnableSync', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginIdAttribute',\n                        label: t('admin.ldap.loginAttrTitle'),\n                        label_default: 'Login ID Attribute: ',\n                        placeholder: t('admin.ldap.loginIdAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.loginAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used to log in to Mattermost. Normally this attribute is the same as the \"Username Attribute\" field above.\\n \\nIf your team typically uses domain/username to log in to other services with AD/LDAP, you may enter domain/username in this field to maintain consistency between sites.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginFieldName',\n                        label: t('admin.ldap.loginNameTitle'),\n                        label_default: 'Sign-in Field Default Text:',\n                        placeholder: t('admin.ldap.loginNameEx'),\n                        placeholder_default: 'E.g.: \"AD/LDAP Username\"',\n                        help_text: t('admin.ldap.loginNameDesc'),\n                        help_text_default: 'The placeholder text that appears in the login field on the login page. Defaults to \"AD/LDAP Username\".',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.SyncIntervalMinutes',\n                        label: t('admin.ldap.syncIntervalTitle'),\n                        label_default: 'Synchronization Interval (minutes):',\n                        help_text: t('admin.ldap.syncIntervalHelpText'),\n                        help_text_default: 'AD/LDAP Synchronization updates Mattermost user information to reflect updates on the AD/LDAP server. For example, when a user\\'s name changes on the AD/LDAP server, the change updates in Mattermost when synchronization is performed. Accounts removed from or disabled in the AD/LDAP server have their Mattermost accounts set to \"Inactive\" and have their account sessions revoked. Mattermost performs synchronization on the interval entered. For example, if 60 is entered, Mattermost synchronizes every 60 minutes.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.MaxPageSize',\n                        label: t('admin.ldap.maxPageSizeTitle'),\n                        label_default: 'Maximum Page Size:',\n                        placeholder: t('admin.ldap.maxPageSizeEx'),\n                        placeholder_default: 'E.g.: \"2000\"',\n                        help_text: t('admin.ldap.maxPageSizeHelpText'),\n                        help_text_default: 'The maximum number of users the Mattermost server will request from the AD/LDAP server at one time. 0 is unlimited.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.QueryTimeout',\n                        label: t('admin.ldap.queryTitle'),\n                        label_default: 'Query Timeout (seconds):',\n                        placeholder: t('admin.ldap.queryEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        help_text: t('admin.ldap.queryDesc'),\n                        help_text_default: 'The timeout value for queries to the AD/LDAP server. Increase if you are getting timeout errors caused by a slow AD/LDAP server.',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: ldapTest,\n                        key: 'LdapSettings.LdapTest',\n                        label: t('admin.ldap.ldap_test_button'),\n                        label_default: 'AD/LDAP Test',\n                        help_text: t('admin.ldap.testHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Tests if the Mattermost server can connect to the AD/LDAP server specified. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        error_message: t('admin.ldap.testFailure'),\n                        error_message_default: 'AD/LDAP Test Failure: {error}',\n                        success_message: t('admin.ldap.testSuccess'),\n                        success_message_default: 'AD/LDAP Test Successful',\n                        isDisabled: it.both(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_JOBSTABLE,\n                        job_type: Constants.JobTypes.LDAP_SYNC,\n                        label: t('admin.ldap.sync_button'),\n                        label_default: 'AD/LDAP Synchronize Now',\n                        help_text: t('admin.ldap.syncNowHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Initiates an AD/LDAP synchronization immediately. See the table below for status of each synchronization. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        isDisabled: it.stateIsFalse('LdapSettings.EnableSync'),\n                        render_job: (job) => {\n                            let ldapUsers = 0;\n                            let deleteCount = 0;\n                            let updateCount = 0;\n                            let linkedLdapGroupsCount; // Deprecated.\n                            let totalLdapGroupsCount = 0;\n                            let groupDeleteCount = 0;\n                            let groupMemberDeleteCount = 0;\n                            let groupMemberAddCount = 0;\n\n                            if (job && job.data) {\n                                if (job.data.ldap_users_count && job.data.ldap_users_count.length > 0) {\n                                    ldapUsers = job.data.ldap_users_count;\n                                }\n\n                                if (job.data.delete_count && job.data.delete_count.length > 0) {\n                                    deleteCount = job.data.delete_count;\n                                }\n\n                                if (job.data.update_count && job.data.update_count.length > 0) {\n                                    updateCount = job.data.update_count;\n                                }\n\n                                // Deprecated groups count representing the number of linked LDAP groups.\n                                if (job.data.ldap_groups_count) {\n                                    linkedLdapGroupsCount = job.data.ldap_groups_count;\n                                }\n\n                                // Groups count representing the total number of LDAP groups available based on\n                                // the configured based DN and groups filter.\n                                if (job.data.total_ldap_groups_count) {\n                                    totalLdapGroupsCount = job.data.total_ldap_groups_count;\n                                }\n\n                                if (job.data.group_delete_count) {\n                                    groupDeleteCount = job.data.group_delete_count;\n                                }\n\n                                if (job.data.group_member_delete_count) {\n                                    groupMemberDeleteCount = job.data.group_member_delete_count;\n                                }\n\n                                if (job.data.group_member_add_count) {\n                                    groupMemberAddCount = job.data.group_member_add_count;\n                                }\n                            }\n\n                            return (\n                                <span>\n                                    <FormattedMessage\n                                        id={linkedLdapGroupsCount ? 'admin.ldap.jobExtraInfo' : 'admin.ldap.jobExtraInfoTotal'}\n                                        defaultMessage={linkedLdapGroupsCount ? 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} linked groups.' : 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} groups.'}\n                                        values={{\n                                            ldapUsers,\n                                            ldapGroups: linkedLdapGroupsCount || totalLdapGroupsCount, // Show the old count for jobs records containing the old JSON key.\n                                        }}\n                                    />\n                                    <ul>\n                                        {updateCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.updatedUsers'\n                                                    defaultMessage='Updated {updateCount, number} users.'\n                                                    values={{\n                                                        updateCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {deleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deactivatedUsers'\n                                                    defaultMessage='Deactivated {deleteCount, number} users.'\n                                                    values={{\n                                                        deleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroups'\n                                                    defaultMessage='Deleted {groupDeleteCount, number} groups.'\n                                                    values={{\n                                                        groupDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroupMembers'\n                                                    defaultMessage='Deleted {groupMemberDeleteCount, number} group members.'\n                                                    values={{\n                                                        groupMemberDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberAddCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.addedGroupMembers'\n                                                    defaultMessage='Added {groupMemberAddCount, number} group members.'\n                                                    values={{\n                                                        groupMemberAddCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                    </ul>\n                                </span>\n                            );\n                        },\n                    },\n                ],\n            },\n        },\n        ldap_feature_discovery: {\n            url: 'authentication/discover-ldap',\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: it.either(\n                it.licensedForFeature('LDAP'),\n                it.isnt(it.enterpriseReady),\n            ),\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: LDAPFeatureDiscovery,\n                        key: 'LDAPFeatureDiscovery',\n                    },\n                ],\n            },\n        },\n        saml: {\n            url: 'authentication/saml',\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.isnt(it.licensedForFeature('SAML')),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Enable',\n                        label: t('admin.saml.enableTitle'),\n                        label_default: 'Enable Login With SAML 2.0:',\n                        help_text: t('admin.saml.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows login using SAML 2.0. Please see [documentation](!http://docs.mattermost.com/deployment/sso-saml.html) to learn more about configuring SAML for Mattermost.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdap',\n                        label: t('admin.saml.enableSyncWithLdapTitle'),\n                        label_default: 'Enable Synchronizing SAML Accounts With AD/LDAP:',\n                        help_text: t('admin.saml.enableSyncWithLdapDescription'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes SAML user attributes, including user deactivation and removal, from AD/LDAP. Enable and configure synchronization settings at **Authentication > AD/LDAP**. When false, user attributes are updated from SAML during user login. See [documentation](!https://about.mattermost.com/default-saml-ldap-sync) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdapIncludeAuth',\n                        label: t('admin.saml.enableSyncWithLdapIncludeAuthTitle'),\n                        label_default: 'Override SAML bind data with AD/LDAP information:',\n                        help_text: t('admin.saml.enableSyncWithLdapIncludeAuthDescription'),\n                        help_text_default: 'When true, Mattermost will override the SAML ID attribute with the AD/LDAP ID attribute if configured or override the SAML Email attribute with the AD/LDAP Email attribute if SAML ID attribute is not present.  This will allow you automatically migrate users from Email binding to ID binding to prevent creation of new users when an email address changes for a user. Moving from true to false, will remove the override from happening.\\n \\n**Note:** SAML IDs must match the LDAP IDs to prevent disabling of user accounts.  Please review [documentation](!https://docs.mattermost.com/deployment/sso-saml-ldapsync.html) for more information.',\n                        help_text_markdown: true,\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.EnableSyncWithLdap'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpMetadataUrl',\n                        label: t('admin.saml.idpMetadataUrlTitle'),\n                        label_default: 'Identity Provider Metadata URL:',\n                        help_text: t('admin.saml.idpMetadataUrlDesc'),\n                        help_text_default: 'The Metadata URL for the Identity Provider you use for SAML requests',\n                        placeholder: t('admin.saml.idpMetadataUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/saml/metadata\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'getSamlMetadataFromIDPButton',\n                        action: getSamlMetadataFromIdp,\n                        label: t('admin.saml.getSamlMetadataFromIDPUrl'),\n                        label_default: 'Get SAML Metadata from IdP',\n                        loading: t('admin.saml.getSamlMetadataFromIDPFetching'),\n                        loading_default: 'Fetching...',\n                        error_message: t('admin.saml.getSamlMetadataFromIDPFail'),\n                        error_message_default: 'SAML Metadata URL did not connect and pull data successfully',\n                        success_message: t('admin.saml.getSamlMetadataFromIDPSuccess'),\n                        success_message_default: 'SAML Metadata retrieved successfully. Two fields below have been updated',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateEquals('SamlSettings.IdpMetadataUrl', ''),\n                        ),\n                        sourceUrlKey: 'SamlSettings.IdpMetadataUrl',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpUrl',\n                        label: t('admin.saml.idpUrlTitle'),\n                        label_default: 'SAML SSO URL:',\n                        help_text: t('admin.saml.idpUrlDesc'),\n                        help_text_default: 'The URL where Mattermost sends a SAML request to start login sequence.',\n                        placeholder: t('admin.saml.idpUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/SSO/Login\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                        setFromMetadataField: 'idp_url',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpDescriptorUrl',\n                        label: t('admin.saml.idpDescriptorUrlTitle'),\n                        label_default: 'Identity Provider Issuer URL:',\n                        help_text: t('admin.saml.idpDescriptorUrlDesc'),\n                        help_text_default: 'The issuer URL for the Identity Provider you use for SAML requests.',\n                        placeholder: t('admin.saml.idpDescriptorUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/issuer\"',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                        setFromMetadataField: 'idp_descriptor_url',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.IdpCertificateFile',\n                        label: t('admin.saml.idpCertificateFileTitle'),\n                        label_default: 'Identity Provider Public Certificate:',\n                        help_text: t('admin.saml.idpCertificateFileDesc'),\n                        help_text_default: 'The public authentication certificate issued by your Identity Provider.',\n                        remove_help_text: t('admin.saml.idpCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the public authentication certificate issued by your Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.idp_certificate'),\n                        remove_button_text_default: 'Remove Identity Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                        fileType: '.crt,.cer,.cert,.pem',\n                        upload_action: uploadIdpSamlCertificate,\n                        set_action: setSamlIdpCertificateFromMetadata,\n                        remove_action: removeIdpSamlCertificate,\n                        setFromMetadataField: 'idp_public_certificate',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Verify',\n                        label: t('admin.saml.verifyTitle'),\n                        label_default: 'Verify Signature:',\n                        help_text: t('admin.saml.verifyDescription'),\n                        help_text_default: 'When false, Mattermost will not verify that the signature sent from a SAML Response matches the Service Provider Login URL. Disabling verification is not recommended for production environments.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AssertionConsumerServiceURL',\n                        label: t('admin.saml.assertionConsumerServiceURLTitle'),\n                        label_default: 'Service Provider Login URL:',\n                        help_text: t('admin.saml.assertionConsumerServiceURLPopulatedDesc'),\n                        help_text_default: 'This field is also known as the Assertion Consumer Service URL.',\n                        placeholder: t('admin.saml.assertionConsumerServiceURLEx'),\n                        placeholder_default: 'E.g.: \"https://<your-mattermost-url>/login/sso/saml\"',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Verify'),\n                        ),\n                        onConfigLoad: (value, config) => {\n                            const siteUrl = config.ServiceSettings.SiteURL;\n                            if (siteUrl.length > 0 && value.length === 0) {\n                                const addSlashIfNeeded = siteUrl[siteUrl.length - 1] === '/' ? '' : '/';\n                                return `${siteUrl}${addSlashIfNeeded}login/sso/saml`;\n                            }\n                            return value;\n                        },\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Encrypt',\n                        label: t('admin.saml.encryptTitle'),\n                        label_default: 'Enable Encryption:',\n                        help_text: t('admin.saml.encryptDescription'),\n                        help_text_default: 'When false, Mattermost will not decrypt SAML Assertions encrypted with your Service Provider Public Certificate. Disabling encryption is not recommended for production environments.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PrivateKeyFile',\n                        label: t('admin.saml.privateKeyFileTitle'),\n                        label_default: 'Service Provider Private Key:',\n                        help_text: t('admin.saml.privateKeyFileFileDesc'),\n                        help_text_default: 'The private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_help_text: t('admin.saml.privateKeyFileFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.privKey'),\n                        remove_button_text_default: 'Remove Service Provider Private Key',\n                        removing_text: t('admin.saml.removing.privKey'),\n                        removing_text_default: 'Removing Private Key...',\n                        uploading_text: t('admin.saml.uploading.privateKey'),\n                        uploading_text_default: 'Uploading Private Key...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.key',\n                        upload_action: uploadPrivateSamlCertificate,\n                        remove_action: removePrivateSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PublicCertificateFile',\n                        label: t('admin.saml.publicCertificateFileTitle'),\n                        label_default: 'Service Provider Public Certificate:',\n                        help_text: t('admin.saml.publicCertificateFileDesc'),\n                        help_text_default: 'The certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_help_text: t('admin.saml.publicCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_button_text: t('admin.saml.remove.sp_certificate'),\n                        remove_button_text_default: 'Remove Service Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                        fileType: '.crt,.cer',\n                        upload_action: uploadPublicSamlCertificate,\n                        remove_action: removePublicSamlCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.SignRequest',\n                        label: t('admin.saml.signRequestTitle'),\n                        label_default: 'Sign Request:',\n                        help_text: t('admin.saml.signRequestDescription'),\n                        help_text_default: 'When true, Mattermost will sign the SAML request using your private key. When false, Mattermost will not sign the SAML request.',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.PrivateKeyFile'),\n                            it.stateIsFalse('SamlSettings.PublicCertificateFile'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.SignatureAlgorithm',\n                        label: t('admin.saml.signatureAlgorithmTitle'),\n                        label_default: 'Signature Algorithm',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                        options: [\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha1'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha1'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA1). Please see more information provided at http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha256'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha256'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA256). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 [section 6.4.2 RSA (PKCS#1 v1.5)]',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha512'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha512'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA512). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha512',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.CanonicalAlgorithm',\n                        label: t('admin.saml.canonicalAlgorithmTitle'),\n                        label_default: 'Canonicalization Algorithm',\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                        options: [\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n10'),\n                                display_name_default: 'Exclusive XML Canonicalization 1.0 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.exc'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Exclusive XML Canonicalization 1.0).  Please see more information provided at http://www.w3.org/2001/10/xml-exc-c14n#',\n                            },\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n11'),\n                                display_name_default: 'Canonical XML 1.1 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.c14'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Canonical XML 1.1).  Please see more information provided at http://www.w3.org/2006/12/xml-c14n11',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.EmailAttribute',\n                        label: t('admin.saml.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.saml.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"Email\" or \"PrimaryEmail\"',\n                        help_text: t('admin.saml.emailAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the email addresses of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.UsernameAttribute',\n                        label: t('admin.saml.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.saml.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"Username\"',\n                        help_text: t('admin.saml.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the username field in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdAttribute',\n                        label: t('admin.saml.idAttrTitle'),\n                        label_default: 'Id Attribute:',\n                        placeholder: t('admin.saml.idAttrEx'),\n                        placeholder_default: 'E.g.: \"Id\"',\n                        help_text: t('admin.saml.idAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to bind users from SAML to users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.GuestAttribute',\n                        label: t('admin.saml.guestAttrTitle'),\n                        label_default: 'Guest Attribute:',\n                        placeholder: t('admin.saml.guestAttrEx'),\n                        placeholder_default: 'E.g.: \"usertype=Guest\" or \"isGuest=true\"',\n                        help_text: t('admin.saml.guestAttrDesc'),\n                        help_text_default: '(Optional) Requires Guest Access to be enabled before being applied. The attribute in the SAML Assertion that will be used to apply a guest role to users in Mattermost. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this attribute is removed/changed from your guest user in SAML and the user is still active, they will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        isDisabled: it.either(\n                            it.configIsFalse('GuestAccountsSettings', 'Enable'),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableAdminAttribute',\n                        label: t('admin.saml.enableAdminAttrTitle'),\n                        label_default: 'Enable Admin Attribute:',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AdminAttribute',\n                        label: t('admin.saml.adminAttrTitle'),\n                        label_default: 'Admin Attribute:',\n                        placeholder: t('admin.saml.adminAttrEx'),\n                        placeholder_default: 'E.g.: \"usertype=Admin\" or \"isAdmin=true\"',\n                        help_text: t('admin.saml.adminAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion for designating System Admins. The users selected by the query will have access to your Mattermost server as System Admins. By default, System Admins have complete access to the Mattermost System Console.\\n \\nExisting members that are identified by this attribute will be promoted from member to System Admin upon next login. The next login is based upon Session lengths set in **System Console > Session Lengths.** It is highly recommend to manually demote users to members in **System Console > User Management** to ensure access is restricted immediately.\\n \\nNote: If this filter is removed/changed, System Admins that were promoted via this filter will be demoted to members and will not retain access to the System Console. When this filter is not in use, System Admins can be manually promoted/demoted in **System Console > User Management**.',\n                        help_text_markdown: true,\n                        isDisabled: it.either(\n                            it.stateIsFalse('SamlSettings.EnableAdminAttribute'),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.FirstNameAttribute',\n                        label: t('admin.saml.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.saml.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"FirstName\"',\n                        help_text: t('admin.saml.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the first name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LastNameAttribute',\n                        label: t('admin.saml.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.saml.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"LastName\"',\n                        help_text: t('admin.saml.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the last name of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.NicknameAttribute',\n                        label: t('admin.saml.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.saml.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"Nickname\"',\n                        help_text: t('admin.saml.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the nickname of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.PositionAttribute',\n                        label: t('admin.saml.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.saml.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"Role\"',\n                        help_text: t('admin.saml.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the position of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LocaleAttribute',\n                        label: t('admin.saml.localeAttrTitle'),\n                        label_default: 'Preferred Language Attribute:',\n                        placeholder: t('admin.saml.localeAttrEx'),\n                        placeholder_default: 'E.g.: \"Locale\" or \"PrimaryLanguage\"',\n                        help_text: t('admin.saml.localeAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the language of users in Mattermost.',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonText',\n                        label: t('admin.saml.loginButtonTextTitle'),\n                        label_default: 'Login Button Text:',\n                        placeholder: t('admin.saml.loginButtonTextEx'),\n                        placeholder_default: 'E.g.: \"OKTA\"',\n                        help_text: t('admin.saml.loginButtonTextDesc'),\n                        help_text_default: '(Optional) The text that appears in the login button on the login page. Defaults to \"SAML\".',\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                ],\n            },\n        },\n        saml_feature_discovery: {\n            url: 'authentication/discover-saml',\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.either(\n                it.licensedForFeature('SAML'),\n                it.isnt(it.enterpriseReady),\n            ),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: SAMLFeatureDiscovery,\n                        key: 'SAMLFeatureDiscovery',\n                    },\n                ],\n            },\n        },\n        gitlab: {\n            url: 'authentication/gitlab',\n            title: t('admin.sidebar.gitlab'),\n            title_default: 'GitLab',\n            isHidden: it.licensed,\n            schema: {\n                id: 'GitLabSettings',\n                name: t('admin.authentication.gitlab'),\n                name_default: 'GitLab',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GitLabSettings.Enable',\n                        label: t('admin.gitlab.enableTitle'),\n                        label_default: 'Enable authentication with GitLab: ',\n                        help_text: t('admin.gitlab.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows team creation and account signup using GitLab OAuth.\\n \\n1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isDisabled: it.stateIsFalse('GitLabSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                ],\n            },\n        },\n        oauth: {\n            url: 'authentication/oauth',\n            title: t('admin.sidebar.oauth'),\n            title_default: 'OAuth 2.0',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'OAuthSettings',\n                name: t('admin.authentication.oauth'),\n                name_default: 'OAuth 2.0',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    if (config.GitLabSettings && config.GitLabSettings.Enable) {\n                        newState.oauthType = Constants.GITLAB_SERVICE;\n                    }\n                    if (config.Office365Settings && config.Office365Settings.Enable) {\n                        newState.oauthType = Constants.OFFICE365_SERVICE;\n                    }\n                    if (config.GoogleSettings && config.GoogleSettings.Enable) {\n                        newState.oauthType = Constants.GOOGLE_SERVICE;\n                    }\n\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings = config.GitLabSettings || {};\n                    newConfig.Office365Settings = config.Office365Settings || {};\n                    newConfig.GoogleSettings = config.GoogleSettings || {};\n\n                    newConfig.GitLabSettings.Enable = false;\n                    newConfig.Office365Settings.Enable = false;\n                    newConfig.GoogleSettings.Enable = false;\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n\n                    if (config.oauthType === Constants.GITLAB_SERVICE) {\n                        newConfig.GitLabSettings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.OFFICE365_SERVICE) {\n                        newConfig.Office365Settings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.GOOGLE_SERVICE) {\n                        newConfig.GoogleSettings.Enable = true;\n                    }\n                    delete newConfig.oauthType;\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'oauthType',\n                        label: t('admin.oauth.select'),\n                        label_default: 'Select OAuth 2.0 Service Provider:',\n                        options: [\n                            {\n                                value: 'off',\n                                display_name: t('admin.oauth.off'),\n                                display_name_default: 'Do not allow sign-in via an OAuth 2.0 provider.',\n                            },\n                            {\n                                value: Constants.GITLAB_SERVICE,\n                                display_name: t('admin.oauth.gitlab'),\n                                display_name_default: 'GitLab',\n                                help_text: t('admin.gitlab.EnableMarkdownDesc'),\n                                help_text_default: '1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.GOOGLE_SERVICE,\n                                display_name: t('admin.oauth.google'),\n                                display_name_default: 'Google Apps',\n                                isHidden: it.isnt(it.licensedForFeature('GoogleOAuth')),\n                                help_text: t('admin.google.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://accounts.google.com/login) to your Google account.\\n2. Go to [https://console.developers.google.com](!https://console.developers.google.com), click **Credentials** in the left hand sidebar and enter \"Mattermost - your-company-name\" as the **Project Name**, then click **Create**.\\n3. Click the **OAuth consent screen** header and enter \"Mattermost\" as the **Product name shown to users**, then click **Save**.\\n4. Under the **Credentials** header, click **Create credentials**, choose **OAuth client ID** and select **Web Application**.\\n5. Under **Restrictions** and **Authorized redirect URIs** enter **your-mattermost-url/signup/google/complete** (example: http://localhost:8065/signup/google/complete). Click **Create**.\\n6. Paste the **Client ID** and **Client Secret** to the fields below, then click **Save**.\\n7. Go to the [Google People API](!https://console.developers.google.com/apis/library/people.googleapis.com) and click *Enable*.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OFFICE365_SERVICE,\n                                display_name: t('admin.oauth.office365'),\n                                display_name_default: 'Office 365',\n                                isHidden: it.isnt(it.licensedForFeature('Office365OAuth')),\n                                help_text: t('admin.office365.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://login.microsoftonline.com/) to your Microsoft or Office 365 account. Make sure it`s the account on the same [tenant](!https://msdn.microsoft.com/en-us/library/azure/jj573650.aspx#Anchor_0) that you would like users to log in with.\\n2. Go to [https://apps.dev.microsoft.com](!https://apps.dev.microsoft.com), click **Go to app list** > **Add an app** and use \"Mattermost - your-company-name\" as the **Application Name**.\\n3. Under **Application Secrets**, click **Generate New Password** and paste it to the **Application Secret Password** field below.\\n4. Under **Platforms**, click **Add Platform**, choose **Web** and enter **your-mattermost-url/signup/office365/complete** (example: http://localhost:8065/signup/office365/complete) under **Redirect URIs**. Also uncheck **Allow Implicit Flow**.\\n5. Finally, click **Save** and then paste the **Application ID** below.',\n                                help_text_markdown: true,\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Id',\n                        label: t('admin.google.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.google.clientIdDescription'),\n                        help_text_default: 'The Client ID you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientIdExample'),\n                        placeholder_default: 'E.g.: \"7602141235235-url0fhs1mayfasbmop5qlfns8dh4.apps.googleusercontent.com\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Secret',\n                        label: t('admin.google.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.google.clientSecretDescription'),\n                        help_text_default: 'The Client Secret you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.UserApiEndpoint',\n                        label: t('admin.google.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses,nicknames,metadata',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.AuthEndpoint',\n                        label: t('admin.google.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://accounts.google.com/o/oauth2/v2/auth',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.TokenEndpoint',\n                        label: t('admin.google.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://www.googleapis.com/oauth2/v4/token',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Id',\n                        label: t('admin.office365.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.office365.clientIdDescription'),\n                        help_text_default: 'The Application/Client ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Secret',\n                        label: t('admin.office365.clientSecretTitle'),\n                        label_default: 'Application Secret Password:',\n                        help_text: t('admin.office365.clientSecretDescription'),\n                        help_text_default: 'The Application Secret Password you generated when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"shAieM47sNBfgl20f8ci294\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.DirectoryId',\n                        label: t('admin.office365.directoryIdTitle'),\n                        label_default: 'Directory (tenant) ID:',\n                        help_text: t('admin.office365.directoryIdDescription'),\n                        help_text_default: 'The Directory (tenant) ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.directoryIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.UserApiEndpoint',\n                        label: t('admin.office365.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://graph.microsoft.com/v1.0/me',\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.AuthEndpoint',\n                        label: t('admin.office365.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['Office365Settings.DirectoryId']) {\n                                return 'https://login.microsoftonline.com/' + state['Office365Settings.DirectoryId'] + '/oauth2/v2.0/authorize';\n                            }\n                            return 'https://login.microsoftonline.com/{directoryId}/oauth2/v2.0/authorize';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.TokenEndpoint',\n                        label: t('admin.office365.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['Office365Settings.DirectoryId']) {\n                                return 'https://login.microsoftonline.com/' + state['Office365Settings.DirectoryId'] + '/oauth2/v2.0/token';\n                            }\n                            return 'https://login.microsoftonline.com/{directoryId}/oauth2/v2.0/token';\n                        },\n                        isDisabled: true,\n                        isHidden: it.isnt(it.stateEquals('oauthType', 'office365')),\n                    },\n                ],\n            },\n        },\n        guest_access: {\n            url: 'authentication/guest_access',\n            title: t('admin.sidebar.guest_access'),\n            title_default: 'Guest Access (Beta)',\n            isHidden: it.isnt(it.licensed),\n            schema: {\n                id: 'GuestAccountsSettings',\n                name: t('admin.authentication.guest_access'),\n                name_default: 'Guest Access (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomEnableDisableGuestAccountsSetting,\n                        key: 'GuestAccountsSettings.Enable',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GuestAccountsSettings.RestrictCreationToDomains',\n                        label: t('admin.guest_access.whitelistedDomainsTitle'),\n                        label_default: 'Whitelisted Guest Domains:',\n                        help_text: t('admin.guest_access.whitelistedDomainsDescription'),\n                        help_text_default: '(Optional) Guest accounts can be created at the system level from this list of allowed guest domains.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.guest_access.whitelistedDomainsExample'),\n                        placeholder_default: 'E.g.: \"company.com, othercorp.org\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnabled'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enabled.',\n                        help_text_markdown: true,\n                        isDisabled: () => true,\n                        isHidden: it.configIsTrue('ServiceSettings', 'EnableMultifactorAuthentication'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnforced'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enforced.',\n                        help_text_markdown: true,\n                        isDisabled: () => true,\n                        isHidden: it.either(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsTrue('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescription'),\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) for guests is required for login. New guest users will be required to configure MFA on signup. Logged in guest users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has guest users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        help_text_markdown: true,\n                        isHidden: it.either(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsFalse('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                    },\n                ],\n            },\n        },\n    },\n    plugins: {\n        icon: 'fa-plug',\n        sectionTitle: t('admin.sidebar.plugins'),\n        sectionTitleDefault: 'Plugins (Beta)',\n        id: 'plugins',\n        plugin_management: {\n            url: 'plugins/plugin_management',\n            title: t('admin.plugins.pluginManagement'),\n            title_default: 'Plugin Management',\n            searchableStrings: [\n                'admin.plugin.management.title',\n                'admin.plugins.settings.enable',\n                'admin.plugins.settings.enableDesc',\n                'admin.plugin.uploadTitle',\n                'admin.plugin.installedTitle',\n                'admin.plugin.installedDesc',\n                'admin.plugin.uploadDesc',\n                'admin.plugin.uploadDisabledDesc',\n                'admin.plugins.settings.enableMarketplace',\n                'admin.plugins.settings.enableMarketplaceDesc',\n                'admin.plugins.settings.enableRemoteMarketplace',\n                'admin.plugins.settings.enableRemoteMarketplaceDesc',\n                'admin.plugins.settings.automaticPrepackagedPlugins',\n                'admin.plugins.settings.automaticPrepackagedPluginsDesc',\n                'admin.plugins.settings.marketplaceUrl',\n                'admin.plugins.settings.marketplaceUrlDesc',\n            ],\n            schema: {\n                id: 'PluginManagementSettings',\n                component: PluginManagement,\n            },\n        },\n        custom: {\n            url: 'plugins/plugin_:plugin_id',\n            schema: {\n                id: 'CustomPluginSettings',\n                component: CustomPluginSettings,\n            },\n        },\n    },\n    integrations: {\n        icon: 'fa-sitemap',\n        sectionTitle: t('admin.sidebar.integrations'),\n        sectionTitleDefault: 'Integrations',\n        id: 'integrations',\n        integration_management: {\n            url: 'integrations/integration_management',\n            title: t('admin.integrations.integrationManagement'),\n            title_default: 'Integration Management',\n            schema: {\n                id: 'CustomIntegrationSettings',\n                name: t('admin.integrations.integrationManagement.title'),\n                name_default: 'Integration Management',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableIncomingWebhooks',\n                        label: t('admin.service.webhooksTitle'),\n                        label_default: 'Enable Incoming Webhooks: ',\n                        help_text: t('admin.service.webhooksDescription'),\n                        help_text_default: 'When true, incoming webhooks will be allowed. To help combat phishing attacks, all posts from webhooks will be labelled by a BOT tag. See [documentation](!http://docs.mattermost.com/developer/webhooks-incoming.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOutgoingWebhooks',\n                        label: t('admin.service.outWebhooksTitle'),\n                        label_default: 'Enable Outgoing Webhooks: ',\n                        help_text: t('admin.service.outWebhooksDesc'),\n                        help_text_default: 'When true, outgoing webhooks will be allowed. See [documentation](!http://docs.mattermost.com/developer/webhooks-outgoing.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCommands',\n                        label: t('admin.service.cmdsTitle'),\n                        label_default: 'Enable Custom Slash Commands: ',\n                        help_text: t('admin.service.cmdsDesc'),\n                        help_text_default: 'When true, custom slash commands will be allowed. See [documentation](!http://docs.mattermost.com/developer/slash-commands.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOAuthServiceProvider',\n                        label: t('admin.oauth.providerTitle'),\n                        label_default: 'Enable OAuth 2.0 Service Provider: ',\n                        help_text: t('admin.oauth.providerDescription'),\n                        help_text_default: 'When true, Mattermost can act as an OAuth 2.0 service provider allowing Mattermost to authorize API requests from external applications. See [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'ServiceSettings.EnableOnlyAdminIntegrations',\n                        label: t('admin.service.integrationAdmin'),\n                        label_default: 'Restrict managing integrations to Admins:',\n                        help_text: t('admin.service.integrationAdminDesc'),\n                        help_text_default: 'When true, webhooks and slash commands can only be created, edited and viewed by Team and System Admins, and OAuth 2.0 applications by System Admins. Integrations are available to all users after they have been created by the Admin.',\n                        permissions_mapping_name: 'enableOnlyAdminIntegrations',\n                        isHidden: it.licensed,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostUsernameOverride',\n                        label: t('admin.service.overrideTitle'),\n                        label_default: 'Enable integrations to override usernames:',\n                        help_text: t('admin.service.overrideDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the username they are posting as. Note: Combined with allowing integrations to override profile picture icons, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostIconOverride',\n                        label: t('admin.service.iconTitle'),\n                        label_default: 'Enable integrations to override profile picture icons:',\n                        help_text: t('admin.service.iconDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the profile picture they post with. Note: Combined with allowing integrations to override usernames, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserAccessTokens',\n                        label: t('admin.service.userAccessTokensTitle'),\n                        label_default: 'Enable User Access Tokens: ',\n                        help_text: t('admin.service.userAccessTokensDescription'),\n                        help_text_default: 'When true, users can create [user access tokens](!https://about.mattermost.com/default-user-access-tokens) for integrations in **Account Settings > Security**. They can be used to authenticate against the API and give full access to the account.\\n\\n To manage who can create personal access tokens or to search users by token ID, go to the **User Management > Users** page.',\n                        help_text_markdown: true,\n                    },\n                ],\n            },\n        },\n        bot_accounts: {\n            url: 'integrations/bot_accounts',\n            title: t('admin.integrations.botAccounts'),\n            title_default: 'Bot Accounts',\n            schema: {\n                id: 'BotAccountSettings',\n                name: t('admin.integrations.botAccounts.title'),\n                name_default: 'Bot Accounts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableBotAccountCreation',\n                        label: t('admin.service.enableBotTitle'),\n                        label_default: 'Enable Bot Account Creation: ',\n                        help_text: t('admin.service.enableBotAccountCreation'),\n                        help_text_default: 'When true, System Admins can create bot accounts for integrations in [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). Bot accounts are similar to user accounts except they cannot be used to log in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.DisableBotsWhenOwnerIsDeactivated',\n                        label: t('admin.service.disableBotOwnerDeactivatedTitle'),\n                        label_default: 'Disable bot accounts when owner is deactivated:',\n                        help_text: t('admin.service.disableBotWhenOwnerIsDeactivated'),\n                        help_text_default: 'When a user is deactivated, disables all bot accounts managed by the user. To re-enable bot accounts, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots).',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                    },\n                ],\n            },\n        },\n        gif: {\n            url: 'integrations/gif',\n            title: t('admin.sidebar.gif'),\n            title_default: 'GIF (Beta)',\n            schema: {\n                id: 'GifSettings',\n                name: t('admin.integrations.gif'),\n                name_default: 'GIF (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableGifPicker',\n                        label: t('admin.customization.enableGifPickerTitle'),\n                        label_default: 'Enable GIF Picker:',\n                        help_text: t('admin.customization.enableGifPickerDesc'),\n                        help_text_default: 'Allow users to select GIFs from the emoji picker via a Gfycat integration.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiKey',\n                        label: t('admin.customization.gfycatApiKey'),\n                        label_default: 'Gfycat API Key:',\n                        help_text: t('admin.customization.gfycatApiKeyDescription'),\n                        help_text_default: 'Request an API key at [https://developers.gfycat.com/signup/#](!https://developers.gfycat.com/signup/#). Enter the client ID you receive via email to this field. When blank, uses the default API key provided by Gfycat.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiSecret',\n                        label: t('admin.customization.gfycatApiSecret'),\n                        label_default: 'Gfycat API Secret:',\n                        help_text: t('admin.customization.gfycatApiSecretDescription'),\n                        help_text_default: 'The API secret generated by Gfycat for your API key. When blank, uses the default API secret provided by Gfycat.',\n                    },\n                ],\n            },\n        },\n        cors: {\n            url: 'integrations/cors',\n            title: t('admin.sidebar.cors'),\n            title_default: 'CORS',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'CORS',\n                name: t('admin.integrations.cors'),\n                name_default: 'CORS',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowCorsFrom',\n                        label: t('admin.service.corsTitle'),\n                        label_default: 'Enable cross-origin requests from:',\n                        placeholder: t('admin.service.corsEx'),\n                        placeholder_default: 'http://example.com',\n                        help_text: t('admin.service.corsDescription'),\n                        help_text_default: 'Enable HTTP Cross origin request from a specific domain. Use \"*\" if you want to allow CORS from any domain or leave it blank to disable it. Should not be set to \"*\" in production.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.CorsExposedHeaders',\n                        label: t('admin.service.corsExposedHeadersTitle'),\n                        label_default: 'CORS Exposed Headers:',\n                        placeholder: t('admin.service.corsHeadersEx'),\n                        placeholder_default: 'X-My-Header',\n                        help_text: t('admin.service.corsExposedHeadersDescription'),\n                        help_text_default: 'Whitelist of headers that will be accessible to the requester.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsAllowCredentials',\n                        label: t('admin.service.corsAllowCredentialsLabel'),\n                        label_default: 'CORS Allow Credentials:',\n                        help_text: t('admin.service.corsAllowCredentialsDescription'),\n                        help_text_default: 'When true, requests that pass validation will include the Access-Control-Allow-Credentials header.',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsDebug',\n                        label: t('admin.service.CorsDebugLabel'),\n                        label_default: 'CORS Debug:',\n                        help_text: t('admin.service.corsDebugDescription'),\n                        help_text_default: 'When true, prints messages to the logs to help when developing an integration that uses CORS. These messages will include the structured key value pair \"source\":\"cors\".',\n                    },\n                ],\n            },\n        },\n    },\n    compliance: {\n        icon: 'fa-list',\n        sectionTitle: t('admin.sidebar.compliance'),\n        sectionTitleDefault: 'Compliance',\n        data_retention: {\n            url: 'compliance/data_retention',\n            title: t('admin.sidebar.dataRetentionPolicy'),\n            title_default: 'Data Retention Policy',\n            isHidden: it.isnt(it.licensedForFeature('DataRetention')),\n            searchableStrings: [\n                'admin.data_retention.title',\n                'admin.data_retention.messageRetentionDays.description',\n                'admin.data_retention.fileRetentionDays.description',\n                ['admin.data_retention.note.description', {documentationLink: ''}],\n                'admin.data_retention.enableMessageDeletion.title',\n                'admin.data_retention.enableMessageDeletion.description',\n                'admin.data_retention.enableFileDeletion.title',\n                'admin.data_retention.enableFileDeletion.description',\n                'admin.data_retention.deletionJobStartTime.title',\n                'admin.data_retention.deletionJobStartTime.description',\n                'admin.data_retention.createJob.title',\n                'admin.data_retention.createJob.help',\n            ],\n            schema: {\n                id: 'DataRetentionSettings',\n                component: DataRetentionSettings,\n            },\n        },\n        message_export: {\n            url: 'compliance/export',\n            title: t('admin.sidebar.complianceExport'),\n            title_default: 'Compliance Export (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('MessageExport')),\n            searchableStrings: [\n                'admin.service.complianceExportTitle',\n                'admin.service.complianceExportDesc',\n                'admin.complianceExport.exportJobStartTime.title',\n                'admin.complianceExport.exportJobStartTime.description',\n                'admin.complianceExport.exportFormat.title',\n                ['admin.complianceExport.exportFormat.description', {siteURL: ''}],\n                'admin.complianceExport.createJob.title',\n                'admin.complianceExport.createJob.help',\n                'admin.complianceExport.globalRelayCustomerType.title',\n                'admin.complianceExport.globalRelayCustomerType.description',\n                'admin.complianceExport.globalRelaySmtpUsername.title',\n                'admin.complianceExport.globalRelaySmtpUsername.description',\n                'admin.complianceExport.globalRelaySmtpPassword.title',\n                'admin.complianceExport.globalRelaySmtpPassword.description',\n                'admin.complianceExport.globalRelayEmailAddress.title',\n                'admin.complianceExport.globalRelayEmailAddress.description',\n            ],\n            schema: {\n                id: 'MessageExportSettings',\n                component: MessageExportSettings,\n            },\n        },\n        audits: {\n            url: 'compliance/monitoring',\n            title: t('admin.sidebar.complianceMonitoring'),\n            title_default: 'Compliance Monitoring',\n            isHidden: it.isnt(it.licensed),\n            searchableStrings: [\n                'admin.audits.title',\n                'admin.audits.reload',\n            ],\n            schema: {\n                id: 'Audits',\n                name: t('admin.compliance.complianceMonitoring'),\n                name_default: 'Compliance Monitoring',\n                component: Audits,\n                isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.compliance.newComplianceExportBanner'),\n                        label_markdown: true,\n                        label_default: 'This feature is replaced by a new [Compliance Export]({siteURL}/admin_console/compliance/export) feature, and will be removed in a future release. We recommend migrating to the new system.',\n                        label_values: {siteURL: getSiteURL()},\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.Enable',\n                        label: t('admin.compliance.enableTitle'),\n                        label_default: 'Enable Compliance Reporting:',\n                        help_text: t('admin.compliance.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows compliance reporting from the **Compliance and Auditing** tab. See [documentation](!https://docs.mattermost.com/administration/compliance.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ComplianceSettings.Directory',\n                        label: t('admin.compliance.directoryTitle'),\n                        label_default: 'Compliance Report Directory:',\n                        help_text: t('admin.compliance.directoryDescription'),\n                        help_text_default: 'Directory to which compliance reports are written. If blank, will be set to ./data/.',\n                        placeholder: t('admin.compliance.directoryExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.EnableDaily',\n                        label: t('admin.compliance.enableDailyTitle'),\n                        label_default: 'Enable Daily Report:',\n                        help_text: t('admin.compliance.enableDailyDesc'),\n                        help_text_default: 'When true, Mattermost will generate a daily compliance report.',\n                        isDisabled: it.stateIsFalse('ComplianceSettings.Enable'),\n                        isHidden: it.isnt(it.licensedForFeature('Compliance')),\n                    },\n                ],\n            },\n        },\n        custom_terms_of_service: {\n            url: 'compliance/custom_terms_of_service',\n            title: t('admin.sidebar.customTermsOfService'),\n            title_default: 'Custom Terms of Service (Beta)',\n            isHidden: it.isnt(it.licensedForFeature('CustomTermsOfService')),\n            searchableStrings: [\n                'admin.support.termsOfServiceTitle',\n                'admin.support.enableTermsOfServiceTitle',\n                'admin.support.enableTermsOfServiceHelp',\n                'admin.support.termsOfServiceTextTitle',\n                'admin.support.termsOfServiceTextHelp',\n                'admin.support.termsOfServiceReAcceptanceTitle',\n                'admin.support.termsOfServiceReAcceptanceHelp',\n            ],\n            schema: {\n                id: 'TermsOfServiceSettings',\n                component: CustomTermsOfServiceSettings,\n            },\n        },\n    },\n    experimental: {\n        icon: 'fa-flask',\n        sectionTitle: t('admin.sidebar.experimental'),\n        sectionTitleDefault: 'Experimental',\n        experimental_features: {\n            url: 'experimental/features',\n            title: t('admin.sidebar.experimentalFeatures'),\n            title_default: 'Features',\n            schema: {\n                id: 'ExperimentalSettings',\n                name: t('admin.experimental.experimentalFeatures'),\n                name_default: 'Experimental Features',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonColor.title'),\n                        label_default: 'AD/LDAP Login Button Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonBorderColor.title'),\n                        label_default: 'AD/LDAP Login Button Border Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonTextColor.title'),\n                        label_default: 'AD/LDAP Login Button Text Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('LDAP')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableAuthenticationTransfer',\n                        label: t('admin.experimental.experimentalEnableAuthenticationTransfer.title'),\n                        label_default: 'Allow Authentication Transfer:',\n                        help_text: t('admin.experimental.experimentalEnableAuthenticationTransfer.desc'),\n                        help_text_default: 'When true, users can change their sign-in method to any that is enabled on the server, either via Account Settings or the APIs. When false, Users cannot change their sign-in method, regardless of which authentication options are enabled.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensed), // documented as E20 and higher, but only E10 in the code\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CloseUnusedDirectMessages',\n                        label: t('admin.experimental.closeUnusedDirectMessages.title'),\n                        label_default: 'Autoclose Direct Messages in Sidebar:',\n                        help_text: t('admin.experimental.closeUnusedDirectMessages.desc'),\n                        help_text_default: 'When true, direct message conversations with no activity for 7 days will be hidden from the sidebar. When false, conversations remain in the sidebar until they are manually closed.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ExperimentalSettings.LinkMetadataTimeoutMilliseconds',\n                        label: t('admin.experimental.linkMetadataTimeoutMilliseconds.title'),\n                        label_default: 'Link Metadata Timeout:',\n                        help_text: t('admin.experimental.linkMetadataTimeoutMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait for metadata from a third-party link. Used with Post Metadata.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.linkMetadataTimeoutMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingBufferSize',\n                        label: t('admin.experimental.emailBatchingBufferSize.title'),\n                        label_default: 'Email Batching Buffer Size:',\n                        help_text: t('admin.experimental.emailBatchingBufferSize.desc'),\n                        help_text_default: 'Specify the maximum number of notifications batched into a single email.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingBufferSize.example'),\n                        placeholder_default: 'E.g.: \"256\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingInterval',\n                        label: t('admin.experimental.emailBatchingInterval.title'),\n                        label_default: 'Email Batching Interval:',\n                        help_text: t('admin.experimental.emailBatchingInterval.desc'),\n                        help_text_default: 'Specify the maximum frequency, in seconds, which the batching job checks for new notifications. Longer batching intervals will increase performance.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingInterval.example'),\n                        placeholder_default: 'E.g.: \"30\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonColor.title'),\n                        label_default: 'Email Login Button Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the email login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonBorderColor.title'),\n                        label_default: 'Email Login Button Border Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the email login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonTextColor.title'),\n                        label_default: 'Email Login Button Text Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the email login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserDeactivation',\n                        label: t('admin.experimental.enableUserDeactivation.title'),\n                        label_default: 'Enable Account Deactivation:',\n                        help_text: t('admin.experimental.enableUserDeactivation.desc'),\n                        help_text_default: 'When true, users may deactivate their own account from **Account Settings > Advanced**. If a user deactivates their own account, they will get an email notification confirming they were deactivated. When false, users may not deactivate their own account.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalEnableAutomaticReplies',\n                        label: t('admin.experimental.experimentalEnableAutomaticReplies.title'),\n                        label_default: 'Enable Automatic Replies:',\n                        help_text: t('admin.experimental.experimentalEnableAutomaticReplies.desc'),\n                        help_text_default: 'When true, users can enable Automatic Replies in **Account Settings > Notifications**. Users set a custom message that will be automatically sent in response to Direct Messages. When false, disables the Automatic Direct Message Replies feature and hides it from Account Settings.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableChannelViewedMessages',\n                        label: t('admin.experimental.enableChannelViewedMessages.title'),\n                        label_default: 'Enable Channel Viewed WebSocket Messages:',\n                        help_text: t('admin.experimental.enableChannelViewedMessages.desc'),\n                        help_text_default: 'This setting determines whether `channel_viewed` WebSocket events are sent, which synchronize unread notifications across clients and devices. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.ClientSideCertEnable',\n                        label: t('admin.experimental.clientSideCertEnable.title'),\n                        label_default: 'Enable Client-Side Certification:',\n                        help_text: t('admin.experimental.clientSideCertEnable.desc'),\n                        help_text_default: 'Enables client-side certification for your Mattermost server. See [documentation](!https://docs.mattermost.com/deployment/certificate-based-authentication.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ExperimentalSettings.ClientSideCertCheck',\n                        label: t('admin.experimental.clientSideCertCheck.title'),\n                        label_default: 'Client-Side Certification Login Method:',\n                        help_text: t('admin.experimental.clientSideCertCheck.desc'),\n                        help_text_default: 'When **primary**, after the client side certificate is verified, user’s email is retrieved from the certificate and is used to log in without a password. When **secondary**, after the client side certificate is verified, user’s email is retrieved from the certificate and matched against the one supplied by the user. If they match, the user logs in with regular email/password credentials.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'primary',\n                                display_name: 'primary',\n                                display_name_default: 'primary',\n                            },\n                            {\n                                value: 'secondary',\n                                display_name: 'secondary',\n                                display_name_default: 'secondary',\n                            },\n                        ],\n                        isDisabled: it.stateIsFalse('ExperimentalSettings.ClientSideCertEnable'),\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableDefaultChannelLeaveJoinMessages',\n                        label: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.title'),\n                        label_default: 'Enable Default Channel Leave/Join System Messages:',\n                        help_text: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.desc'),\n                        help_text_default: 'This setting determines whether team leave/join system messages are posted in the default town-square channel.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableHardenedMode',\n                        label: t('admin.experimental.experimentalEnableHardenedMode.title'),\n                        label_default: 'Enable Hardened Mode:',\n                        help_text: t('admin.experimental.experimentalEnableHardenedMode.desc'),\n                        help_text_default: 'Enables a hardened mode for Mattermost that makes user experience trade-offs in the interest of security. See [documentation](!https://docs.mattermost.com/administration/config-settings.html#enable-hardened-mode-experimental) to learn more.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePreviewFeatures',\n                        label: t('admin.experimental.enablePreviewFeatures.title'),\n                        label_default: 'Enable Preview Features:',\n                        help_text: t('admin.experimental.enablePreviewFeatures.desc'),\n                        help_text_default: 'When true, preview features can be enabled from **Account Settings > Advanced > Preview pre-release features**. When false, disables and hides preview features from **Account Settings > Advanced > Preview pre-release features**.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.EnableThemeSelection',\n                        label: t('admin.experimental.enableThemeSelection.title'),\n                        label_default: 'Enable Theme Selection:',\n                        help_text: t('admin.experimental.enableThemeSelection.desc'),\n                        help_text_default: 'Enables the **Display > Theme** tab in Account Settings so users can select their theme.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.AllowCustomThemes',\n                        label: t('admin.experimental.allowCustomThemes.title'),\n                        label_default: 'Allow Custom Themes:',\n                        help_text: t('admin.experimental.allowCustomThemes.desc'),\n                        help_text_default: 'Enables the **Display > Theme > Custom Theme** section in Account Settings.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                        isDisabled: it.stateIsFalse('ThemeSettings.EnableThemeSelection'),\n                    },\n\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'ThemeSettings.AllowedThemes',\n                    //     label: t('admin.experimental.allowedThemes.title'),\n                    //     label_default: 'Allowed Themes:',\n                    //     help_text: t('admin.experimental.allowedThemes.desc'),\n                    //     help_text_default: 'A comma-separated list of themes that can be chosen by users when \"EnableThemeSelection\" is set to true.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.allowedThemes.example'),\n                    //     placeholder_default: 'E.g.: \"default, organization, mattermostDark, windows10\"',\n                    //     isHidden: it.isnt(it.licensed), // E10 and higher\n                    //     isDisabled: it.stateIsTrue('ThemeSettings.EnableThemeSelection'),\n                    // },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ThemeSettings.DefaultTheme',\n                        label: t('admin.experimental.defaultTheme.title'),\n                        label_default: 'Default Theme:',\n                        help_text: t('admin.experimental.defaultTheme.desc'),\n                        help_text_default: 'Set a default theme that applies to all new users on the system.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'default',\n                                display_name: 'default',\n                                display_name_default: 'default',\n                            },\n                            {\n                                value: 'organization',\n                                display_name: 'organization',\n                                display_name_default: 'organization',\n                            },\n                            {\n                                value: 'mattermostDark',\n                                display_name: 'mattermostDark',\n                                display_name_default: 'mattermostDark',\n                            },\n                            {\n                                value: 'windows10',\n                                display_name: 'windows10',\n                                display_name_default: 'windows10',\n                            },\n                        ],\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTutorial',\n                        label: t('admin.experimental.enableTutorial.title'),\n                        label_default: 'Enable Tutorial:',\n                        help_text: t('admin.experimental.enableTutorial.desc'),\n                        help_text_default: 'When true, users are prompted with a tutorial when they open Mattermost for the first time after account creation. When false, the tutorial is disabled, and users are placed in Town Square when they open Mattermost for the first time after account creation.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserTypingMessages',\n                        label: t('admin.experimental.enableUserTypingMessages.title'),\n                        label_default: 'Enable User Typing Messages:',\n                        help_text: t('admin.experimental.enableUserTypingMessages.desc'),\n                        help_text_default: 'This setting determines whether \"user is typing...\" messages are displayed below the message box. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.TimeBetweenUserTypingUpdatesMilliseconds',\n                        label: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.title'),\n                        label_default: 'User Typing Timeout:',\n                        help_text: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait between emitting user typing websocket events.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                        isDisabled: it.stateIsFalse('ServiceSettings.EnableUserTypingMessages'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableXToLeaveChannelsFromLHS',\n                        label: t('admin.experimental.enableXToLeaveChannelsFromLHS.title'),\n                        label_default: 'Enable X to Leave Channels from Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.enableXToLeaveChannelsFromLHS.desc'),\n                        help_text_default: 'When true, users can leave Public and Private Channels by clicking the “x” beside the channel name. When false, users must use the **Leave Channel** option from the channel menu to leave channels.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.ExperimentalPrimaryTeam',\n                        label: t('admin.experimental.experimentalPrimaryTeam.title'),\n                        label_default: 'Primary Team:',\n                        help_text: t('admin.experimental.experimentalPrimaryTeam.desc'),\n                        help_text_default: 'The primary team of which users on the server are members. When a primary team is set, the options to join other teams or leave the primary team are disabled.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.experimental.experimentalPrimaryTeam.example'),\n                        placeholder_default: 'E.g.: \"teamname\"',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.UseNewSAMLLibrary',\n                        label: t('admin.experimental.experimentalUseNewSAMLLibrary.title'),\n                        label_default: 'Use Improved SAML Library (Beta):',\n                        help_text: t('admin.experimental.experimentalUseNewSAMLLibrary.desc'),\n                        help_text_default: 'Enable an updated SAML Library, which does not require the XML Security Library (xmlsec1) to be installed. Warning: Not all providers have been tested. If you experience issues, please contact support: [https://about.mattermost.com/support/](!https://about.mattermost.com/support/). Changing this setting requires a server restart before taking effect.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonColor.title'),\n                        label_default: 'SAML Login Button Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonBorderColor.title'),\n                        label_default: 'SAML Login Button Border Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonTextColor.title'),\n                        label_default: 'SAML Login Button Text Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.isnt(it.licensedForFeature('SAML')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ExperimentalChannelSidebarOrganization',\n                        label: t('admin.experimental.experimentalChannelSidebarOrganization.title'),\n                        label_default: 'Experimental Sidebar Features',\n                        help_text: t('admin.experimental.experimentalChannelSidebarOrganization.desc'),\n                        help_text_default: 'When enabled, users can access experimental channel sidebar features, including collapsible sections and unreads filtering. If default on, this enabled the new sidebar features by default for all users on this server. Users can disable the features in **Account Settings > Sidebar > Experimental Sidebar Features**. If default off, users must enable the experimental sidebar features in Account Settings. [Learn more](!https://about.mattermost.com/default-sidebar/) or [give us feedback](!https://about.mattermost.com/default-sidebar-survey/)',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.disabled'),\n                                display_name_default: 'Disabled',\n                            },\n                            {\n                                value: 'default_on',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.default_on'),\n                                display_name_default: 'Enabled (Default On)',\n                            },\n                            {\n                                value: 'default_off',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.default_off'),\n                                display_name_default: 'Enabled (Default Off)',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalChannelOrganization',\n                        label: t('admin.experimental.experimentalChannelOrganization.title'),\n                        label_default: 'Channel Grouping and Sorting',\n                        help_text: t('admin.experimental.experimentalChannelOrganization.desc'),\n                        help_text_default: 'Enables channel sidebar organization options in **Account Settings > Sidebar > Channel grouping and sorting** including options for grouping unread channels, sorting channels by most recent post and combining all channel types into a single list. These settings are not available if **Account Settings > Sidebar > Experimental Sidebar Features** are enabled.',\n                        help_text_markdown: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'DisplaySettings.ExperimentalTimezone',\n                        label: t('admin.experimental.experimentalTimezone.title'),\n                        label_default: 'Timezone:',\n                        help_text: t('admin.experimental.experimentalTimezone.desc'),\n                        help_text_default: 'Select the timezone used for timestamps in the user interface and email notifications. When true, the Timezone setting is visible in the Account Settings and a time zone is automatically assigned in the next active session. When false, the Timezone setting is hidden in the Account Settings.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalHideTownSquareinLHS',\n                        label: t('admin.experimental.experimentalHideTownSquareinLHS.title'),\n                        label_default: 'Town Square is Hidden in Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.experimentalHideTownSquareinLHS.desc'),\n                        help_text_default: 'When true, hides Town Square in the left-hand sidebar if there are no unread messages in the channel. When false, Town Square is always visible in the left-hand sidebar even if all messages have been read.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalTownSquareIsReadOnly',\n                        label: t('admin.experimental.experimentalTownSquareIsReadOnly.title'),\n                        label_default: 'Town Square is Read-Only:',\n                        help_text: t('admin.experimental.experimentalTownSquareIsReadOnly.desc'),\n                        help_text_default: 'When true, only System Admins can post in Town Square. Other members are not able to post, reply, upload files, emoji react or pin messages to Town Square, nor are they able to change the channel name, header or purpose. When false, anyone can post in Town Square.',\n                        help_text_markdown: true,\n                        isHidden: it.isnt(it.licensed), // E10 and higher\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.UseChannelInEmailNotifications',\n                        label: t('admin.experimental.useChannelInEmailNotifications.title'),\n                        label_default: 'Use Channel Name in Email Notifications:',\n                        help_text: t('admin.experimental.useChannelInEmailNotifications.desc'),\n                        help_text_default: 'When true, channel and team name appears in email notification subject lines. Useful for servers using only one team. When false, only team name appears in email notification subject line.',\n                        help_text_markdown: false,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.UserStatusAwayTimeout',\n                        label: t('admin.experimental.userStatusAwayTimeout.title'),\n                        label_default: 'User Status Away Timeout:',\n                        help_text: t('admin.experimental.userStatusAwayTimeout.desc'),\n                        help_text_default: 'This setting defines the number of seconds after which the user’s status indicator changes to \"Away\", when they are away from Mattermost.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.userStatusAwayTimeout.example'),\n                        placeholder_default: 'E.g.: \"300\"',\n                    }, // eslint-disable-next-line lines-around-comment\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_BOOL,\n                    //     key: 'ServiceSettings.ExperimentalStrictCSRFEnforcement',\n                    //     label: t('admin.experimental.experimentalStrictCSRFEnforcement.title'),\n                    //     label_default: 'TODO:',\n                    //     help_text: t('admin.experimental.experimentalStrictCSRFEnforcement.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: false,\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'TeamSettings.ExperimentalDefaultChannels',\n                    //     label: t('admin.experimental.experimentalDefaultChannels.title'),\n                    //     label_default: 'Default Channels:',\n                    //     help_text: t('admin.experimental.experimentalDefaultChannels.desc'),\n                    //     help_text_default: 'A comma-separated list of default channels every user is added to automatically after joining a new team. Only applies to public channels, but affects all teams on the server. When not set, every user is added to `off-topic` and `town-square` channel by default. Note that even if `town-square` is not listed, every user is added to that channel after joining a new team.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.experimentalDefaultChannels.example'),\n                    //     placeholder_default: 'E.g.: \"channel1, channel2, off-topic\"',\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_TEXT,\n                    //     key: 'EmailSettings.ReplyToAddress',\n                    //     label: t('admin.experimental.replyToAddress.title'),\n                    //     label_default: 'Reply To Address:',\n                    //     help_text: t('admin.experimental.replyToAddress.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.replyToAddress.example'),\n                    //     placeholder_default: 'E.g.: \"reply-to@example.com\"',\n                    // },\n                ],\n            },\n        },\n        bleve: {\n            url: 'experimental/blevesearch',\n            title: t('admin.sidebar.blevesearch'),\n            title_default: 'Bleve',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.bleve.title',\n                'admin.bleve.enableIndexingTitle',\n                ['admin.bleve.enableIndexingDescription', {documentationLink: ''}],\n                'admin.bleve.enableIndexingDescription.documentationLinkText',\n                'admin.bleve.bulkIndexingTitle',\n                'admin.bleve.createJob.help',\n                'admin.bleve.purgeIndexesHelpText',\n                'admin.bleve.purgeIndexesButton',\n                'admin.bleve.purgeIndexesButton.label',\n                'admin.bleve.enableSearchingTitle',\n                'admin.bleve.enableSearchingDescription',\n            ],\n            schema: {\n                id: 'BleveSettings',\n                component: BleveSettings,\n            },\n        },\n    },\n};\n\nt('admin.field_names.allowBannerDismissal');\nt('admin.field_names.bannerColor');\nt('admin.field_names.bannerText');\nt('admin.field_names.bannerTextColor');\nt('admin.field_names.enableBanner');\nt('admin.field_names.enableCommands');\nt('admin.field_names.enableConfirmNotificationsToChannel');\nt('admin.field_names.enableIncomingWebhooks');\nt('admin.field_names.enableOAuthServiceProvider');\nt('admin.field_names.enableOutgoingWebhooks');\nt('admin.field_names.enablePostIconOverride');\nt('admin.field_names.enablePostUsernameOverride');\nt('admin.field_names.enableUserAccessTokens');\nt('admin.field_names.enableUserCreation');\nt('admin.field_names.maxChannelsPerTeam');\nt('admin.field_names.maxNotificationsPerChannel');\nt('admin.field_names.maxUsersPerTeam');\nt('admin.field_names.postEditTimeLimit');\nt('admin.field_names.restrictCreationToDomains');\nt('admin.field_names.restrictDirectMessage');\nt('admin.field_names.teammateNameDisplay');\n\nexport default AdminDefinition;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst SECTION_NONE = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNone'\n                defaultMessage='None'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNoneDescription'\n                defaultMessage='Mattermost will connect over an insecure connection.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_TLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTls'\n                defaultMessage='TLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTlsDescription'\n                defaultMessage='Encrypts the communication between Mattermost and your server.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_STARTTLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStart'\n                defaultMessage='STARTTLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStartDescription'\n                defaultMessage='Takes an existing insecure connection and attempts to upgrade it to a secure connection using TLS.'\n            />\n        </td>\n    </tr>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_EMAIL = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_LDAP = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_WEBSERVER = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n        </tbody>\n    </table>\n);\n\nexport const WEBSERVER_MODE_HELP_TEXT = (\n    <div>\n        <table\n            className='table table-bordered'\n            cellPadding='5'\n        >\n            <tbody>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzip'\n                            defaultMessage='gzip'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzipDescription'\n                            defaultMessage='The Mattermost server will serve static files compressed with gzip.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressed'\n                            defaultMessage='Uncompressed'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressedDescription'\n                            defaultMessage='The Mattermost server will serve static files uncompressed.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabled'\n                            defaultMessage='Disabled'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabledDescription'\n                            defaultMessage='The Mattermost server will not serve static files.'\n                        />\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <p className='help-text'>\n            <FormattedMessage\n                id='admin.webserverModeHelpText'\n                defaultMessage='gzip compression applies to static content files. It is recommended to enable gzip to improve performance unless your environment has specific restrictions, such as a web proxy that distributes gzip files poorly.'\n            />\n        </p>\n    </div>\n);\n\nexport const LOG_LEVEL_OPTIONS = [\n    {\n        value: 'DEBUG',\n        display_name: 'DEBUG',\n        display_name_default: 'DEBUG',\n    },\n    {\n        value: 'INFO',\n        display_name: 'INFO',\n        display_name_default: 'INFO',\n    },\n    {\n        value: 'ERROR',\n        display_name: 'ERROR',\n        display_name_default: 'ERROR',\n    },\n];\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, injectIntl, IntlShape} from 'react-intl';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport AboutBuildModal from 'components/about_build_modal';\n\nimport Menu from 'components/widgets/menu/menu';\n\nimport MenuItemBlockableLink from './menu_item_blockable_link';\n\ntype Props = {\n    intl: IntlShape;\n    locale: string;\n    siteName?: string;\n    navigationBlocked?: boolean;\n    teams: Team[];\n    actions: {\n        deferNavigation: (onNavigationConfirmed: any) => any;\n    };\n};\n\nclass AdminNavbarDropdown extends React.PureComponent<Props, {}> {\n    private handleLogout = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (this.props.navigationBlocked) {\n            e.preventDefault();\n            this.props.actions.deferNavigation(GlobalActions.emitUserLoggedOutEvent);\n        } else {\n            GlobalActions.emitUserLoggedOutEvent();\n        }\n    };\n\n    render(): JSX.Element {\n        const {locale, teams, siteName} = this.props;\n        const {formatMessage} = this.props.intl;\n        const teamToRender = []; // Array of team components\n        let switchTeams;\n\n        if (teams && teams.length > 0) {\n            const teamsArray = filterAndSortTeamsByDisplayName(teams, locale);\n\n            for (const team of teamsArray) {\n                teamToRender.push(\n                    <MenuItemBlockableLink\n                        key={'team_' + team.name}\n                        to={'/' + team.name}\n                        text={formatMessage({id: 'navbar_dropdown.switchTo', defaultMessage: 'Switch to '}) + ' ' + team.display_name}\n                    />,\n                );\n            }\n        } else {\n            switchTeams = (\n                <MenuItemBlockableLink\n                    to={'/select_team'}\n                    icon={\n                        <FormattedMessage\n                            id='select_team.icon'\n                            defaultMessage='Select Team Icon'\n                        >\n                            {(title) => {\n                                if (typeof title === 'string') {\n                                    return (\n                                        <i\n                                            className='fa fa-exchange'\n                                            title={title}\n                                        />\n                                    );\n                                }\n                                return title;\n                            }}\n                        </FormattedMessage>\n                    }\n                    text={formatMessage({id: 'admin.nav.switch', defaultMessage: 'Team Selection'})}\n                />\n            );\n        }\n\n        return (\n            <Menu ariaLabel={formatMessage({id: 'admin.nav.menuAriaLabel', defaultMessage: 'Admin Console Menu'})}>\n                <Menu.Group>\n                    {teamToRender}\n                    {switchTeams}\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_guide')}\n                        url='https://about.mattermost.com/administrators-guide/'\n                        text={formatMessage({id: 'admin.nav.administratorsGuide', defaultMessage: 'Administrator Guide'})}\n                    />\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_forum')}\n                        url='https://about.mattermost.com/troubleshooting-forum/'\n                        text={formatMessage({id: 'admin.nav.troubleshootingForum', defaultMessage: 'Troubleshooting Forum'})}\n                    />\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_support')}\n                        url='https://about.mattermost.com/commercial-support/'\n                        text={formatMessage({id: 'admin.nav.commercialSupport', defaultMessage: 'Commercial Support'})}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        onClick={() => trackEvent('admin', 'click_administrators_about')}\n                        modalId={ModalIdentifiers.ABOUT}\n                        dialogType={AboutBuildModal}\n                        text={formatMessage({id: 'navbar_dropdown.about', defaultMessage: 'About {appTitle}'}, {appTitle: siteName || 'Mattermost'})}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemAction\n                        onClick={this.handleLogout}\n                        text={formatMessage({id: 'navbar_dropdown.logout', defaultMessage: 'Log Out'})}\n                    />\n                </Menu.Group>\n            </Menu>\n        );\n    }\n}\n\nexport default injectIntl(AdminNavbarDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {deferNavigation} from 'actions/admin_actions.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getNavigationBlocked} from 'selectors/views/admin';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminNavbarDropdown from './admin_navbar_dropdown';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        locale: getCurrentLocale(state),\n        teams: getMyTeams(state),\n        siteName: getConfig(state).SiteName,\n        navigationBlocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport menuItem from 'components/widgets/menu/menu_items/menu_item';\n\ntype Props = {\n    to: string;\n    text: string | React.ReactNode;\n};\n\nexport const MenuItemBlockableLinkImpl: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {to, text} = props;\n    return (\n        <BlockableLink to={to}>{text}</BlockableLink>\n    );\n};\n\nconst MenuItemBlockableLink = menuItem(MenuItemBlockableLinkImpl);\nMenuItemBlockableLink.displayName = 'MenuItemBlockableLinkImpl';\n\nexport default MenuItemBlockableLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\n\ntype Props = {\n    config?: object;\n    environmentConfig?: object;\n    setNavigationBlocked?: (blocked: boolean) => void;\n    updateConfig?: (config: object) => {data: object; error: ClientErrorPlaceholder};\n}\n\ntype State = {\n    saveNeeded: boolean;\n    saving: boolean;\n    serverError: string|null;\n    serverErrorId?: string;\n    errorTooltip: boolean;\n}\n\ntype StateKeys = keyof State;\n\n// Placeholder type until ClientError is exported from redux.\n// TODO: remove ClientErrorPlaceholder and change the return type of updateConfig\ntype ClientErrorPlaceholder = {\n    message: string;\n    server_error_id: string;\n}\n\nexport default abstract class AdminSettings extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n        const stateInit = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n        if (props.config) {\n            this.state = Object.assign(this.getStateFromConfig(props.config), stateInit);\n        } else {\n            this.state = stateInit;\n        }\n    }\n\n    protected abstract getStateFromConfig(config: object): State;\n\n    protected abstract getConfigFromState(config: object): object;\n\n    protected abstract renderTitle(): React.ReactElement;\n\n    protected abstract renderSettings(): React.ReactElement;\n\n    protected handleSaved?: ((config: object) => React.ReactElement);\n\n    protected canSave?: () => boolean;\n\n    private closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    private openTooltip = (e: React.MouseEvent) => {\n        const elm: HTMLElement|null = e.currentTarget.querySelector('.control-label');\n        if (elm) {\n            const isElipsis = elm.offsetWidth < elm.scrollWidth;\n            this.setState({errorTooltip: isElipsis});\n        }\n    }\n\n    private handleChange = (id: StateKeys, value: any) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            saveNeeded: true,\n            [id]: value,\n        }));\n\n        if (this.props.setNavigationBlocked) {\n            this.props.setNavigationBlocked(true);\n        }\n    };\n\n    private handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n        this.doSubmit();\n    }\n\n    private doSubmit = async (callback?: () => void) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        if (this.props.updateConfig) {\n            const {data, error} = await this.props.updateConfig(config);\n\n            if (data) {\n                this.setState(this.getStateFromConfig(data));\n\n                this.setState({\n                    saveNeeded: false,\n                    saving: false,\n                });\n\n                if (this.props.setNavigationBlocked) {\n                    this.props.setNavigationBlocked(false);\n                }\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            } else if (error) {\n                this.setState({\n                    saving: false,\n                    serverError: error.message,\n                    serverErrorId: error.server_error_id,\n                });\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            }\n        }\n    };\n\n    private parseInt = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n)) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntNonNegative = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < 0) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntZeroOrMin = (str: string, minimumValue = 1) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < 0) {\n            return 0;\n        }\n        if (n > 0 && n < minimumValue) {\n            return minimumValue;\n        }\n\n        return n;\n    };\n\n    private parseIntNonZero = (str: string, defaultValue?: number, minimumValue = 1) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < minimumValue) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 1;\n        }\n\n        return n;\n    };\n\n    private getConfigValue(config: object, path: string) {\n        const pathParts = path.split('.');\n\n        return pathParts.reduce((obj: object|null, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n            return obj[(pathPart as keyof object)];\n        }, config);\n    }\n\n    private setConfigValue(config: object, path: string, value: any) {\n        function setValue(obj: object, pathParts: string[]) {\n            const part = pathParts[0] as keyof object;\n\n            if (pathParts.length === 1) {\n                Object.assign(obj, {[part]: value});\n            } else {\n                if (obj[part] == null) {\n                    Object.assign(obj, {[part]: {}});\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    private isSetByEnv = (path: string) => {\n        return Boolean(this.props.environmentConfig && this.getConfigValue(this.props.environmentConfig, path));\n    };\n\n    public render() {\n        return (\n            <form\n                className='form-horizontal'\n                role='form'\n                onSubmit={this.handleSubmit}\n            >\n                <div className='wrapper--fixed'>\n                    <AdminHeader>\n                        {this.renderTitle()}\n                    </AdminHeader>\n                    {this.renderSettings()}\n                    <div className='admin-console-save'>\n                        <SaveButton\n                            saving={this.state.saving}\n                            disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                            onClick={this.handleSubmit}\n                            savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                        />\n                        <div\n                            className='error-message'\n                            ref='errorMessage'\n                            onMouseOver={this.openTooltip}\n                            onMouseOut={this.closeTooltip}\n                        >\n                            <FormError error={this.state.serverError}/>\n                        </div>\n                        <Overlay\n                            show={this.state.errorTooltip}\n                            placement='top'\n                            target={this.refs.errorMessage}\n                        >\n                            <Tooltip id='error-tooltip' >\n                                {this.state.serverError}\n                            </Tooltip>\n                        </Overlay>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, injectIntl} from 'react-intl';\nimport Scrollbars from 'react-custom-scrollbars';\nimport isEqual from 'lodash/isEqual';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {generateIndex} from 'utils/admin_console_index.jsx';\nimport {browserHistory} from 'utils/browser_history';\nimport {intlShape} from 'utils/react_intl';\n\nimport AdminSidebarCategory from 'components/admin_console/admin_sidebar_category.jsx';\nimport AdminSidebarHeader from 'components/admin_console/admin_sidebar_header';\nimport AdminSidebarSection from 'components/admin_console/admin_sidebar_section.jsx';\nimport Highlight from 'components/admin_console/highlight';\nimport SearchIcon from 'components/widgets/icons/search_icon.jsx';\nimport QuickInput from 'components/quick_input';\n\nconst renderScrollView = (props) => (\n    <div\n        {...props}\n        className='scrollbar--view'\n    />\n);\n\nconst renderScrollThumbHorizontal = (props) => (\n    <div\n        {...props}\n        className='scrollbar--horizontal'\n    />\n);\n\nconst renderScrollThumbVertical = (props) => (\n    <div\n        {...props}\n        className='scrollbar--vertical'\n    />\n);\n\nclass AdminSidebar extends React.PureComponent {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        plugins: PropTypes.object,\n        adminDefinition: PropTypes.object,\n        buildEnterpriseReady: PropTypes.bool,\n        siteName: PropTypes.string,\n        onFilterChange: PropTypes.func.isRequired,\n        navigationBlocked: PropTypes.bool.isRequired,\n        intl: intlShape.isRequired,\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get installed plugins\n             */\n            getPlugins: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        plugins: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sections: null,\n            filter: '',\n        };\n        this.idx = null;\n        this.searchRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.config.PluginSettings.Enable) {\n            this.props.actions.getPlugins();\n        }\n\n        if (this.searchRef.current) {\n            this.searchRef.current.focus();\n        }\n\n        this.updateTitle();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.idx !== null &&\n            (!isEqual(this.props.plugins, prevProps.plugins) ||\n                !isEqual(this.props.adminDefinition, prevProps.adminDefinition))) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.props.intl);\n        }\n    }\n\n    onFilterChange = (e) => {\n        const filter = e.target.value;\n        if (filter === '') {\n            this.setState({sections: null, filter});\n            this.props.onFilterChange(filter);\n            return;\n        }\n\n        if (this.idx === null) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.props.intl);\n        }\n        let query = '';\n        for (const term of filter.split(' ')) {\n            term.trim();\n            if (term !== '') {\n                query += term + ' ';\n                query += term + '* ';\n            }\n        }\n        const sections = this.idx.search(query);\n        this.setState({sections, filter});\n        this.props.onFilterChange(filter);\n\n        if (this.props.navigationBlocked) {\n            return;\n        }\n\n        const validSection = sections.indexOf(browserHistory.location.pathname.replace('/admin_console/', '')) !== -1;\n        if (!validSection) {\n            const visibleSections = this.visibleSections();\n            for (const section of sections) {\n                if (visibleSections.has(section)) {\n                    browserHistory.replace('/admin_console/' + section);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateTitle = () => {\n        let currentSiteName = '';\n        if (this.props.siteName) {\n            currentSiteName = ' - ' + this.props.siteName;\n        }\n\n        document.title = Utils.localizeMessage('sidebar_right_menu.console', 'System Console') + currentSiteName;\n    }\n\n    visibleSections = () => {\n        const isVisible = (item) => {\n            if (!item.schema) {\n                return false;\n            }\n\n            if (!item.title) {\n                return false;\n            }\n\n            if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                return false;\n            }\n            return true;\n        };\n        const result = new Set();\n        for (const section of Object.values(this.props.adminDefinition)) {\n            for (const item of Object.values(section)) {\n                if (isVisible(item)) {\n                    result.add(item.url);\n                }\n            }\n        }\n        return result;\n    }\n\n    renderRootMenu = (definition) => {\n        const sidebarSections = [];\n        Object.values(definition).forEach((section, sectionIndex) => {\n            const sidebarItems = [];\n            Object.values(section).forEach((item, itemIndex) => {\n                if (!item.title) {\n                    return;\n                }\n\n                if (item.isHidden && item.isHidden(this.props.config, {}, this.props.license, this.props.buildEnterpriseReady)) {\n                    return;\n                }\n\n                if (this.state.sections !== null) {\n                    let active = false;\n                    for (const url of this.state.sections) {\n                        if (url === item.url) {\n                            active = true;\n                        }\n                    }\n                    if (!active) {\n                        return;\n                    }\n                }\n\n                sidebarItems.push((\n                    <AdminSidebarSection\n                        key={itemIndex}\n                        name={item.url}\n                        title={\n                            <FormattedMessage\n                                id={item.title}\n                                defaultMessage={item.title_default}\n                            />\n                        }\n                    />\n                ));\n            });\n\n            // Special case for plugins entries\n            let moreSidebarItems = [];\n            if (section.id === 'plugins') {\n                moreSidebarItems = this.renderPluginsMenu();\n            }\n\n            // If no visible items, don't display this section\n            if (sidebarItems.length === 0 && moreSidebarItems.length === 0) {\n                return null;\n            }\n\n            if (sidebarItems.length || moreSidebarItems.length) {\n                sidebarSections.push((\n                    <AdminSidebarCategory\n                        key={sectionIndex}\n                        parentLink='/admin_console'\n                        icon={section.icon}\n                        sectionClass=''\n                        title={\n                            <FormattedMessage\n                                id={section.sectionTitle}\n                                defaultMessage={section.sectionTitleDefault}\n                            />\n                        }\n                    >\n                        {sidebarItems}\n                        {moreSidebarItems}\n                    </AdminSidebarCategory>\n                ));\n            }\n            return null;\n        });\n        return sidebarSections;\n    }\n\n    renderPluginsMenu = () => {\n        const customPlugins = [];\n        if (this.props.config.PluginSettings.Enable) {\n            Object.values(this.props.plugins).sort((a, b) => {\n                const nameCompare = a.name.localeCompare(b.name);\n                if (nameCompare !== 0) {\n                    return nameCompare;\n                }\n\n                return a.id.localeCompare(b.id);\n            }).forEach((p) => {\n                const hasSettings = p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || p.settings_schema.settings);\n                if (!hasSettings) {\n                    return;\n                }\n\n                if (p.settings_schema.settings && (!p.settings_schema.header && !p.settings_schema.footer)) {\n                    if (p.settings_schema.settings.hasOwnProperty('length')) {\n                        if (p.settings_schema.settings.length === 0) {\n                            return;\n                        }\n                    }\n                }\n\n                if (this.state.sections !== null && this.state.sections.indexOf(`plugin_${p.id}`) === -1) {\n                    return;\n                }\n                customPlugins.push(\n                    <AdminSidebarSection\n                        key={'customplugin' + p.id}\n                        name={'plugins/plugin_' + p.id}\n                        title={p.name}\n                    />,\n                );\n            });\n        }\n        return customPlugins;\n    }\n\n    handleClearFilter = () => {\n        this.setState({sections: null, filter: ''});\n        this.props.onFilterChange('');\n    }\n\n    render() {\n        return (\n            <div className='admin-sidebar'>\n                <AdminSidebarHeader/>\n                <div className='filter-container'>\n                    <SearchIcon\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <QuickInput\n                        className={'filter ' + (this.state.filter ? 'active' : '')}\n                        type='text'\n                        onChange={this.onFilterChange}\n                        value={this.state.filter}\n                        placeholder={Utils.localizeMessage('admin.sidebar.filter', 'Find settings')}\n                        ref={this.searchRef}\n                        id='adminSidebarFilter'\n                        clearable={true}\n                        onClear={this.handleClearFilter}\n                    />\n                </div>\n                <Scrollbars\n                    ref='scrollbar'\n                    autoHide={true}\n                    autoHideTimeout={500}\n                    autoHideDuration={500}\n                    renderThumbHorizontal={renderScrollThumbHorizontal}\n                    renderThumbVertical={renderScrollThumbVertical}\n                    renderView={renderScrollView}\n                >\n                    <div className='nav-pills__container'>\n                        <Highlight filter={this.state.filter}>\n                            <ul className='nav nav-pills nav-stacked'>\n                                {this.renderRootMenu(this.props.adminDefinition)}\n                            </ul>\n                        </Highlight>\n                    </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(AdminSidebar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getPlugins} from 'mattermost-redux/actions/admin';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {getNavigationBlocked} from 'selectors/views/admin';\nimport {getAdminDefinition} from 'selectors/admin_console';\n\nimport AdminSidebar from './admin_sidebar.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const buildEnterpriseReady = config.BuildEnterpriseReady === 'true';\n    const siteName = config.SiteName;\n    const adminDefinition = getAdminDefinition(state);\n\n    return {\n        license,\n        config: state.entities.admin.config,\n        plugins: state.entities.admin.plugins,\n        navigationBlocked: getNavigationBlocked(state),\n        buildEnterpriseReady,\n        siteName,\n        adminDefinition,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getPlugins,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(AdminSidebar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink, Route} from 'react-router-dom';\n\nexport default class AdminSidebarCategory extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            sectionClass: PropTypes.string,\n            parentLink: PropTypes.string,\n            children: PropTypes.node,\n            action: PropTypes.node,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n        };\n    }\n\n    render() {\n        let link = this.props.parentLink;\n        let title = (\n            <div className='category-title category-title--active'>\n                <i className={'category-icon fa ' + this.props.icon}/>\n                <span className='category-title__text'>\n                    {this.props.title}\n                </span>\n                {this.props.action}\n            </div>\n        );\n\n        if (this.props.name) {\n            link += '/' + name;\n            title = (\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title category-title--active'\n                >\n                    {title}\n                </NavLink>\n            );\n        }\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className={'sections ' + this.props.sectionClass}>\n                            {\n                                React.Children.map(this.props.children, (child) => {\n                                    if (child === null) {\n                                        return null;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            );\n        }\n\n        return (\n            <li className='sidebar-category'>\n                {title}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {UserProfile} from 'mattermost-redux/src/types/users';\n\nimport MenuIcon from 'components/widgets/icons/menu_icon';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport AdminNavbarDropdown from 'components/admin_console/admin_navbar_dropdown';\n\ntype Props = {\n    currentUser: UserProfile& {last_picture_update?: number};\n}\n\nexport default class SidebarHeader extends React.PureComponent<Props> {\n    public render() {\n        const me = this.props.currentUser;\n        let profilePicture = null;\n\n        if (!me) {\n            return null;\n        }\n\n        if (me.last_picture_update) {\n            profilePicture = (\n                <Avatar\n                    username={me.username}\n                    url={Client4.getProfilePictureUrl(me.id, me.last_picture_update)}\n                    size='lg'\n                />\n            );\n        }\n\n        return (\n            <MenuWrapper className='AdminSidebarHeader'>\n                <div>\n                    {profilePicture}\n                    <div className='header__info'>\n                        <div className='team__name'>\n                            <FormattedMessage\n                                id='admin.sidebarHeader.systemConsole'\n                                defaultMessage='System Console'\n                            />\n                        </div>\n                        <div className='user__name overflow--ellipsis whitespace--nowrap'>{'@' + me.username}</div>\n                    </div>\n                    <button className='style--none'>\n                        <MenuIcon className='menu-icon'/>\n                    </button>\n                </div>\n                <AdminNavbarDropdown/>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminSidebarHeader from './admin_sidebar_header';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        currentUser: getCurrentUser(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AdminSidebarHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class AdminSidebarSection extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            type: PropTypes.string,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.node,\n            action: PropTypes.node,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <ul className='nav nav__sub-menu subsections'>\n                    {\n                        React.Children.map(this.props.children, (child) => {\n                            if (child === null) {\n                                return null;\n                            }\n\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'sidebar-section';\n        if (this.props.subsection) {\n            className += ' sidebar-subsection';\n        }\n        const sidebarItemSafeId = Utils.createSafeId(this.props.name);\n        let sidebarItem = (\n            <BlockableLink\n                id={sidebarItemSafeId}\n                className={`${className}-title`}\n                activeClassName={`${className}-title ${className}-title--active`}\n                to={link}\n                onClick={() => trackEvent('admin', sidebarItemSafeId)}\n            >\n                <span className={`${className}-title__text`}>\n                    {this.props.title}\n                </span>\n                {this.props.action}\n            </BlockableLink>\n        );\n\n        if (this.props.type === 'text') {\n            sidebarItem = (\n                <div\n                    className={`${className}-title`}\n                >\n                    <span className={`${className}-title__text`}>\n                        {this.props.title}\n                    </span>\n                    {this.props.action}\n                </div>\n            );\n        }\n\n        return (\n            <li className={className}>\n                {sidebarItem}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Client4} from 'mattermost-redux/client';\n\nimport ProfilePicture from 'components/profile_picture';\nimport * as Utils from 'utils/utils.jsx';\n\nimport './admin_user_card.scss';\n\nconst Bullet = (props) => {\n    if ((props.user.first_name || props.user.last_name) && props.user.nickname) {\n        return (<span>{' • '}</span>);\n    }\n    return null;\n};\n\nconst AdminUserCard = (props) => (\n    <div className='AdminUserCard'>\n        <div className='AdminUserCard__header'>\n            <ProfilePicture\n                src={Client4.getProfilePictureUrl(props.user.id, props.user.last_picture_update)}\n                size='xxl'\n                wrapperClass='admin-user-card'\n                userId={props.user.id}\n            />\n            <div className='AdminUserCard__user-info'>\n                <span>{props.user.first_name} {props.user.last_name}</span>\n                <Bullet user={props.user}/>\n                <span className='AdminUserCard__user-nickname'>{props.user.nickname}</span>\n            </div>\n            <div className='AdminUserCard__user-id'>\n                {Utils.localizeMessage('admin.userManagement.userDetail.userId', 'User ID:')} {props.user.id}\n            </div>\n        </div>\n        <div className='AdminUserCard__body'>\n            {props.body}\n        </div>\n        <div className='AdminUserCard__footer'>\n            {props.footer}\n        </div>\n    </div>\n);\n\nBullet.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n    }),\n};\n\nAdminUserCard.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n        id: PropTypes.string,\n    }),\n    body: PropTypes.element,\n    footer: PropTypes.element,\n};\n\nexport default AdminUserCard;\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_user_card.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport ComplianceReports from 'components/admin_console/compliance_reports';\nimport AuditTable from 'components/audit_table';\nimport LoadingScreen from 'components/loading_screen';\n\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\ntype Props = {\n    isLicensed: boolean;\n    audits: Array<any>;\n    actions: {\n        getAudits: () => Promise<{data: {\n            id: string;\n            create_at: number;\n            user_id: string;\n            action: string;\n            extra_info: string;\n            ip_address: string;\n            session_id: string;\n        };\n        }>;\n    };\n};\n\ntype State = {\n    loadingAudits: boolean;\n};\n\nexport default class Audits extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loadingAudits: true,\n        };\n    }\n\n    public componentDidMount() {\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false}),\n        );\n    }\n\n    private reload = () => {\n        this.setState({loadingAudits: true});\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false}),\n        );\n    };\n\n    private activityLogHeader = () => {\n        const h4Style = {\n            display: 'inline-block',\n            marginBottom: '6px',\n        };\n        const divStyle: object = {\n            clear: 'both',\n        };\n        return (\n            <div style={divStyle}>\n                <h4 style={h4Style}>\n                    <FormattedMessage\n                        id='admin.complianceMonitoring.userActivityLogsTitle'\n                        defaultMessage='User Activity Logs'\n                    />\n                </h4>\n                <button\n                    type='submit'\n                    className='btn btn-link pull-right'\n                    onClick={this.reload}\n                >\n                    <ReloadIcon/>\n                    <FormattedMessage\n                        id='admin.audits.reload'\n                        defaultMessage='Reload User Activity Logs'\n                    />\n                </button>\n            </div>\n        );\n    };\n\n    private renderComplianceReports = () => {\n        if (!this.props.isLicensed) {\n            return <div/>;\n        }\n        return <ComplianceReports/>;\n    };\n\n    public render() {\n        let content = null;\n\n        if (this.state.loadingAudits) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <div>\n                    <AuditTable\n                        audits={this.props.audits}\n                        showUserId={true}\n                        showIp={true}\n                        showSession={true}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                {this.renderComplianceReports()}\n                <div className='panel compliance-panel'>\n                    {this.activityLogHeader()}\n                    <div className='compliance-panel__table'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {getAudits} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\n\nimport Audits from './audits';\n\ntype Actions = {\n    getAudits: () => Promise<{data: {\n        id: string;\n        create_at: number;\n        user_id: string;\n        action: string;\n        extra_info: string;\n        ip_address: string;\n        session_id: string;\n    };\n    }>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const license = getLicense(state);\n    const isLicensed = license.Compliance === 'true';\n\n    return {\n        isLicensed,\n        audits: Object.values(Selectors.getAudits(state)),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getAudits,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Audits);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title?: JSX.Element;\n    description: JSX.Element;\n}\n\nconst Banner: React.FC<Props> = (props: Props) => {\n    let title = (\n        <FormattedMessage\n            id='admin.banner.heading'\n            defaultMessage='Note:'\n        />\n    );\n\n    if (props.title) {\n        title = props.title;\n    }\n\n    return (\n        <div className='banner'>\n            <div className='banner__content'>\n                <h4 className='banner__heading'>\n                    {title}\n                </h4>\n                <p>\n                    {props.description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Banner;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {blevePurgeIndexes} from 'actions/admin_actions.jsx';\nimport {JobStatuses, JobTypes} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport TextSetting from './text_setting';\nimport JobsTable from './jobs';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\n\nexport default class BleveSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.BleveSettings.IndexDir = this.state.indexDir;\n        config.BleveSettings.EnableIndexing = this.state.enableIndexing;\n        config.BleveSettings.EnableSearching = this.state.enableSearching;\n        config.BleveSettings.EnableAutocomplete = this.state.enableAutocomplete;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            enableIndexing: config.BleveSettings.EnableIndexing,\n            indexDir: config.BleveSettings.IndexDir,\n            enableSearching: config.BleveSettings.EnableSearching,\n            enableAutocomplete: config.BleveSettings.EnableAutocomplete,\n            canSave: true,\n            canPurgeAndIndex: config.BleveSettings.EnableIndexing,\n        };\n    }\n\n    handleSettingChanged = (id, value) => {\n        if (id === 'enableIndexing') {\n            if (value === false) {\n                this.setState({\n                    enableSearching: false,\n                    enableAutocomplete: false,\n                });\n            }\n        }\n\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\n            this.setState({\n                canPurgeAndIndex: false,\n            });\n        }\n\n        this.handleChange(id, value);\n    }\n\n    handleSaved = () => {\n        this.setState({\n            canPurgeAndIndex: this.state.enableIndexing && this.state.indexDir !== '',\n        });\n    }\n\n    canSave = () => {\n        return this.state.canSave;\n    }\n\n    getExtraInfo(job) {\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <FormattedMessage\n                    id='admin.bleve.percentComplete'\n                    defaultMessage='{percent}% Complete'\n                    values={{percent: Number(job.progress)}}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.bleve.title'\n                defaultMessage='Bleve'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableIndexing'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableIndexingTitle'\n                            defaultMessage='Enable Bleve Indexing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableIndexingDescription'\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Bleve for search queries\" is enabled. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-bleve-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.bleve.enableIndexingDescription.documentationLinkText'\n                                            defaultMessage='Learn more about Bleve in our documentation.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableIndexing')}\n                />\n                <TextSetting\n                    id='indexDir'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.indexDirTitle'\n                            defaultMessage='IndexDir:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.indexDirDescription'\n                            defaultMessage='Directory path to use for store bleve indexes.'\n                        />\n                    }\n                    value={this.state.indexDir}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.IndexDir')}\n                />\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.bleve.bulkIndexingTitle'\n                            defaultMessage='Bulk Indexing:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='job-table-setting'>\n                            <JobsTable\n                                jobType={JobTypes.BLEVE_POST_INDEXING}\n                                disabled={!this.state.canPurgeAndIndex}\n                                createJobButtonText={\n                                    <FormattedMessage\n                                        id='admin.bleve.createJob.title'\n                                        defaultMessage='Index Now'\n                                    />\n                                }\n                                createJobHelpText={\n                                    <FormattedMessage\n                                        id='admin.bleve.createJob.help'\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Bleve is available during indexing but search results may be incomplete until the indexing job is complete.'\n                                    />\n                                }\n                                getExtraInfoText={this.getExtraInfo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RequestButton\n                    id='purgeIndexesSection'\n                    requestAction={blevePurgeIndexes}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesHelpText'\n                            defaultMessage='Purging will entirely remove the indexes on the Bleve server. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesButton'\n                            defaultMessage='Purge Index'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.bleve.purgeIndexesButton.success'),\n                        defaultMessage: 'Indexes purged successfully.',\n                    }}\n                    errorMessage={{\n                        id: t('admin.bleve.purgeIndexesButton.error'),\n                        defaultMessage: 'Failed to purge indexes: {error}',\n                    }}\n                    disabled={!this.state.canPurgeAndIndex}\n                    label={(\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesButton.label'\n                            defaultMessage='Purge Indexes:'\n                        />\n                    )}\n                />\n                <BooleanSetting\n                    id='enableSearching'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableSearchingTitle'\n                            defaultMessage='Enable Bleve for search queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableSearchingDescription'\n                            defaultMessage='Requires a successful connection to the Bleve server. When true, Bleve will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\n                        />\n                    }\n                    value={this.state.enableSearching}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableSearching')}\n                />\n                <BooleanSetting\n                    id='enableAutocomplete'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableAutocompleteTitle'\n                            defaultMessage='Enable Bleve for autocomplete queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableAutocompleteDescription'\n                            defaultMessage='Requires a successful connection to the Bleve server. When true, Bleve will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\n                        />\n                    }\n                    value={this.state.enableAutocomplete}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableAutocomplete')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\n\ntype Props = {\n\n    // Bool whether navigation is blocked\n    blocked: boolean;\n\n    // String Link destination\n    to: string;\n    actions: {\n\n        // Function for deferring navigation while blocked\n        deferNavigation: (func: () => void) => void;\n    };\n    children?: string | React.ReactNode;\n    className?: string;\n    onClick?: (e: React.MouseEvent) => void;\n};\nexport default class BlockableLink extends React.PureComponent<Props> {\n    private handleClick = (e: React.MouseEvent) => {\n        if (this.props.onClick) {\n            this.props.onClick(e);\n        }\n        if (this.props.blocked) {\n            e.preventDefault();\n            this.props.actions.deferNavigation(() => {\n                browserHistory.push(this.props.to);\n            });\n        }\n    };\n\n    public render() {\n        const props = {...this.props};\n        Reflect.deleteProperty(props, 'blocked');\n        Reflect.deleteProperty(props, 'actions');\n\n        return (\n            <NavLink\n                {...props}\n                onClick={this.handleClick}\n            />);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {deferNavigation} from 'actions/admin_actions';\nimport {getNavigationBlocked} from 'selectors/views/admin';\n\nimport BlockableLink from './blockable_link';\n\nfunction mapStateToProps(state: object) {\n    return {\n        blocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockableLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    value: boolean;\n    onChange: (id: string, foo: boolean) => void;\n    trueText?: React.ReactNode;\n    falseText?: React.ReactNode;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n}\n\nexport default class BooleanSetting extends React.PureComponent<Props> {\n    public static defaultProps = {\n        trueText: (\n            <FormattedMessage\n                id='admin.true'\n                defaultMessage='true'\n            />\n        ),\n        falseText: (\n            <FormattedMessage\n                id='admin.false'\n                defaultMessage='false'\n            />\n        ),\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value === 'true');\n    }\n\n    public render() {\n        let helpText;\n        if (this.props.disabled && this.props.disabledText) {\n            helpText = (\n                <div>\n                    <span className='admin-console__disabled-text'>\n                        {this.props.disabledText}\n                    </span>\n                    {this.props.helpText}\n                </div>\n            );\n        } else {\n            helpText = this.props.helpText;\n        }\n\n        return (\n            <Setting\n                inputId={this.props.id}\n                label={this.props.label}\n                helpText={helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <a id={this.props.id}/>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'true'}\n                        type='radio'\n                        value='true'\n                        id={Utils.createSafeId(this.props.id) + 'true'}\n                        name={this.props.id}\n                        checked={this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.trueText}\n                </label>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'false'}\n                        type='radio'\n                        value='false'\n                        id={Utils.createSafeId(this.props.id) + 'false'}\n                        name={this.props.id}\n                        checked={!this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.falseText}\n                </label>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Tooltip} from 'react-bootstrap';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {uploadBrandImage, deleteBrandImage} from 'actions/admin_actions.jsx';\nimport {Constants} from 'utils/constants';\nimport FormError from 'components/form_error';\nimport OverlayTrigger from 'components/overlay_trigger';\n\nconst HTTP_STATUS_OK = 200;\n\nexport default class BrandImageSetting extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set for testing purpose\n         */\n        id: PropTypes.string,\n\n        /*\n         * Set to disable the setting\n         */\n        disabled: PropTypes.bool.isRequired,\n\n        /*\n        * Set the save needed in the admin schema settings to trigger the save button to turn on\n        */\n        setSaveNeeded: PropTypes.func.isRequired,\n\n        /*\n        * Registers the function suppose to be run when the save button is pressed\n        */\n        registerSaveAction: PropTypes.func.isRequired,\n\n        /*\n        * Unregisters the function on unmount of the component suppose to be run when the save button is pressed\n        */\n        unRegisterSaveAction: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteBrandImage: false,\n            brandImage: null,\n            brandImageExists: false,\n            brandImageTimestamp: Date.now(),\n            error: '',\n        };\n    }\n\n    componentDidMount() {\n        fetch(Client4.getBrandImageUrl(this.state.brandImageTimestamp)).then(\n            (resp) => {\n                if (resp.status === HTTP_STATUS_OK) {\n                    this.setState({brandImageExists: true});\n                } else {\n                    this.setState({brandImageExists: false});\n                }\n            },\n        );\n\n        this.props.registerSaveAction(this.handleSave);\n    }\n\n    componentWillUnmount() {\n        this.props.unRegisterSaveAction(this.handleSave);\n    }\n\n    componentDidUpdate() {\n        if (this.refs.image) {\n            const reader = new FileReader();\n\n            const img = this.refs.image;\n            reader.onload = (e) => {\n                $(img).attr('src', e.target.result);\n            };\n\n            reader.readAsDataURL(this.state.brandImage);\n        }\n    }\n\n    handleImageChange = () => {\n        const element = $(this.refs.fileInput);\n        if (element.prop('files').length > 0) {\n            this.props.setSaveNeeded();\n            this.setState({\n                brandImage: element.prop('files')[0],\n                deleteBrandImage: false,\n            });\n        }\n    }\n\n    handleDeleteButtonPressed = () => {\n        this.setState({deleteBrandImage: true, brandImage: null, brandImageExists: false});\n        this.props.setSaveNeeded();\n    }\n\n    handleSave = async () => {\n        this.setState({\n            error: '',\n        });\n\n        let error;\n        if (this.state.deleteBrandImage) {\n            await deleteBrandImage(\n                () => {\n                    this.setState({\n                        deleteBrandImage: false,\n                        brandImageExists: false,\n                        brandImage: null,\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                },\n            );\n        } else if (this.state.brandImage) {\n            await uploadBrandImage(\n                this.state.brandImage,\n                () => {\n                    this.setState({\n                        brandImageExists: true,\n                        brandImage: null,\n                        brandImageTimestamp: Date.now(),\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                },\n            );\n        }\n        return {error};\n    }\n\n    render() {\n        let letbtnDefaultClass = 'btn';\n        if (!this.props.disabled) {\n            letbtnDefaultClass += ' btn-default';\n        }\n\n        let img = null;\n        if (this.state.brandImage) {\n            img = (\n                <div className='remove-image__img mb-5'>\n                    <img\n                        ref='image'\n                        alt='brand image'\n                        src=''\n                    />\n                </div>\n            );\n        } else if (this.state.brandImageExists) {\n            let overlay;\n            if (!this.props.disabled) {\n                overlay = (\n                    <OverlayTrigger\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='right'\n                        overlay={(\n                            <Tooltip id='removeIcon'>\n                                <div aria-hidden={true}>\n                                    <FormattedMessage\n                                        id='admin.team.removeBrandImage'\n                                        defaultMessage='Remove brand image'\n                                    />\n                                </div>\n                            </Tooltip>\n                        )}\n                    >\n                        <button\n                            className='remove-image__btn'\n                            onClick={this.handleDeleteButtonPressed}\n                        >\n                            <span aria-hidden={true}>{'×'}</span>\n                        </button>\n                    </OverlayTrigger>\n                );\n            }\n            img = (\n                <div className='remove-image__img mb-5'>\n                    <img\n                        alt='brand image'\n                        src={Client4.getBrandImageUrl(this.state.brandImageTimestamp)}\n                    />\n                    {overlay}\n                </div>\n            );\n        } else {\n            img = (\n                <p className='mt-2'>\n                    <FormattedMessage\n                        id='admin.team.noBrandImage'\n                        defaultMessage='No brand image uploaded'\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div\n                data-testid={this.props.id}\n                className='form-group'\n            >\n                <label className='control-label col-sm-4'>\n                    <FormattedMessage\n                        id='admin.team.brandImageTitle'\n                        defaultMessage='Custom Brand Image:'\n                    />\n                </label>\n                <div className='col-sm-8'>\n                    <div className='remove-image'>\n                        {img}\n                    </div>\n                </div>\n                <div className='col-sm-4'/>\n                <div className='col-sm-8'>\n                    <div className='file__upload mt-5'>\n                        <button\n                            className={letbtnDefaultClass}\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.team.chooseImage'\n                                defaultMessage='Select Image'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            accept='.jpg,.png,.bmp'\n                            disabled={this.props.disabled}\n                            onChange={this.handleImageChange}\n                        />\n                    </div>\n                    <br/>\n                    <FormError error={this.state.error}/>\n                    <p className='help-text m-0'>\n                        <FormattedHTMLMessage\n                            id='admin.team.uploadDesc'\n                            defaultMessage='Customize your user experience by adding a custom image to your login screen. See examples at <a href=\"http://docs.mattermost.com/administration/config-settings.html#custom-branding\" target=\"_blank\">docs.mattermost.com/administration/config-settings.html#custom-branding</a>.'\n                        />\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport ClusterTableContainer from './cluster_table_container.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ClusterSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ClusterSettings.Enable = this.state.Enable;\n        config.ClusterSettings.ClusterName = this.state.ClusterName;\n        config.ClusterSettings.OverrideHostname = this.state.OverrideHostname;\n        config.ClusterSettings.UseIpAddress = this.state.UseIpAddress;\n        config.ClusterSettings.UseExperimentalGossip = this.state.UseExperimentalGossip;\n        config.ClusterSettings.GossipPort = this.parseIntNonZero(this.state.GossipPort, 8074);\n        config.ClusterSettings.StreamingPort = this.parseIntNonZero(this.state.StreamingPort, 8075);\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const settings = config.ClusterSettings;\n\n        return {\n            Enable: settings.Enable,\n            ClusterName: settings.ClusterName,\n            OverrideHostname: settings.OverrideHostname,\n            UseIpAddress: settings.UseIpAddress,\n            UseExperimentalGossip: settings.UseExperimentalGossip,\n            GossipPort: settings.GossipPort,\n            StreamingPort: settings.StreamingPort,\n            showWarning: false,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.advance.cluster'\n                defaultMessage='High Availability'\n            />\n        );\n    }\n\n    overrideHandleChange = (id, value) => {\n        this.setState({\n            showWarning: true,\n        });\n\n        this.handleChange(id, value);\n    }\n\n    renderSettings = () => {\n        const licenseEnabled = this.props.license.IsLicensed === 'true' && this.props.license.Cluster === 'true';\n        if (!licenseEnabled) {\n            return null;\n        }\n\n        var configLoadedFromCluster = null;\n\n        if (Client4.clusterId) {\n            configLoadedFromCluster = (\n                <div\n                    style={style.configLoadedFromCluster}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.loadedFrom'\n                        defaultMessage='This configuration file was loaded from Node ID {clusterId}. Please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html) if you are accessing the System Console through a load balancer and experiencing issues.'\n                        values={{\n                            clusterId: Client4.clusterId,\n                        }}\n                    />\n                </div>\n            );\n        }\n\n        var warning = null;\n\n        if (this.state.showWarning) {\n            warning = (\n                <div\n                    style={style.warning}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.should_not_change'\n                        defaultMessage='WARNING: These settings may not sync with the other servers in the cluster. High Availability inter-node communication will not start until you modify the config.json to be identical on all servers and restart Mattermost. Please see the [documentation](!http://docs.mattermost.com/deployment/cluster.html) on how to add or remove a server from the cluster. If you are accessing the System Console through a load balancer and experiencing issues, please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html).'\n                    />\n                </div>\n            );\n        }\n\n        var clusterTableContainer = null;\n        if (this.state.Enable) {\n            clusterTableContainer = (<ClusterTableContainer/>);\n        }\n\n        return (\n            <SettingsGroup>\n                {configLoadedFromCluster}\n                {clusterTableContainer}\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.cluster.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                {warning}\n                <BooleanSetting\n                    id='Enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.enableTitle'\n                            defaultMessage='Enable High Availability Mode:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.cluster.enableDescription'\n                            defaultMessage='When true, Mattermost will run in High Availability mode. Please see [documentation](!http://docs.mattermost.com/deployment/cluster.html) to learn more about configuring High Availability for Mattermost.'\n                        />\n                    }\n                    value={this.state.Enable}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.Enable')}\n                />\n                <TextSetting\n                    id='ClusterName'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterName'\n                            defaultMessage='Cluster Name:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.ClusterNameEx', 'E.g.: \"Production\" or \"Staging\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterNameDesc'\n                            defaultMessage='The cluster to join by name.  Only nodes with the same cluster name will join together.  This is to support Blue-Green deployments or staging pointing to the same database.'\n                        />\n                    }\n                    value={this.state.ClusterName}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.ClusterName')}\n                />\n                <TextSetting\n                    id='OverrideHostname'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostname'\n                            defaultMessage='Override Hostname:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.OverrideHostnameEx', 'E.g.: \"app-server-01\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostnameDesc'\n                            defaultMessage='The default value of <blank> will attempt to get the Hostname from the OS or use the IP Address.  You can override the hostname of this server with this property.  It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed.'\n                        />\n                    }\n                    value={this.state.OverrideHostname}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.OverrideHostname')}\n                />\n                <BooleanSetting\n                    id='UseIpAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseIpAddress'\n                            defaultMessage='Use IP Address:'\n                        />\n                    }\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.cluster.UseIpAddressDesc'\n                            defaultMessage='When true, the cluster will attempt to communicate via IP Address vs using the hostname.'\n                        />\n                    }\n                    value={this.state.UseIpAddress}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseIpAddress')}\n                />\n                <BooleanSetting\n                    id='UseExperimentalGossip'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseExperimentalGossip'\n                            defaultMessage='Use Experimental Gossip:'\n                        />\n                    }\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.cluster.UseExperimentalGossipDesc'\n                            defaultMessage='When true, the server will attempt to communicate via the gossip protocol over the gossip port.  When false the server will attempt to communicate over the streaming port. When false the gossip port and protocol are still used to determine cluster health.'\n                        />\n                    }\n                    value={this.state.UseExperimentalGossip}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseExperimentalGossip')}\n                />\n                <TextSetting\n                    id='GossipPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPort'\n                            defaultMessage='Gossip Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.GossipPortEx', 'E.g.: \"8074\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPortDesc'\n                            defaultMessage='The port used for the gossip protocol.  Both UDP and TCP should be allowed on this port.'\n                        />\n                    }\n                    value={this.state.GossipPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.GossipPort')}\n                />\n                <TextSetting\n                    id='StreamingPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPort'\n                            defaultMessage='Streaming Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.StreamingPortEx', 'E.g.: \"8075\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPortDesc'\n                            defaultMessage='The port used for streaming data between servers.'\n                        />\n                    }\n                    value={this.state.StreamingPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.StreamingPort')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n\nconst style = {\n    configLoadedFromCluster: {marginBottom: 10},\n    warning: {marginBottom: 10},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport statusGreen from 'images/status_green.png';\nimport statusYellow from 'images/status_yellow.png';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\n\nexport default class ClusterTable extends React.PureComponent {\n    static propTypes = {\n        clusterInfos: PropTypes.array.isRequired,\n        reload: PropTypes.func.isRequired,\n    }\n\n    render() {\n        var versionMismatch = (\n            <img\n                alt='version mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var configMismatch = (\n            <img\n                alt='config mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var version = '';\n        var configHash = '';\n        var singleItem = false;\n\n        if (this.props.clusterInfos.length) {\n            version = this.props.clusterInfos[0].version;\n            configHash = this.props.clusterInfos[0].config_hash;\n            singleItem = this.props.clusterInfos.length === 1;\n        }\n\n        this.props.clusterInfos.map((clusterInfo) => {\n            if (clusterInfo.version !== version) {\n                versionMismatch = (\n                    <img\n                        alt='version mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            if (clusterInfo.config_hash !== configHash) {\n                configMismatch = (\n                    <img\n                        alt='config mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            return null;\n        });\n\n        var items = this.props.clusterInfos.map((clusterInfo) => {\n            var status = null;\n\n            if (clusterInfo.hostname === '') {\n                clusterInfo.hostname = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.version === '') {\n                clusterInfo.version = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.config_hash === '') {\n                clusterInfo.config_hash = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (singleItem) {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            } else {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusGreen}\n                    />\n                );\n            }\n\n            return (\n                <tr key={clusterInfo.ipaddress}>\n                    <td style={style.clusterCell}>{status}</td>\n                    <td style={style.clusterCell}>{clusterInfo.hostname}</td>\n                    <td style={style.clusterCell}>{versionMismatch} {clusterInfo.version}</td>\n                    <td style={style.clusterCell}><div className='config-hash'>{configMismatch} {clusterInfo.config_hash}</div></td>\n                    <td style={style.clusterCell}>{clusterInfo.ipaddress}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div\n                className='cluster-panel__table'\n                style={style.clusterTable}\n            >\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        onClick={this.props.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.cluster.status_table.reload'\n                            defaultMessage=' Reload Cluster Status'\n                        />\n                    </button>\n                </div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.status'\n                                    defaultMessage='Status'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.hostname'\n                                    defaultMessage='Hostname'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.version'\n                                    defaultMessage='Version'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.config_hash'\n                                    defaultMessage='Config File MD5'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.url'\n                                    defaultMessage='Gossip Address'\n                                />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    clusterTable: {margin: 10, marginBottom: 30},\n    clusterCell: {whiteSpace: 'nowrap'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {getClusterStatus} from 'actions/admin_actions.jsx';\nimport LoadingScreen from '../loading_screen';\n\nimport ClusterTable from './cluster_table.jsx';\n\nexport default class ClusterTableContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.interval = null;\n\n        this.state = {\n            clusterInfos: null,\n        };\n    }\n\n    load = () => {\n        getClusterStatus(\n            (data) => {\n                this.setState({\n                    clusterInfos: data,\n                });\n            },\n            null,\n        );\n    }\n\n    componentDidMount() {\n        this.load();\n\n        // reload the cluster status every 15 seconds\n        this.interval = setInterval(this.load, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    reload = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({\n            clusterInfos: null,\n        });\n\n        this.load();\n    }\n\n    render() {\n        if (this.state.clusterInfos == null) {\n            return (<LoadingScreen/>);\n        }\n\n        return (\n            <ClusterTable\n                clusterInfos={this.state.clusterInfos}\n                reload={this.reload}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {ChromePicker, ColorResult} from 'react-color';\n\nimport Setting from './setting';\n\ntype State = {\n    showPicker: boolean;\n}\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    helpText?: React.ReactNode;\n    value: string;\n    onChange?: (id: string, color: string) => void;\n    disabled?: boolean;\n}\n\nexport default class ColorSetting extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showPicker: false,\n        };\n    }\n\n    public componentDidMount() {\n        document.addEventListener('click', this.closePicker);\n    }\n\n    public componentWillUnmount() {\n        document.removeEventListener('click', this.closePicker);\n    }\n\n    private handleChange = (color: ColorResult) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.id, color.hex);\n        }\n    }\n\n    private togglePicker = () => {\n        if (this.props.disabled) {\n            this.setState({showPicker: false});\n        } else {\n            this.setState({showPicker: !this.state.showPicker});\n        }\n    }\n\n    private closePicker = (e: MouseEvent) => {\n        if (e.target) {\n            const closest = (e.target as HTMLElement).closest('.' + this.getPickerClass());\n            if (!closest || !closest.contains(e.target as HTMLElement)) {\n                this.setState({showPicker: false});\n            }\n        }\n    }\n\n    private onTextInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.id, e.target.value);\n        }\n    }\n\n    private getPickerClass = () => {\n        return this.props.id ? 'picker-' + this.props.id.replace('.', '-') : '';\n    }\n\n    public render() {\n        let picker;\n        if (this.state.showPicker) {\n            picker = (\n                <div className={'color-picker__popover ' + this.getPickerClass()}>\n                    <ChromePicker\n                        color={this.props.value}\n                        onChange={this.handleChange}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div className='input-group color-picker colorpicker-element'>\n                    <input\n                        type='text'\n                        className='form-control'\n                        value={this.props.value}\n                        onChange={this.onTextInput}\n                        disabled={this.props.disabled}\n                    />\n                    <span\n                        className={'input-group-addon ' + this.getPickerClass()}\n                        onClick={this.togglePicker}\n                    >\n                        <i style={{backgroundColor: this.props.value}}/>\n                    </span>\n                    {picker}\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport LoadingScreen from 'components/loading_screen';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport {t} from 'utils/i18n.jsx';\n\nexport default class ComplianceReports extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set if compliance reports are licensed\n         */\n        isLicensed: PropTypes.bool.isRequired,\n\n        /*\n         * Set if compliance reports are enabled in the config\n         */\n        enabled: PropTypes.bool.isRequired,\n\n        /*\n         * Array of reports to render\n         */\n        reports: PropTypes.arrayOf(PropTypes.object).isRequired,\n        users: PropTypes.object.isRequired,\n\n        /*\n         * Error message to display\n         */\n        serverError: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get compliance reports\n             */\n            getComplianceReports: PropTypes.func.isRequired,\n\n            /*\n             * Function to save compliance reports\n             */\n            createComplianceReport: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingReports: true,\n        };\n\n        this.descInput = React.createRef();\n        this.emailsInput = React.createRef();\n        this.fromInput = React.createRef();\n        this.keywordsInput = React.createRef();\n        this.toInput = React.createRef();\n    }\n\n    componentDidMount() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return;\n        }\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false}),\n        );\n    }\n\n    reload = () => {\n        this.setState({loadingReports: true});\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false}),\n        );\n    }\n\n    runReport = (e) => {\n        e.preventDefault();\n\n        this.setState({runningReport: true});\n\n        const job = {};\n        job.desc = this.descInput.current.value;\n        job.emails = this.emailsInput.current.value;\n        job.keywords = this.keywordsInput.current.value;\n        job.start_at = Date.parse(this.fromInput.current.value);\n        job.end_at = Date.parse(this.toInput.current.value);\n\n        this.props.actions.createComplianceReport(job).then(\n            ({data}) => {\n                if (data) {\n                    this.emailsInput.current.value = '';\n                    this.keywordsInput.current.value = '';\n                    this.descInput.current.value = '';\n                    this.fromInput.current.value = '';\n                    this.toInput.current.value = '';\n                }\n                this.setState({runningReport: false});\n                this.props.actions.getComplianceReports();\n            },\n        );\n    }\n\n    getDateTime(millis) {\n        const date = new Date(millis);\n        return (\n            <span style={style.date}>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    render() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return <div/>;\n        }\n\n        let content = null;\n        if (this.state.loadingReports) {\n            content = <LoadingScreen/>;\n        } else {\n            var list = [];\n\n            for (var i = 0; i < this.props.reports.length; i++) {\n                const report = this.props.reports[i];\n\n                let params = '';\n                if (report.type === 'adhoc') {\n                    params = (\n                        <span>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />{' '}{this.getDateTime(report.start_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />{' '}{this.getDateTime(report.end_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />{' '}{report.emails}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />{' '}{report.keywords}\n                        </span>);\n                }\n                let download = '';\n                let status = '';\n                if (report.status === 'finished') {\n                    download = (\n                        <a href={`${Client4.getBaseRoute()}/compliance/reports/${report.id}/download`}>\n                            <FormattedMessage\n                                id='admin.compliance_table.download'\n                                defaultMessage='Download'\n                            />\n                        </a>\n                    );\n\n                    status = (\n                        <span className='status-icon-success'>\n                            <FormattedMessage\n                                id='admin.compliance_table.success'\n                                defaultMessage='Success'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'running') {\n                    status = (\n                        <span className='status-icon-warning'>\n                            <FormattedMessage\n                                id='admin.compliance_table.pending'\n                                defaultMessage='Pending'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'failed') {\n                    status = (\n                        <span className='status-icon-error'>\n                            <FormattedMessage\n                                id='admin.compliance_table.failed'\n                                defaultMessage='Failed'\n                            />\n                        </span>\n                    );\n                }\n\n                let user = report.user_id;\n                const profile = this.props.users[report.user_id];\n                if (profile) {\n                    user = profile.email;\n                }\n\n                list[i] = (\n                    <tr key={report.id}>\n                        <td>{status}</td>\n                        <td style={style.dataCell}>{download}</td>\n                        <td>{this.getDateTime(report.create_at)}</td>\n                        <td>{report.count}</td>\n                        <td>{report.type}</td>\n                        <td style={style.dataCell}>{report.desc}</td>\n                        <td>{user}</td>\n                        <td style={style.dataCell}>{params}</td>\n                    </tr>\n                );\n            }\n\n            content = (\n                <div style={style.content}>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.status'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.files'\n                                        defaultMessage='Files'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.timestamp'\n                                        defaultMessage='Timestamp'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.records'\n                                        defaultMessage='Records'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.type'\n                                        defaultMessage='Type'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.desc'\n                                        defaultMessage='Description'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.userId'\n                                        defaultMessage='Requested By'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.params'\n                                        defaultMessage='Params'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {list}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n\n        let serverError = '';\n        if (this.props.serverError) {\n            serverError = (\n                <div\n                    className='form-group has-error'\n                    style={style.serverError}\n                >\n                    <label className='control-label'>{this.props.serverError}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div className='panel compliance-panel'>\n                <h4>\n                    <FormattedMessage\n                        id='admin.compliance_reports.title'\n                        defaultMessage='Compliance Reports'\n                    />\n                </h4>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.desc'\n                                defaultMessage='Job Name:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='desc'\n                            ref={this.descInput}\n                            placeholder={{id: t('admin.compliance_reports.desc_placeholder'), defaultMessage: 'E.g. \"Audit 445 for HR\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='from'\n                            ref={this.fromInput}\n                            placeholder={{id: t('admin.compliance_reports.from_placeholder'), defaultMessage: 'E.g. \"2016-03-11\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='to'\n                            ref={this.toInput}\n                            placeholder={{id: t('admin.compliance_reports.to_placeholder'), defaultMessage: 'E.g. \"2016-03-15\"'}}\n                        />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='emails'\n                            ref={this.emailsInput}\n                            placeholder={{id: t('admin.compliance_reports.emails_placeholder'), defaultMessage: 'E.g. \"bill@example.com, bob@example.com\"'}}\n                        />\n                    </div>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='keywords'\n                            ref={this.keywordsInput}\n                            placeholder={{id: t('admin.compliance_reports.keywords_placeholder'), defaultMessage: 'E.g. \"shorting stock\"'}}\n                        />\n                    </div>\n                </div>\n                <div className='clearfix'>\n                    <button\n                        id='run-button'\n                        type='submit'\n                        className='btn btn-primary'\n                        onClick={this.runReport}\n                    >\n                        <FormattedMessage\n                            id='admin.compliance_reports.run'\n                            defaultMessage='Run Compliance Report'\n                        />\n                    </button>\n                </div>\n                {serverError}\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        disabled={this.state.runningReport}\n                        onClick={this.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.compliance_reports.reload'\n                            defaultMessage='Reload Completed Compliance Reports'\n                        />\n                    </button>\n                </div>\n                <div className='compliance-panel__table'>\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    content: {margin: 10},\n    greenStatus: {color: 'green'},\n    redStatus: {color: 'red'},\n    dataCell: {whiteSpace: 'nowrap'},\n    date: {whiteSpace: 'nowrap'},\n    serverError: {marginTop: '10px'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {createComplianceReport, getComplianceReports} from 'mattermost-redux/actions/admin';\nimport {getComplianceReports as selectComplianceReports, getConfig} from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport ComplianceReports from './compliance_reports.jsx';\n\nconst getUsersForReports = createSelector(\n    (state) => state.entities.users.profiles,\n    (state) => state.entities.admin.complianceReports,\n    (users, reports) => {\n        const usersMap = {};\n        Object.values(reports).forEach((r) => {\n            const u = users[r.user_id];\n            if (u) {\n                usersMap[u.id] = u;\n            }\n        });\n        return usersMap;\n    },\n);\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    let enabled = false;\n    const config = getConfig(state);\n    if (config && config.ComplianceSettings) {\n        enabled = config.ComplianceSettings.Enable;\n    }\n\n    let serverError;\n    const error = state.requests.admin.createCompliance.error;\n    if (error) {\n        serverError = error.message;\n    }\n\n    const reports = Object.values(selectComplianceReports(state)).sort((a, b) => {\n        return b.create_at - a.create_at;\n    });\n\n    return {\n        isLicensed,\n        enabled,\n        reports,\n        serverError,\n        users: getUsersForReports(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getComplianceReports,\n            createComplianceReport,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplianceReports);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport ConfirmModal from 'components/confirm_modal';\n\nimport BooleanSetting from './boolean_setting';\n\ntype Props = {\n    id: string;\n    value: boolean;\n    onChange: (id: string, value: boolean, confirm?: boolean, doSubmit?: boolean, warning?: React.ReactNode | string) => void;\n    cancelSubmit: () => void;\n    disabled?: boolean;\n    setByEnv: boolean;\n    showConfirm: boolean;\n}\n\nexport default class CustomEnableDisableGuestAccountsSetting extends React.PureComponent<Props> {\n    public handleChange = (id: string, value: boolean, submit = false) => {\n        const confirmNeeded = value === false; // Requires confirmation if disabling guest accounts\n        let warning: React.ReactNode | string = '';\n        if (confirmNeeded) {\n            warning = (\n                <FormattedMessage\n                    id='admin.guest_access.disableConfirmWarning'\n                    defaultMessage='All current guest account sessions will be revoked, and marked as inactive'\n                />\n            );\n        }\n        this.props.onChange(id, value, confirmNeeded, submit, warning);\n    };\n\n    public render() {\n        const label = (\n            <FormattedMessage\n                id='admin.guest_access.enableTitle'\n                defaultMessage='Enable Guest Access: '\n            />\n        );\n        const helpText = (\n            <FormattedMarkdownMessage\n                id='admin.guest_access.enableDescription'\n                defaultMessage='When true, external guest can be invited to channels within teams. Please see [Permissions Schemes](../user_management/permissions/system_scheme) for which roles can invite guests.'\n            />\n        );\n\n        return (\n            <>\n                <BooleanSetting\n                    id={this.props.id}\n                    value={this.props.value}\n                    label={label}\n                    helpText={helpText}\n                    setByEnv={this.props.setByEnv}\n                    onChange={this.handleChange}\n                />\n                <ConfirmModal\n                    show={this.props.showConfirm && (this.props.value === false)}\n                    title={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmTitle'\n                            defaultMessage='Save and Disable Guest Access?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmMessage'\n                            defaultMessage='Disabling guest access will revoke all current Guest Account sessions. Guests will no longer be able to login and new guests cannot be invited into Mattermost. Guest users will be marked as inactive in user lists. Enabling this feature will not reinstate previous guest accounts. Are you sure you wish to remove these users?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmButton'\n                            defaultMessage='Save and Disable Guest Access'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.handleChange(this.props.id, false, true);\n                        this.setState({showConfirm: false});\n                    }}\n                    onCancel={this.props.cancelSubmit}\n                />\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings.jsx';\n\n// No changes required to the base SchemaAdminSettings, except to inject custom props.\nconst CustomPluginSettings = SchemaAdminSettings;\n\nexport default CustomPluginSettings;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {Constants} from '../../../utils/constants';\nimport {t} from '../../../utils/i18n';\nimport SchemaAdminSettings from '../schema_admin_settings';\n\nexport default function getEnablePluginSetting(plugin) {\n    const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n    const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n    return {\n        type: Constants.SettingsTypes.TYPE_BOOL,\n        key: pluginEnabledConfigKey,\n        label: t('admin.plugin.enable_plugin'),\n        label_default: 'Enable Plugin: ',\n        help_text: t('admin.plugin.enable_plugin.help'),\n        help_text_default: 'When true, this plugin is enabled.',\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\n\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport {getAdminConsoleCustomComponents} from 'selectors/admin_console';\nimport SchemaAdminSettings from '../schema_admin_settings';\nimport {it} from '../admin_definition';\n\nimport CustomPluginSettings from './custom_plugin_settings.jsx';\nimport getEnablePluginSetting from './enable_plugin_setting';\n\nfunction makeGetPluginSchema() {\n    return createSelector(\n        (state, pluginId) => state.entities.admin.plugins[pluginId],\n        (state, pluginId) => getAdminConsoleCustomComponents(state, pluginId),\n        (plugin, customComponents) => {\n            if (!plugin) {\n                return null;\n            }\n\n            const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n            const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n            let settings = [];\n            if (plugin.settings_schema && plugin.settings_schema.settings) {\n                settings = plugin.settings_schema.settings.map((setting) => {\n                    const key = setting.key.toLowerCase();\n                    let component = null;\n                    let bannerType = '';\n                    let type = setting.type;\n                    let displayName = setting.display_name;\n                    let isDisabled = it.stateIsFalse(pluginEnabledConfigKey);\n\n                    if (customComponents[key]) {\n                        component = customComponents[key].component;\n                        type = Constants.SettingsTypes.TYPE_CUSTOM;\n                    } else if (setting.type === Constants.SettingsTypes.TYPE_CUSTOM) {\n                        // Show a warning banner to enable the plugin in order to display the custom component.\n                        type = Constants.SettingsTypes.TYPE_BANNER;\n                        displayName = localizeMessage('admin.plugin.customSetting.pluginDisabledWarning', 'In order to view this setting, enable the plugin and click Save.');\n                        bannerType = 'warning';\n                        isDisabled = it.stateIsTrue(pluginEnabledConfigKey);\n                    }\n\n                    return {\n                        ...setting,\n                        type,\n                        key: 'PluginSettings.Plugins.' + escapedPluginId + '.' + key,\n                        help_text_markdown: true,\n                        label: displayName,\n                        translate: Boolean(plugin.translate),\n                        isDisabled,\n                        banner_type: bannerType,\n                        component,\n                        showTitle: customComponents[key] ? customComponents[key].options.showTitle : false,\n                    };\n                });\n            }\n\n            settings.unshift(getEnablePluginSetting(plugin));\n\n            return {\n                ...plugin.settings_schema,\n                id: plugin.id,\n                name: plugin.name,\n                settings,\n                translate: Boolean(plugin.translate),\n            };\n        },\n    );\n}\n\nfunction makeMapStateToProps() {\n    const getPluginSchema = makeGetPluginSchema();\n\n    return (state, ownProps) => {\n        const pluginId = ownProps.match.params.plugin_id;\n\n        return {\n            schema: getPluginSchema(state, pluginId),\n            roles: getRoles(state),\n        };\n    };\n}\n\nexport default connect(makeMapStateToProps)(CustomPluginSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport AdminSettings from 'components/admin_console/admin_settings';\n\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nimport {Constants} from 'utils/constants';\n\nexport default class CustomTermsOfServiceSettings extends AdminSettings {\n    static propTypes = {\n        actions: PropTypes.shape({\n            getTermsOfService: PropTypes.func.isRequired,\n            createTermsOfService: PropTypes.func.isRequired,\n        }).isRequired,\n        config: PropTypes.object,\n        license: PropTypes.object,\n        setNavigationBlocked: PropTypes.func,\n\n        /*\n        * Action to save config file\n        */\n        updateConfig: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            termsEnabled: props.config.SupportSettings.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: props.config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\n            loadingTermsText: true,\n            receivedTermsText: '',\n            termsText: '',\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n    }\n\n    getStateFromConfig(config) {\n        return {\n            termsEnabled: config.SupportSettings.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod,\n        };\n    }\n\n    getConfigFromState = (config) => {\n        config.SupportSettings.CustomTermsOfServiceEnabled = this.state.termsEnabled;\n        config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod = this.parseIntNonZero(this.state.reAcceptancePeriod, Constants.DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD);\n\n        return config;\n    }\n\n    componentDidMount() {\n        this.getTermsOfService();\n    }\n\n    doSubmit = async (callback) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.termsEnabled && (this.state.receivedTermsText !== this.state.termsText || !this.props.config.SupportSettings.CustomTermsOfServiceEnabled)) {\n            const result = await this.props.actions.createTermsOfService(this.state.termsText);\n            if (result.error) {\n                this.handleAPIError(result.error, callback);\n                return;\n            }\n        }\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {data, error} = await this.props.updateConfig(config);\n\n        if (data) {\n            this.setState(this.getStateFromConfig(data));\n\n            this.setState({\n                saveNeeded: false,\n                saving: false,\n            });\n\n            this.props.setNavigationBlocked(false);\n\n            if (callback) {\n                callback();\n            }\n\n            if (this.handleSaved) {\n                this.handleSaved(config);\n            }\n        } else if (error) {\n            this.handleAPIError({id: error.server_error_id, ...error}, callback, config);\n        }\n    };\n\n    handleAPIError = (err, callback, config) => {\n        this.setState({\n            saving: false,\n            serverError: err.message,\n            serverErrorId: err.id,\n        });\n\n        if (callback) {\n            callback();\n        }\n\n        if (this.handleSaved && config) {\n            this.handleSaved(config);\n        }\n    };\n\n    getTermsOfService = async () => {\n        this.setState({loadingTermsText: true});\n\n        const res = await this.props.actions.getTermsOfService();\n        if (res.data) {\n            this.setState({\n                termsText: res.data.text,\n                receivedTermsText: res.data.text,\n            });\n        }\n\n        this.setState({loadingTermsText: false});\n    };\n\n    handleTermsTextChange = (id, value) => {\n        this.handleChange('termsText', value);\n    };\n\n    handleTermsEnabledChange = (id, value) => {\n        this.handleChange('termsEnabled', value);\n    };\n\n    handleReAcceptancePeriodChange = (id, value) => {\n        this.handleChange('reAcceptancePeriod', value);\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.support.termsOfServiceTitle'\n                defaultMessage='Custom Terms of Service (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        if (this.state.loadingTermsText) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    key={'customTermsOfServiceEnabled'}\n                    id={'SupportSettings.CustomTermsOfServiceEnabled'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.enableTermsOfServiceTitle'\n                            defaultMessage='Enable Custom Terms of Service'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.support.enableTermsOfServiceHelp'\n                            defaultMessage='When true, new users must accept the terms of service before accessing any Mattermost teams on desktop, web or mobile. Existing users must accept them after login or a page refresh.\\n \\nTo update terms of service link displayed in account creation and login pages, go to [Site Configuration > Customization](../site_config/customization).'\n                        />\n                    }\n                    value={this.state.termsEnabled}\n                    disabled={!(this.props.license.IsLicensed && this.props.license.CustomTermsOfService === 'true')}\n                    onChange={this.handleTermsEnabledChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceEnabled')}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceText'}\n                    id={'SupportSettings.CustomTermsOfServiceText'}\n                    type={'textarea'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextTitle'\n                            defaultMessage='Custom Terms of Service Text'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextHelp'\n                            defaultMessage='Text that will appear in your custom Terms of Service. Supports Markdown-formatted text.'\n                        />\n                    }\n                    disabled={!this.state.termsEnabled}\n                    onChange={this.handleTermsTextChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceText')}\n                    value={this.state.termsText}\n                    maxLength={Constants.MAX_TERMS_OF_SERVICE_TEXT_LENGTH}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceReAcceptancePeriod'}\n                    id={'SupportSettings.CustomTermsOfServiceReAcceptancePeriod'}\n                    type={'number'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceTitle'\n                            defaultMessage='Re-Acceptance Period:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceHelp'\n                            defaultMessage='The number of days before Terms of Service acceptance expires, and the terms must be re-accepted.'\n                        />\n                    }\n                    disabled={!this.state.termsEnabled}\n                    value={this.state.reAcceptancePeriod}\n                    onChange={this.handleReAcceptancePeriodChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceReAcceptancePeriod')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTermsOfService, createTermsOfService} from 'mattermost-redux/actions/users';\n\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTermsOfService,\n            createTermsOfService,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CustomTermsOfServiceSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as Utils from 'utils/utils';\nimport {t} from 'utils/i18n.jsx';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport Setting from './setting';\n\nexport default class CustomUrlSchemesSetting extends React.PureComponent {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            value: PropTypes.array.isRequired,\n            onChange: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            setByEnv: PropTypes.bool.isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.arrayToString(props.value),\n        };\n    }\n\n    stringToArray = (str) => {\n        return str.split(',').map((s) => s.trim()).filter(Boolean);\n    };\n\n    arrayToString = (arr) => {\n        return arr.join(',');\n    };\n\n    handleChange = (e) => {\n        const valueAsArray = this.stringToArray(e.target.value);\n\n        this.props.onChange(this.props.id, valueAsArray);\n\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    render() {\n        const label = Utils.localizeMessage('admin.customization.customUrlSchemes', 'Custom URL Schemes:');\n        const helpText = Utils.localizeMessage(\n            'admin.customization.customUrlSchemesDesc',\n            'Allows message text to link if it begins with any of the comma-separated URL schemes listed. By default, the following schemes will create links: \"http\", \"https\", \"ftp\", \"tel\", and \"mailto\".',\n        );\n\n        return (\n            <Setting\n                label={label}\n                helpText={helpText}\n                inputId={this.props.id}\n                setByEnv={this.props.setByEnv}\n            >\n                <LocalizedInput\n                    id={this.props.id}\n                    className='form-control'\n                    type='text'\n                    placeholder={{id: t('admin.customization.customUrlSchemesPlaceholder'), defaultMessage: 'E.g.: \"git,smtp\"'}}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                />\n            </Setting>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./data_grid.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\n\nimport DataGridHeader from './data_grid_header';\nimport DataGridRow from './data_grid_row';\nimport DataGridSearch from './data_grid_search';\n\nimport './data_grid.scss';\n\nexport type Column = {\n    name: string | JSX.Element;\n    field: string;\n    fixed?: boolean;\n\n    // Optional styling overrides\n    width?: number;\n    textAlign?: '-moz-initial' | 'inherit' | 'initial' | 'revert' | 'unset' | 'center' | 'end' | 'justify' | 'left' | 'match-parent' | 'right' | 'start' | undefined;\n    overflow?: string;\n}\n\nexport type Row = {\n    [key: string]: JSX.Element | string;\n}\n\ntype Props = {\n    rows: Row[];\n    columns: Column[];\n    placeholderEmpty?: JSX.Element;\n    loadingIndicator?: JSX.Element;\n\n    rowsContainerStyles?: CSSProperties;\n\n    minimumColumnWidth?: number;\n\n    page: number;\n    startCount: number;\n    endCount: number;\n    total?: number;\n    loading: boolean;\n\n    nextPage: () => void;\n    previousPage: () => void;\n\n    search: (term: string) => void;\n    term: string;\n    searchPlaceholder?: string;\n};\n\ntype State = {\n    visibleColumns: Column[];\n    fixedColumns: Column[];\n    hiddenColumns: Column[];\n    minimumColumnWidth: number;\n};\n\nconst MINIMUM_COLUMN_WIDTH = 100;\n\nclass DataGrid extends React.PureComponent<Props, State> {\n    private ref: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n\n        const minimumColumnWidth = props.minimumColumnWidth ? props.minimumColumnWidth : MINIMUM_COLUMN_WIDTH;\n\n        this.state = {\n            visibleColumns: this.props.columns,\n            hiddenColumns: [],\n            fixedColumns: this.props.columns.filter((col) => col.fixed),\n            minimumColumnWidth,\n        };\n\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        this.handleResize();\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    private handleResize = () => {\n        if (!this.ref?.current) {\n            return;\n        }\n\n        const {minimumColumnWidth, fixedColumns} = this.state;\n        const fixedColumnWidth = (fixedColumns.length * minimumColumnWidth);\n\n        let visibleColumns: Column[] = this.props.columns;\n        let availableWidth = this.ref.current.clientWidth - fixedColumnWidth - 50;\n\n        visibleColumns = visibleColumns.filter((column) => {\n            if (availableWidth > minimumColumnWidth) {\n                availableWidth -= minimumColumnWidth;\n                return true;\n            }\n\n            return Boolean(column.fixed);\n        });\n\n        this.setState({visibleColumns});\n    }\n\n    private renderRows(): JSX.Element {\n        const {rows, rowsContainerStyles} = this.props;\n        const {visibleColumns} = this.state;\n        let rowsToRender: JSX.Element | JSX.Element[] | null = null;\n\n        if (this.props.loading) {\n            if (this.props.loadingIndicator) {\n                rowsToRender = (\n                    <div className='DataGrid_loading'>\n                        {this.props.loadingIndicator}\n                    </div>\n                );\n            } else {\n                rowsToRender = (\n                    <div className='DataGrid_loading'>\n                        <LoadingSpinner/>\n                        <FormattedMessage\n                            id='admin.data_grid.loading'\n                            defaultMessage='Loading'\n                        />\n                    </div>\n                );\n            }\n        } else if (rows.length === 0) {\n            const placeholder = this.props.placeholderEmpty || (\n                <FormattedMessage\n                    id='admin.data_grid.empty'\n                    defaultMessage='No items found'\n                />\n            );\n            rowsToRender = (\n                <div className='DataGrid_empty'>\n                    {placeholder}\n                </div>\n            );\n        } else {\n            rowsToRender = rows.map((row, index) => {\n                return (\n                    <DataGridRow\n                        key={index}\n                        row={row}\n                        columns={visibleColumns}\n                    />\n                );\n            });\n        }\n\n        return (\n            <div\n                className='DataGrid_rows'\n                style={rowsContainerStyles || {}}\n            >\n                {rowsToRender}\n            </div>\n        );\n    }\n\n    private renderHeader(): JSX.Element {\n        return (\n            <DataGridHeader\n                columns={this.state.visibleColumns}\n            />\n        );\n    }\n\n    private renderSearch(): JSX.Element {\n        return (\n            <DataGridSearch\n                onSearch={this.search}\n                placeholder={this.props.searchPlaceholder || ''}\n                term={this.props.term}\n            />\n        );\n    }\n\n    private nextPage = () => {\n        if (!this.props.loading) {\n            this.props.nextPage();\n        }\n    }\n\n    private previousPage = () => {\n        if (!this.props.loading) {\n            this.props.previousPage();\n        }\n    }\n\n    private search = (term: string) => {\n        this.props.search(term);\n    }\n\n    private renderFooter = (): JSX.Element | null => {\n        const {startCount, endCount, total} = this.props;\n        let footer: JSX.Element | null = null;\n\n        if (total) {\n            const firstPage = startCount <= 1;\n            const lastPage = endCount >= total;\n\n            let prevPageFn: () => void = this.previousPage;\n            if (firstPage) {\n                prevPageFn = () => {};\n            }\n\n            let nextPageFn: () => void = this.nextPage;\n            if (lastPage) {\n                nextPageFn = () => {};\n            }\n\n            footer = (\n                <div className='DataGrid_row'>\n                    <div className='DataGrid_cell DataGrid_footer'>\n                        <FormattedMessage\n                            id='admin.data_grid.paginatorCount'\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                            values={{\n                                startCount,\n                                endCount,\n                                total,\n                            }}\n                        />\n\n                        <button\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={prevPageFn}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={nextPageFn}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        return footer;\n    }\n\n    public render() {\n        return (\n            <div\n                className='DataGrid'\n                ref={this.ref}\n            >\n                {this.renderSearch()}\n                {this.renderHeader()}\n                {this.renderRows()}\n                {this.renderFooter()}\n            </div>\n        );\n    }\n}\n\nexport default DataGrid;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\n\nimport './data_grid.scss';\n\nimport {Column} from './data_grid';\n\nexport type Props = {\n    columns: Column[];\n}\n\nclass DataGridHeader extends React.Component<Props> {\n    renderHeaderElement(col: Column) {\n        const style: CSSProperties = {};\n        if (col.width) {\n            style.flexGrow = col.width;\n        }\n\n        return (\n            <div\n                key={col.field}\n                className='DataGrid_cell'\n                style={style}\n            >\n                {col.name}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className='DataGrid_header'>\n                {this.props.columns.map((col) => this.renderHeaderElement(col))}\n            </div>\n        );\n    }\n}\n\nexport default DataGridHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\n\nimport {Row, Column} from './data_grid';\n\nimport './data_grid.scss';\n\ntype Props = {\n    columns: Column[];\n    row: Row;\n}\n\nclass DataGridRow extends React.Component<Props> {\n    renderCell(row: Row, column: Column) {\n        const style: CSSProperties = {};\n        if (column.width) {\n            style.flexGrow = column.width;\n        }\n\n        if (column.textAlign) {\n            style.textAlign = column.textAlign;\n        }\n\n        if (column.overflow) {\n            style.overflow = column.overflow;\n        }\n\n        return (\n            <div\n                key={column.field}\n                className='DataGrid_cell'\n                style={style}\n            >\n                {row[column.field]}\n            </div>\n        );\n    }\n\n    render() {\n        const cells = this.props.columns.map((col) => this.renderCell(this.props.row, col));\n        return (\n            <div className='DataGrid_row'>\n                {cells}\n            </div>\n        );\n    }\n}\n\nexport default DataGridRow;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport * as Utils from 'utils/utils.jsx';\nimport SearchIcon from 'components/widgets/icons/search_icon';\n\nimport './data_grid.scss';\n\ntype Props = {\n    onSearch: (term: string) => void;\n    placeholder: string;\n    term: string;\n}\n\nclass DataGridSearch extends React.PureComponent<Props> {\n    handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const term = e.target.value;\n        this.props.onSearch(term);\n    }\n\n    render() {\n        let {placeholder} = this.props;\n        if (!placeholder) {\n            placeholder = Utils.localizeMessage('search_bar.search', 'Search');\n        }\n        return (\n            <div className='DataGrid_search'>\n                <div className='DataGrid_searchBar'>\n                    <SearchIcon\n                        className='DataGrid_searchIcon'\n                        aria-hidden='true'\n                    />\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onChange={this.handleSearch}\n                        value={this.props.term}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataGridSearch;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DataRetentionSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.DataRetentionSettings.EnableMessageDeletion = this.state.enableMessageDeletion === 'true';\n        config.DataRetentionSettings.EnableFileDeletion = this.state.enableFileDeletion === 'true';\n        config.DataRetentionSettings.MessageRetentionDays = parseInt(this.state.messageRetentionDays, 10);\n        config.DataRetentionSettings.FileRetentionDays = parseInt(this.state.fileRetentionDays, 10);\n        config.DataRetentionSettings.DeletionJobStartTime = this.state.deletionJobStartTime;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            enableMessageDeletion: String(config.DataRetentionSettings.EnableMessageDeletion),\n            enableFileDeletion: String(config.DataRetentionSettings.EnableFileDeletion),\n            messageRetentionDays: config.DataRetentionSettings.MessageRetentionDays,\n            fileRetentionDays: config.DataRetentionSettings.FileRetentionDays,\n            deletionJobStartTime: config.DataRetentionSettings.DeletionJobStartTime,\n            showConfirmModal: false,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({showConfirmModal: true});\n    };\n\n    handleSaveConfirmed = () => {\n        this.setState({showConfirmModal: false});\n\n        this.doSubmit();\n    };\n\n    handleSaveCanceled = () => {\n        this.setState({showConfirmModal: false});\n    };\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.title'\n                defaultMessage='Confirm data retention policy'\n            />\n        );\n\n        const messageList = [];\n\n        if (this.state.enableMessageDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageDeletion'\n                    defaultMessage='All messages will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.messageRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />,\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageIndefinite'\n                    defaultMessage='All messages will be retained indefinitely.'\n                />,\n            );\n        }\n\n        if (this.state.enableFileDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileDeletion'\n                    defaultMessage='All files will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.fileRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />,\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileIndefinite'\n                    defaultMessage='All files will be retained indefinitely.'\n                />,\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.description'\n                        defaultMessage='Are you sure you want to apply the following data retention policy:'\n                    />\n                </p>\n                <ul>\n                    {messageList.map((item, index) => {\n                        return <li key={index}>{item}</li>;\n                    })}\n                </ul>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.clarification'\n                        defaultMessage='Once deleted, messages and files cannot be retrieved.'\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.confirm'\n                defaultMessage='Confirm Settings'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleSaveConfirmed}\n                onCancel={this.handleSaveCanceled}\n            />\n        );\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.data_retention.title'\n                defaultMessage='Data Retention Policy'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const enableMessageDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepMessagesIndefinitely', 'Keep all messages indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepMessageForTime', 'Keep messages for a set amount of time')},\n        ];\n\n        const enableFileDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepFilesIndefinitely', 'Keep all files indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepFilesForTime', 'Keep files for a set amount of time')},\n        ];\n\n        let messageRetentionDaysSetting = '';\n        if (this.state.enableMessageDeletion === 'true') {\n            messageRetentionDaysSetting = (\n                <TextSetting\n                    id='messageRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.messageRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.messageRetentionDays.description'\n                            defaultMessage='Set how many days messages are kept in Mattermost. Messages, including file attachments older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.messageRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.MessageRetentionDays')}\n                />\n            );\n        }\n\n        let fileRetentionDaysSetting = '';\n        if (this.state.enableFileDeletion === 'true') {\n            fileRetentionDaysSetting = (\n                <TextSetting\n                    id='fileRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.fileRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.fileRetentionDays.description'\n                            defaultMessage='Set how many days file uploads are kept in Mattermost. Files older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.fileRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.FileRetentionDays')}\n                />\n            );\n        }\n\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <SettingsGroup>\n                {confirmModal}\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMessage\n                            id='admin.data_retention.note.description'\n                            defaultMessage='Caution: Once a message or a file is deleted, the action is irreversible. Please be careful when setting up a custom data retention policy. See {documentationLink} to learn more.'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-dataretention-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.data_retention.note.description.documentationLinkText'\n                                            defaultMessage='documentation'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n                <DropdownSetting\n                    id='enableMessageDeletion'\n                    values={enableMessageDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.title'\n                            defaultMessage='Message Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps messages in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableMessageDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableMessageDeletion')}\n                />\n                {messageRetentionDaysSetting}\n                <DropdownSetting\n                    id='enableFileDeletion'\n                    values={enableFileDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.title'\n                            defaultMessage='File Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps file uploads in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableFileDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableFileDeletion')}\n                />\n                {fileRetentionDaysSetting}\n                <TextSetting\n                    id='deletionJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.title'\n                            defaultMessage='Data Deletion Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.data_retention.deletionJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled data retention job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.deletionJobStartTime}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DeletionJobStartTime')}\n                />\n                <JobsTable\n                    jobType={JobTypes.DATA_RETENTION}\n                    disabled={this.state.enableMessageDeletion !== 'true' && this.state.enableFileDeletion !== 'true'}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.title'\n                            defaultMessage='Run Deletion Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.help'\n                            defaultMessage='Initiates a Data Retention deletion job immediately.'\n                        />\n                    }\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport {recycleDatabaseConnection} from 'actions/admin_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DatabaseSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        // driverName and dataSource are read-only from the UI\n\n        config.SqlSettings.MaxIdleConns = this.parseIntNonZero(this.state.maxIdleConns);\n        config.SqlSettings.MaxOpenConns = this.parseIntNonZero(this.state.maxOpenConns);\n        config.SqlSettings.Trace = this.state.trace;\n        config.SqlSettings.DisableDatabaseSearch = this.state.disableDatabaseSearch;\n        config.SqlSettings.QueryTimeout = this.parseIntNonZero(this.state.queryTimeout);\n        config.SqlSettings.ConnMaxLifetimeMilliseconds = this.parseIntNonNegative(this.state.connMaxLifetimeMilliseconds);\n        config.ServiceSettings.MinimumHashtagLength = this.parseIntNonZero(this.state.minimumHashtagLength, 3, 2);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            driverName: config.SqlSettings.DriverName,\n            dataSource: config.SqlSettings.DataSource,\n            maxIdleConns: config.SqlSettings.MaxIdleConns,\n            maxOpenConns: config.SqlSettings.MaxOpenConns,\n            trace: config.SqlSettings.Trace,\n            disableDatabaseSearch: config.SqlSettings.DisableDatabaseSearch,\n            queryTimeout: config.SqlSettings.QueryTimeout,\n            connMaxLifetimeMilliseconds: config.SqlSettings.ConnMaxLifetimeMilliseconds,\n            minimumHashtagLength: config.ServiceSettings.MinimumHashtagLength,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.database.title'\n                defaultMessage='Database Settings'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const dataSource = '**********' + this.state.dataSource.substring(this.state.dataSource.indexOf('@'));\n\n        let recycleDbButton = <div/>;\n        if (this.props.license.IsLicensed === 'true') {\n            recycleDbButton = (\n                <RequestButton\n                    requestAction={recycleDatabaseConnection}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.recycle.recycleDescription'\n                            defaultMessage='Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {reloadConfiguration} feature to load the new settings while the server is running. The administrator should then use {featureName} feature to recycle the database connections based on the new settings.'\n                            values={{\n                                featureName: (\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.recycle.recycleDescription.featureName'\n                                            defaultMessage='Recycle Database Connections'\n                                        />\n                                    </b>\n                                ),\n                                reloadConfiguration: (\n                                    <a href='../environment/web_server'>\n                                        <b>\n                                            <FormattedMessage\n                                                id='admin.recycle.recycleDescription.reloadConfiguration'\n                                                defaultMessage='Environment > Web Server > Reload Configuration from Disk'\n                                            />\n                                        </b>\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.recycle.button'\n                            defaultMessage='Recycle Database Connections'\n                        />\n                    }\n                    showSuccessMessage={false}\n                    errorMessage={{\n                        id: t('admin.recycle.reloadFail'),\n                        defaultMessage: 'Recycling unsuccessful: {error}',\n                    }}\n                    includeDetailedError={true}\n                />\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.sql.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DriverName'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.driverName'\n                            defaultMessage='Driver Name:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={this.state.driverName}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.driverNameDescription'\n                                defaultMessage='Set the database driver in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DataSource'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.dataSource'\n                            defaultMessage='Data Source:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={dataSource}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.dataSourceDescription'\n                                defaultMessage='Set the database source in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <TextSetting\n                    id='maxIdleConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsTitle'\n                            defaultMessage='Maximum Idle Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxConnectionsExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsDescription'\n                            defaultMessage='Maximum number of idle connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxIdleConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxIdleConns')}\n                />\n                <TextSetting\n                    id='maxOpenConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenTitle'\n                            defaultMessage='Maximum Open Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxOpenExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenDescription'\n                            defaultMessage='Maximum number of open connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxOpenConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxOpenConns')}\n                />\n                <TextSetting\n                    id='queryTimeout'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutTitle'\n                            defaultMessage='Query Timeout:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.queryTimeoutExample', 'E.g.: \"30\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutDescription'\n                            defaultMessage='The number of seconds to wait for a response from the database after opening a connection and sending the query. Errors that you see in the UI or in the logs as a result of a query timeout can vary depending on the type of query.'\n                        />\n                    }\n                    value={this.state.queryTimeout}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.QueryTimeout')}\n                />\n                <TextSetting\n                    id='connMaxLifetimeMilliseconds'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeTitle'\n                            defaultMessage='Maximum Connection Lifetime:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.connMaxLifetimeExample', 'E.g.: \"3600000\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeDescription'\n                            defaultMessage='Maximum lifetime for a connection to the database in milliseconds.'\n                        />\n                    }\n                    value={this.state.connMaxLifetimeMilliseconds}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.ConnMaxLifetimeMilliseconds')}\n                />\n                <TextSetting\n                    id='minimumHashtagLength'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.minimumHashtagLengthTitle'\n                            defaultMessage='Minimum Hashtag Length:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.minimumHashtagLengthExample', 'E.g.: \"3\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.minimumHashtagLengthDescription'\n                            defaultMessage='Minimum number of characters in a hashtag. This must be greater than or equal to 2. MySQL databases must be configured to support searching strings shorter than three characters, [see documentation](!https://dev.mysql.com/doc/refman/8.0/en/fulltext-fine-tuning.html).'\n                        />\n                    }\n                    value={this.state.minimumHashtagLength}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MinimumHashtagLength')}\n                />\n                <BooleanSetting\n                    id='trace'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.traceTitle'\n                            defaultMessage='SQL Statement Logging: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.traceDescription'\n                            defaultMessage='(Development Mode) When true, executing SQL statements are written to the log.'\n                        />\n                    }\n                    value={this.state.trace}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.Trace')}\n                />\n                {recycleDbButton}\n                <BooleanSetting\n                    id='disableDatabaseSearch'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.disableDatabaseSearchTitle'\n                            defaultMessage='Disable database search: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.sql.disableDatabaseSearchDescription'\n                            defaultMessage='Disables the use of the database to perform searches. Should only be used when other [search engines](!https://mattermost.com/pl/default-search-engine) are configured.'\n                        />\n                    }\n                    value={this.state.disableDatabaseSearch}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.DisableDatabaseSearch')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class DropdownSetting extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n    }\n\n    static defaultProps = {\n        isDisabled: false,\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    render() {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <option\n                    value={value}\n                    key={value}\n                >\n                    {text}\n                </option>,\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <select\n                    data-testid={this.props.id + 'dropdown'}\n                    className='form-control'\n                    id={this.props.id}\n                    value={this.props.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                >\n                    {options}\n                </select>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {elasticsearchPurgeIndexes, elasticsearchTest} from 'actions/admin_actions.jsx';\nimport {JobStatuses, JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport JobsTable from './jobs';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ElasticsearchSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ElasticsearchSettings.ConnectionUrl = this.state.connectionUrl;\n        config.ElasticsearchSettings.SkipTLSVerification = this.state.skipTLSVerification;\n        config.ElasticsearchSettings.Username = this.state.username;\n        config.ElasticsearchSettings.Password = this.state.password;\n        config.ElasticsearchSettings.Sniff = this.state.sniff;\n        config.ElasticsearchSettings.EnableIndexing = this.state.enableIndexing;\n        config.ElasticsearchSettings.EnableSearching = this.state.enableSearching;\n        config.ElasticsearchSettings.EnableAutocomplete = this.state.enableAutocomplete;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            connectionUrl: config.ElasticsearchSettings.ConnectionUrl,\n            skipTLSVerification: config.ElasticsearchSettings.SkipTLSVerification,\n            username: config.ElasticsearchSettings.Username,\n            password: config.ElasticsearchSettings.Password,\n            sniff: config.ElasticsearchSettings.Sniff,\n            enableIndexing: config.ElasticsearchSettings.EnableIndexing,\n            enableSearching: config.ElasticsearchSettings.EnableSearching,\n            enableAutocomplete: config.ElasticsearchSettings.EnableAutocomplete,\n            configTested: true,\n            canSave: true,\n            canPurgeAndIndex: config.ElasticsearchSettings.EnableIndexing,\n        };\n    }\n\n    handleSettingChanged = (id, value) => {\n        if (id === 'enableIndexing') {\n            if (value === false) {\n                this.setState({\n                    enableSearching: false,\n                    enableAutocomplete: false,\n                });\n            } else {\n                this.setState({\n                    canSave: false,\n                    configTested: false,\n                });\n            }\n        }\n\n        if (id === 'connectionUrl' || id === 'skipTLSVerification' || id === 'username' || id === 'password' || id === 'sniff') {\n            this.setState({\n                configTested: false,\n                canSave: false,\n            });\n        }\n\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\n            this.setState({\n                canPurgeAndIndex: false,\n            });\n        }\n\n        this.handleChange(id, value);\n    }\n\n    handleSaved = () => {\n        this.setState({\n            canPurgeAndIndex: this.state.enableIndexing,\n        });\n    }\n\n    canSave = () => {\n        return this.state.canSave;\n    }\n\n    doTestConfig = (success, error) => {\n        const config = JSON.parse(JSON.stringify(this.props.config));\n        this.getConfigFromState(config);\n\n        elasticsearchTest(\n            config,\n            () => {\n                this.setState({\n                    configTested: true,\n                    canSave: true,\n                });\n                success();\n                this.doSubmit();\n            },\n            (err) => {\n                this.setState({\n                    configTested: false,\n                    canSave: false,\n                });\n                error(err);\n            },\n        );\n    }\n\n    getExtraInfo(job) {\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <FormattedMessage\n                    id='admin.elasticsearch.percentComplete'\n                    defaultMessage='{percent}% Complete'\n                    values={{percent: Number(job.progress)}}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.elasticsearch.title'\n                defaultMessage='Elasticsearch'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableIndexing'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingTitle'\n                            defaultMessage='Enable Elasticsearch Indexing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingDescription'\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Elasticsearch for search queries\" is enabled. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.enableIndexingDescription.documentationLinkText'\n                                            defaultMessage='Learn more about Elasticsearch in our documentation.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableIndexing')}\n                />\n                <TextSetting\n                    id='connectionUrl'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlTitle'\n                            defaultMessage='Server Connection Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.connectionUrlExample', 'E.g.: \"https://elasticsearch.example.org:9200\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlDescription'\n                            defaultMessage='The address of the Elasticsearch server. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-server-setup/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.connectionUrlExample.documentationLinkText'\n                                            defaultMessage='Please see documentation with server setup instructions.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.connectionUrl}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.ConnectionUrl')}\n                />\n                <BooleanSetting\n                    id='skipTLSVerification'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationTitle'\n                            defaultMessage='Skip TLS Verification:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationDescription'\n                            defaultMessage='When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority.'\n                        />\n                    }\n                    value={this.state.skipTLSVerification}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.SkipTLSVerification')}\n                />\n                <TextSetting\n                    id='username'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameTitle'\n                            defaultMessage='Server Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.usernameExample', 'E.g.: \"elastic\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameDescription'\n                            defaultMessage='(Optional) The username to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.username}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Username')}\n                />\n                <TextSetting\n                    id='password'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordTitle'\n                            defaultMessage='Server Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.password', 'E.g.: \"yourpassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordDescription'\n                            defaultMessage='(Optional) The password to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.password}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Password')}\n                />\n                <BooleanSetting\n                    id='sniff'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffTitle'\n                            defaultMessage='Enable Cluster Sniffing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffDescription'\n                            defaultMessage='When true, sniffing finds and connects to all data nodes in your cluster automatically.'\n                        />\n                    }\n                    value={this.state.sniff}\n                    disabled={!this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Sniff')}\n                />\n                <RequestButton\n                    id='testConfig'\n                    requestAction={this.doTestConfig}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.testHelpText'\n                            defaultMessage='Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. See log file for more detailed error messages.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.elasticsearch_test_button'\n                            defaultMessage='Test Connection'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.testConfigSuccess'),\n                        defaultMessage: 'Test successful. Configuration saved.',\n                    }}\n                    disabled={!this.state.enableIndexing}\n                />\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.elasticsearch.bulkIndexingTitle'\n                            defaultMessage='Bulk Indexing:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='job-table-setting'>\n                            <JobsTable\n                                jobType={JobTypes.ELASTICSEARCH_POST_INDEXING}\n                                disabled={!this.state.canPurgeAndIndex}\n                                createJobButtonText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.title'\n                                        defaultMessage='Index Now'\n                                    />\n                                }\n                                createJobHelpText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.help'\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete.'\n                                    />\n                                }\n                                getExtraInfoText={this.getExtraInfo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RequestButton\n                    id='purgeIndexesSection'\n                    requestAction={elasticsearchPurgeIndexes}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesHelpText'\n                            defaultMessage='Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton'\n                            defaultMessage='Purge Index'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.success'),\n                        defaultMessage: 'Indexes purged successfully.',\n                    }}\n                    errorMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.error'),\n                        defaultMessage: 'Failed to purge indexes: {error}',\n                    }}\n                    disabled={!this.state.canPurgeAndIndex}\n                    label={(\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton.label'\n                            defaultMessage='Purge Indexes:'\n                        />\n                    )}\n                />\n                <BooleanSetting\n                    id='enableSearching'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingTitle'\n                            defaultMessage='Enable Elasticsearch for search queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\n                        />\n                    }\n                    value={this.state.enableSearching}\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableSearching')}\n                />\n                <BooleanSetting\n                    id='enableAutocomplete'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteTitle'\n                            defaultMessage='Enable Elasticsearch for autocomplete queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\n                        />\n                    }\n                    value={this.state.enableAutocomplete}\n                    disabled={!this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableAutocomplete')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./feature_discovery.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport './feature_discovery.scss';\n\ntype Props = {\n    titleID: string;\n    titleDefault: string;\n\n    copyID: string;\n    copyDefault: string;\n\n    primaryURL: string;\n    secondaryURL: string;\n\n    imgPath: string;\n}\n\nconst FeatureDiscovery: React.FC<Props> = (props: Props) => {\n    return (\n        <div className='FeatureDiscovery'>\n\n            <div className='FeatureDiscovery_copyWrapper'>\n                <div\n                    className='FeatureDiscovery_title'\n                    data-testid='featureDiscovery_title'\n                >\n                    <FormattedMessage\n                        id={props.titleID}\n                        defaultMessage={props.titleDefault}\n                    />\n                </div>\n                <div className='FeatureDiscovery_copy'>\n                    <FormattedMessage\n                        id={props.copyID}\n                        defaultMessage={props.copyDefault}\n                    />\n                </div>\n                <a\n                    className='btn'\n                    href={props.primaryURL}\n                    data-testid='featureDiscovery_primaryCallToAction'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <FormattedMessage\n                        id='admin.ldap_feature_discovery.call_to_action.primary'\n                        defaultMessage=''\n                    />\n                </a>\n                <a\n                    className='btn btn-secondary'\n                    href={props.secondaryURL}\n                    data-testid='featureDiscovery_secondaryCallToAction'\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <FormattedMessage\n                        id='admin.ldap_feature_discovery.call_to_action.secondary'\n                        defaultMessage=''\n                    />\n                </a>\n            </div>\n\n            <div className='FeatureDiscovery_imageWrapper'>\n                <img\n                    className='FeatureDiscovery_image'\n                    src={props.imgPath}\n                    alt='Feature Discovery Image'\n                />\n            </div>\n\n        </div>\n    );\n};\n\nexport default FeatureDiscovery;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {t} from 'utils/i18n';\nimport ldap from 'images/feature-discovery/ldap.png';\n\nimport FeatureDiscovery from './feature_discovery';\n\nconst LDAPFeatureDiscovery: React.FC = () => {\n    return (\n        <FeatureDiscovery\n            titleID='admin.ldap_feature_discovery.title'\n            titleDefault='Integrate Active Directory / LDAP with Mattermost Enterprise E10'\n            copyID='admin.ldap_feature_discovery.copy'\n            copyDefault={'When you connect Mattermost with your organization\\'s Active Directory / LDAP, users can log in without having to create new usernames and passwords.'}\n            primaryURL='https://www.mattermost.com/trial/?utm_medium=product&utm_source=product-feature-discovery&utm_content=adldap'\n            secondaryURL='https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=product-feature-discovery&utm_content=adldap'\n            imgPath={ldap}\n        />\n    );\n};\n\nt('admin.ldap_feature_discovery.title');\nt('admin.ldap_feature_discovery.copy');\n\nexport default LDAPFeatureDiscovery;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {t} from 'utils/i18n';\nimport saml from 'images/feature-discovery/saml.png';\n\nimport FeatureDiscovery from './feature_discovery';\n\nconst SAMLFeatureDiscovery: React.FC = () => {\n    return (\n        <FeatureDiscovery\n            titleID='admin.saml_feature_discovery.title'\n            titleDefault='Integrate SAML 2.0 with Mattermost Enterprise E20'\n            copyID='admin.saml_feature_discovery.copy'\n            copyDefault={'When you connect Mattermost with your organization\\'s single sign-on provider, users can access Mattermost without having to re-enter their credentials.'}\n            primaryURL=' https://www.mattermost.com/trial/?utm_medium=product&utm_source=product-feature-discovery&utm_content=saml'\n            secondaryURL='https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=product-feature-discovery&utm_content=saml'\n            imgPath={saml}\n        />\n    );\n};\n\nt('admin.saml_feature_discovery.title');\nt('admin.saml_feature_discovery.copy');\n\nexport default SAMLFeatureDiscovery;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\nexport default class FileUploadSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            uploadingText: PropTypes.node,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            fileType: PropTypes.string.isRequired,\n            error: PropTypes.string,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileName: null,\n            serverError: props.error,\n        };\n    }\n\n    handleChange = () => {\n        const files = this.refs.fileInput.files;\n        if (files && files.length > 0) {\n            this.setState({fileSelected: true, fileName: files[0].name});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        $(this.refs.upload_button).button('loading');\n        this.props.onSubmit(this.props.id, this.refs.fileInput.files[0], (error) => {\n            $(this.refs.upload_button).button('reset');\n            if (error) {\n                Utils.clearFileInput(this.refs.fileInput);\n            }\n        });\n    }\n\n    render() {\n        let serverError;\n        if (this.state.serverError) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.fileName) {\n            fileName = this.state.fileName;\n        } else {\n            fileName = (\n                <FormattedMessage\n                    id='admin.file_upload.noFile'\n                    defaultMessage='No file uploaded'\n                />\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='file__upload'>\n                        <button\n                            className='btn btn-default'\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.file_upload.chooseFile'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            disabled={this.props.disabled}\n                            accept={this.props.fileType}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button\n                        className={btnClass}\n                        disabled={!this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        ref='upload_button'\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.uploadingText}`}\n                    >\n                        <FormattedMessage\n                            id='admin.file_upload.uploadFile'\n                            defaultMessage='Upload'\n                        />\n                    </button>\n                    <div className='help-text m-0'>\n                        {fileName}\n                    </div>\n                    {serverError}\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    placeholder?: string;\n    value: string;\n    onChange: (id: string, s: string) => void;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n    regenerateText: React.ReactNode;\n    regenerateHelpText?: React.ReactNode;\n}\n\nexport default class GeneratedSetting extends React.PureComponent<Props> {\n    public static get defaultProps() {\n        return {\n            disabled: false,\n            regenerateText: (\n                <FormattedMessage\n                    id='admin.regenerate'\n                    defaultMessage='Regenerate'\n                />\n            ),\n        };\n    }\n\n    private regenerate = (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        this.props.onChange(this.props.id, crypto.randomBytes(256).toString('base64').substring(0, 32));\n    }\n\n    public render() {\n        let disabledText = null;\n        if (this.props.disabled && this.props.disabledText) {\n            disabledText = (\n                <div className='admin-console__disabled-text'>\n                    {this.props.disabledText}\n                </div>\n            );\n        }\n\n        let regenerateHelpText = null;\n        if (this.props.regenerateHelpText) {\n            regenerateHelpText = (\n                <div className='help-text'>\n                    {this.props.regenerateHelpText}\n                </div>\n            );\n        }\n\n        let text: React.ReactNode = this.props.value;\n        if (!text) {\n            text = (\n                <span className='placeholder-text'>{this.props.placeholder}</span>\n            );\n        }\n\n        return (\n            <div className='form-group'>\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={this.props.id}\n                >\n                    {this.props.label}\n                </label>\n                <div className='col-sm-8'>\n                    <div\n                        className='form-control disabled'\n                        id={this.props.id}\n                    >\n                        {text}\n                    </div>\n                    {disabledText}\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                    <div className='help-text'>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.regenerate}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        >\n                            {this.props.regenerateText}\n                        </button>\n                    </div>\n                    {regenerateHelpText}\n                    {this.props.setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Groups} from 'mattermost-redux/constants';\n\nimport {t} from 'utils/i18n';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport FormError from 'components/form_error';\nimport {GroupProfileAndSettings} from 'components/admin_console/group_settings/group_details/group_profile_and_settings';\nimport GroupTeamsAndChannels from 'components/admin_console/group_settings/group_details/group_teams_and_channels';\nimport GroupUsers from 'components/admin_console/group_settings/group_details/group_users';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nimport SaveChangesPanel from 'components/admin_console/team_channel_settings/save_changes_panel';\n\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport ChannelSelectorModal from 'components/channel_selector_modal';\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nimport {GroupNameIsTakenError, InvalidOrReservedGroupNameError, NeedGroupNameError} from 'components/admin_console/group_settings/group_details/group_details_errors';\n\nexport default class GroupDetails extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        group: PropTypes.object,\n        groupTeams: PropTypes.arrayOf(PropTypes.object),\n        groupChannels: PropTypes.arrayOf(PropTypes.object),\n        members: PropTypes.arrayOf(PropTypes.object),\n        memberCount: PropTypes.number.isRequired,\n        actions: PropTypes.shape({\n            getGroup: PropTypes.func.isRequired,\n            getMembers: PropTypes.func.isRequired,\n            getGroupSyncables: PropTypes.func.isRequired,\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n            patchGroupSyncable: PropTypes.func.isRequired,\n            patchGroup: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        members: [],\n        groupTeams: [],\n        groupChannels: [],\n        group: {name: '', allow_reference: false},\n        memberCount: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingTeamsAndChannels: true,\n            addTeamOpen: false,\n            addChannelOpen: false,\n            allowReference: Boolean(props.group.allow_reference),\n            groupMentionName: props.group.name,\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            hasAllowReferenceChanged: false,\n            hasGroupMentionNameChanged: false,\n            teamsToAdd: [],\n            channelsToAdd: [],\n            itemsToRemove: [],\n            rolesToChange: {},\n            groupTeams: [],\n            groupChannels: [],\n        };\n    }\n\n    componentDidMount() {\n        const {groupID, actions, group} = this.props;\n        actions.getGroup(groupID);\n\n        Promise.all([\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_TEAM),\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_CHANNEL),\n        ]).then(() => {\n            this.setState({\n                loadingTeamsAndChannels: false,\n                group,\n                allowReference: Boolean(this.props.group.allow_reference),\n                groupMentionName: this.props.group.name,\n            });\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        /* eslint-disable react/no-did-update-set-state */\n        if (this.props.groupTeams !== prevProps.groupTeams) {\n            this.setState({groupTeams: this.props.groupTeams});\n        }\n        if (this.props.groupChannels !== prevProps.groupChannels) {\n            this.setState({groupChannels: this.props.groupChannels});\n        }\n    }\n\n    openAddChannel = () => {\n        this.setState({addChannelOpen: true});\n    }\n\n    closeAddChannel = () => {\n        this.setState({addChannelOpen: false});\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    addTeams = (teams) => {\n        const {groupID} = this.props;\n        const {groupTeams} = this.state;\n        const teamsToAdd = teams.map((team) => ({\n            group_id: groupID,\n            scheme_admin: false,\n            team_display_name: team.display_name,\n            team_id: team.id,\n            team_type: team.type,\n        }));\n        this.setState({\n            saveNeeded: true,\n            groupTeams: groupTeams.concat(teamsToAdd),\n            teamsToAdd,\n        });\n    }\n\n    addChannels = (channels) => {\n        const {groupID} = this.props;\n        const {groupChannels} = this.state;\n        const channelsToAdd = channels.map((channel) => ({\n            channel_display_name: channel.display_name,\n            channel_id: channel.id,\n            channel_type: channel.type,\n            group_id: groupID,\n            scheme_admin: false,\n            team_display_name: channel.team_display_name,\n            team_id: channel.team_id,\n        }));\n        this.setState({\n            saveNeeded: true,\n            groupChannels: groupChannels.concat(channelsToAdd),\n            channelsToAdd,\n        });\n    }\n\n    onRemoveTeamOrChannel = (id, type) => {\n        const {groupTeams, groupChannels, itemsToRemove} = this.state;\n        itemsToRemove.push({id, type});\n        const newState = {saveNeeded: true, itemsToRemove};\n        itemsToRemove.forEach((item) => {\n            if (this.syncableTypeFromEntryType(item.type) === Groups.SYNCABLE_TYPE_TEAM) {\n                newState.groupTeams = groupTeams.filter((gt) => gt.team_id !== item.id);\n            } else {\n                newState.groupChannels = groupChannels.filter((gc) => gc.channel_id !== item.id);\n            }\n        });\n        this.setState(newState);\n    }\n\n    syncableTypeFromEntryType = (entryType) => {\n        switch (entryType) {\n        case 'public-team':\n        case 'private-team':\n            return Groups.SYNCABLE_TYPE_TEAM;\n        case 'public-channel':\n        case 'private-channel':\n            return Groups.SYNCABLE_TYPE_CHANNEL;\n        default:\n            return null;\n        }\n    }\n\n    onChangeRoles = (id, type, schemeAdmin) => {\n        const {rolesToChange, groupTeams, groupChannels} = this.state;\n        let listToUpdate;\n        let keyName;\n        let stateKey;\n\n        const key = `${id}/${type}`;\n        rolesToChange[key] = schemeAdmin;\n\n        if (this.syncableTypeFromEntryType(type) === Groups.SYNCABLE_TYPE_TEAM) {\n            listToUpdate = groupTeams;\n            keyName = 'team_id';\n            stateKey = 'groupTeams';\n        } else {\n            listToUpdate = groupChannels;\n            keyName = 'channel_id';\n            stateKey = 'groupChannels';\n        }\n\n        const updatedItems = listToUpdate.map((item) => ({...item})); // clone list of objects\n        updatedItems.find((item) => item[keyName] === id).scheme_admin = schemeAdmin;\n\n        this.setState({saveNeeded: true, rolesToChange, [stateKey]: updatedItems});\n    }\n\n    onMentionToggle = (allowReference) => {\n        const {group} = this.props;\n        const originalAllowReference = group.allow_reference;\n        const saveNeeded = true;\n        let {groupMentionName} = this.state;\n\n        if (!originalAllowReference && allowReference && !groupMentionName) {\n            groupMentionName = group.display_name.toLowerCase().replace(/\\s/g, '-');\n        }\n\n        this.setState({\n            saveNeeded,\n            allowReference,\n            groupMentionName,\n            hasAllowReferenceChanged: allowReference !== originalAllowReference},\n        );\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    onMentionChange = (e) => {\n        const {group} = this.props;\n        const originalGroupMentionName = group.name;\n        const groupMentionName = e.target.value;\n        const saveNeeded = true;\n\n        this.setState({\n            saveNeeded,\n            groupMentionName,\n            hasGroupMentionNameChanged: groupMentionName !== originalGroupMentionName,\n        });\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    handleSubmit = async () => {\n        this.setState({saving: true});\n        const {allowReference, groupMentionName, hasAllowReferenceChanged, hasGroupMentionNameChanged} = this.state;\n\n        let serverError = null;\n        let nameSuccessful = false;\n\n        if (!groupMentionName) {\n            nameSuccessful = true;\n            serverError = <NeedGroupNameError/>;\n            this.setState({allowReference, serverError});\n        } else if (hasAllowReferenceChanged || hasGroupMentionNameChanged) {\n            serverError = null;\n\n            let lcGroupMentionName;\n            if (allowReference) {\n                lcGroupMentionName = groupMentionName.toLowerCase();\n            }\n\n            const result = await this.props.actions.patchGroup(this.props.groupID, {allow_reference: allowReference, name: lcGroupMentionName});\n            if (result.error) {\n                nameSuccessful = true;\n                if (result.error.server_error_id === 'store.sql_group.unique_constraint') {\n                    serverError = <GroupNameIsTakenError/>;\n                } else if (result.error.server_error_id === 'model.group.name.invalid_chars.app_error') {\n                    serverError = <InvalidOrReservedGroupNameError/>;\n                } else if (result.error.server_error_id === 'api.ldap_groups.existing_reserved_name_error' ||\n                    result.error.server_error_id === 'api.ldap_groups.existing_user_name_error' ||\n                    result.error.server_error_id === 'api.ldap_groups.existing_group_name_error') {\n                    serverError = <GroupNameIsTakenError/>;\n                } else {\n                    serverError = <FormError error={result.error.message}/>;\n                }\n            }\n            this.setState({allowReference, groupMentionName: lcGroupMentionName, serverError});\n        }\n\n        const addsSuccessful = await this.handleAddedTeamsAndChannels();\n        const removesSuccessful = await this.handleRemovedTeamsAndChannels();\n        const rolesSuccessful = await this.handleRolesToUpdate();\n\n        await Promise.all([\n            this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_CHANNEL),\n            this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_TEAM),\n        ]);\n\n        this.setState({saveNeeded: false, saving: false});\n\n        this.props.actions.setNavigationBlocked(!nameSuccessful || !addsSuccessful || !removesSuccessful || !rolesSuccessful);\n    }\n\n    roleChangeKey = (groupTeamOrChannel) => {\n        let fieldKey;\n        if (this.syncableTypeFromEntryType(groupTeamOrChannel.type) === Groups.SYNCABLE_TYPE_TEAM) {\n            fieldKey = 'team_id';\n        } else {\n            fieldKey = 'channel_id';\n        }\n        return `${groupTeamOrChannel[fieldKey]}/${groupTeamOrChannel.type}`;\n    };\n\n    handleRolesToUpdate = async () => {\n        const {rolesToChange} = this.state;\n        const promises = Object.entries(rolesToChange).map(([key, value]) => {\n            const [syncableID, type] = key.split('/');\n            return this.props.actions.patchGroupSyncable(this.props.groupID, syncableID, this.syncableTypeFromEntryType(type), {scheme_admin: value});\n        });\n        const result = await Promise.all(promises);\n        if (result.error) {\n            this.setState({serverError: result.error});\n            return false;\n        }\n        this.setState({rolesToChange: {}});\n        return true;\n    }\n\n    handleAddedTeamsAndChannels = async () => {\n        const {teamsToAdd, channelsToAdd, rolesToChange} = this.state;\n        const promises = [];\n        if (teamsToAdd.length) {\n            teamsToAdd.forEach((groupTeam) => {\n                const roleChangeKey = this.roleChangeKey(groupTeam);\n                groupTeam.scheme_admin = rolesToChange[roleChangeKey];\n                delete rolesToChange[roleChangeKey]; // delete the key because it won't need a patch, it's being handled by the link request.\n                promises.push(this.props.actions.link(this.props.groupID, groupTeam.team_id, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true, scheme_admin: groupTeam.scheme_admin}));\n            });\n        }\n        if (channelsToAdd.length) {\n            channelsToAdd.forEach((groupChannel) => {\n                const roleChangeKey = this.roleChangeKey(groupChannel);\n                groupChannel.scheme_admin = rolesToChange[roleChangeKey];\n                delete rolesToChange[roleChangeKey]; // delete the key because it won't need a patch, it's being handled by the link request.\n                promises.push(this.props.actions.link(this.props.groupID, groupChannel.channel_id, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true, scheme_admin: groupChannel.scheme_admin}));\n            });\n        }\n        const result = await Promise.all(promises);\n        if (result.error) {\n            this.setState({serverError: result.error});\n            return false;\n        }\n        this.setState({teamsToAdd: [], channelsToAdd: []});\n        return true;\n    }\n\n    handleRemovedTeamsAndChannels = async () => {\n        const {itemsToRemove, rolesToChange} = this.state;\n        const promises = [];\n        if (itemsToRemove.length) {\n            itemsToRemove.forEach((item) => {\n                delete rolesToChange[this.roleChangeKey(item)]; // no need to update the roles of group-teams that were unlinked.\n                promises.push(this.props.actions.unlink(this.props.groupID, item.id, this.syncableTypeFromEntryType(item.type)));\n            });\n        }\n        const result = await Promise.all(promises);\n        if (result.error) {\n            this.setState({serverError: result.error});\n            return false;\n        }\n        this.setState({itemsToRemove: []});\n        return true;\n    }\n\n    render = () => {\n        const {group, members, memberCount} = this.props;\n        const {groupTeams, groupChannels} = this.state;\n        const {allowReference, groupMentionName, saving, saveNeeded, serverError} = this.state;\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/groups'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.group_settings.group_detail.group_configuration'\n                            defaultMessage='Group Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_detail.introBanner'\n                                    defaultMessage='Configure default teams and channels and view users belonging to this group.'\n                                />\n                            </div>\n                        </div>\n\n                        <GroupProfileAndSettings\n                            displayname={group.display_name}\n                            mentionname={groupMentionName}\n                            allowReference={allowReference}\n                            onToggle={this.onMentionToggle}\n                            onChange={this.onMentionChange}\n                        />\n\n                        <AdminPanel\n                            id='group_teams_and_channels'\n                            titleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsTitle')}\n                            titleDefault='Team and Channel Membership'\n                            subtitleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsDescription')}\n                            subtitleDefault='Set default teams and channels for group members. Teams added will include default channels, town-square, and off-topic. Adding a channel without setting the team will add the implied team to the listing below.'\n                            button={(\n                                <div className='group-profile-add-menu'>\n                                    <MenuWrapper>\n                                        <button\n                                            id='add_team_or_channel'\n                                            className='btn btn-primary'\n                                        >\n                                            <FormattedMessage\n                                                id='admin.group_settings.group_details.add_team_or_channel'\n                                                defaultMessage='Add Team or Channel'\n                                            />\n                                            <i className={'fa fa-caret-down'}/>\n                                        </button>\n                                        <Menu ariaLabel={localizeMessage('admin.group_settings.group_details.menuAriaLabel', 'Add Team or Channel Menu')}>\n                                            <Menu.ItemAction\n                                                id='add_team'\n                                                onClick={this.openAddTeam}\n                                                text={localizeMessage('admin.group_settings.group_details.add_team', 'Add Team')}\n                                            />\n                                            <Menu.ItemAction\n                                                id='add_channel'\n                                                onClick={this.openAddChannel}\n                                                text={localizeMessage('admin.group_settings.group_details.add_channel', 'Add Channel')}\n                                            />\n                                        </Menu>\n                                    </MenuWrapper>\n                                </div>\n                            )}\n                        >\n                            <GroupTeamsAndChannels\n                                id={this.props.groupID}\n                                teams={groupTeams}\n                                channels={groupChannels}\n                                loading={this.state.loadingTeamsAndChannels}\n                                getGroupSyncables={this.props.actions.getGroupSyncables}\n                                unlink={this.props.actions.unlink}\n                                onChangeRoles={this.onChangeRoles}\n                                onRemoveItem={this.onRemoveTeamOrChannel}\n                            />\n                        </AdminPanel>\n                        {this.state.addTeamOpen &&\n                            <TeamSelectorModal\n                                onModalDismissed={this.closeAddTeam}\n                                onTeamsSelected={this.addTeams}\n                                alreadySelected={this.props.groupTeams.map((team) => team.team_id)}\n                            />\n                        }\n                        {this.state.addChannelOpen &&\n                            <ChannelSelectorModal\n                                onModalDismissed={this.closeAddChannel}\n                                onChannelsSelected={this.addChannels}\n                                alreadySelected={this.props.groupChannels.map((channel) => channel.channel_id)}\n                                groupID={this.props.groupID}\n                            />\n                        }\n\n                        <AdminPanel\n                            id='group_users'\n                            titleId={t('admin.group_settings.group_detail.groupUsersTitle')}\n                            titleDefault='Users'\n                            subtitleId={t('admin.group_settings.group_detail.groupUsersDescription')}\n                            subtitleDefault='Listing of users in Mattermost associated with this group.'\n                        >\n                            <GroupUsers\n                                members={members}\n                                total={memberCount}\n                                groupID={this.props.groupID}\n                                getMembers={this.props.actions.getMembers}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/groups'\n                    saveNeeded={saveNeeded}\n                    onClick={this.handleSubmit}\n                    serverError={serverError}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport FormError from 'components/form_error';\n\nexport const NeedGroupNameError = () => (\n    <FormError\n        iconClassName={'fa-exclamation-triangle'}\n        textClassName={'has-error'}\n        error={(\n            <FormattedMessage\n                id='admin.group_settings.need_groupname'\n                defaultMessage='You must specify a group mention.'\n            />)}\n    />\n);\n\nexport const GroupNameIsTakenError = () => (\n    <FormError\n        iconClassName={'fa-exclamation-triangle'}\n        textClassName={'has-error'}\n        error={(\n            <FormattedMessage\n                id='admin.group_settings.group_detail.duplicateMentionNameError'\n                defaultMessage='Group mention is already taken.'\n            />)}\n    />\n);\n\nexport const InvalidOrReservedGroupNameError = () => (\n    <FormError\n        iconClassName={'fa-exclamation-triangle'}\n        textClassName={'has-error'}\n        error={(\n            <FormattedMessage\n                id='admin.group_settings.group_detail.invalidOrReservedMentionNameError'\n                defaultMessage='Only letters (a-z), numbers(0-9), periods, dashes and underscores are allowed.'\n            />)}\n    />\n);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport MentionsIcon from 'components/widgets/icons/mentions_icon';\n\nexport default class GroupProfile extends React.PureComponent {\n    static propTypes = {\n        name: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        titleDefault: PropTypes.string.isRequired,\n        customID: PropTypes.string,\n        isDisabled: PropTypes.bool.isRequired,\n        showAtMention: PropTypes.bool.isRequired,\n        onChange: PropTypes.func,\n    };\n\n    render = () => {\n        const {name, title, titleDefault, customID, isDisabled, showAtMention, onChange} = this.props;\n\n        return (\n            <div\n                className='group-profile form-horizontal'\n                id={customID}\n            >\n                <div className='group-profile-field form-group mb-0'>\n                    <label className='control-label col-sm-4'>\n                        <FormattedMessage\n                            id={title}\n                            defaultMessage={titleDefault}\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='icon-over-input'>\n                            {showAtMention &&\n                                <MentionsIcon\n                                    className='icon icon__mentions'\n                                    aria-hidden='true'\n                                />\n                            }\n                        </div>\n                        <input\n                            type='text'\n                            className='form-control group-at-mention-input'\n                            value={name}\n                            disabled={isDisabled}\n                            onChange={onChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport GroupProfile from 'components/admin_console/group_settings/group_details/group_profile';\n\nimport {t} from 'utils/i18n';\n\nimport LineSwitch from 'components/admin_console/team_channel_settings/line_switch.jsx';\n\nconst GroupSettingsToggle = ({isDefault, allowReference, onToggle}) => (\n    <LineSwitch\n        id={'allowReferenceSwitch'}\n        disabled={isDefault}\n        toggled={allowReference}\n        last={true}\n        onToggle={() => {\n            if (isDefault) {\n                return;\n            }\n            onToggle(!allowReference);\n        }}\n        singleLine={false}\n        title={(\n            <FormattedMessage\n                id='admin.team_settings.team_details.groupDetailsToggle'\n                defaultMessage='Enable Group Mention (Beta)'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.team_settings.team_details.groupDetailsToggleDescr'\n                defaultMessage='When enabled, this group can be mentioned in other channels and teams. This may result in the group member list being visible to all users.'\n            />\n        )}\n    />);\n\nGroupSettingsToggle.propTypes = {\n    isDefault: PropTypes.bool.isRequired,\n    allowReference: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nexport const GroupProfileAndSettings = ({displayname, mentionname, allowReference, onToggle, onChange}) => (\n    <AdminPanel\n        id='group_profile'\n        titleId={t('admin.group_settings.group_detail.groupProfileTitle')}\n        titleDefault='Group Profile'\n        subtitleId={t('admin.group_settings.group_detail.groupProfileDescription')}\n        subtitleDefault='The name for this group.'\n    >\n        <GroupProfile\n            name={displayname}\n            title={t('admin.group_settings.group_details.group_profile.name')}\n            titleDefault={'Name:'}\n            customID={'groupDisplayName'}\n            isDisabled={true}\n            showAtMention={false}\n        />\n        <div className='group-settings'>\n            <div className='group-settings--body'>\n                <div className='section-separator'><hr className='separator__hr'/></div>\n                <GroupSettingsToggle\n                    isDefault={false}\n                    allowReference={allowReference}\n                    onToggle={onToggle}\n                />\n            </div>\n        </div>\n        {allowReference &&\n            <GroupProfile\n                name={mentionname}\n                title={t('admin.group_settings.group_details.group_mention.name')}\n                titleDefault={'Group Mention:'}\n                customID={'groupMention'}\n                isDisabled={false}\n                showAtMention={true}\n                onChange={onChange}\n            />\n        }\n    </AdminPanel>);\n\nGroupProfileAndSettings.propTypes = {\n    displayname: PropTypes.string.isRequired,\n    mentionname: PropTypes.string,\n    allowReference: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GroupTeamsAndChannelsRow from 'components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx';\n\nexport default class GroupTeamsAndChannels extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        teams: PropTypes.arrayOf(PropTypes.object),\n        channels: PropTypes.arrayOf(PropTypes.object),\n        loading: PropTypes.bool.isRequired,\n        onChangeRoles: PropTypes.func.isRequired,\n        onRemoveItem: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {},\n        };\n    }\n\n    onToggleCollapse = (id) => {\n        const collapsed = {...this.state.collapsed};\n        collapsed[id] = !collapsed[id];\n        this.setState({collapsed});\n    }\n\n    onRemoveItem = (id, type) => {\n        this.props.onRemoveItem(id, type);\n    }\n\n    onChangeRoles = async (id, type, roleToBe) => {\n        this.props.onChangeRoles(id, type, roleToBe);\n    }\n\n    teamsAndChannelsToEntries = (teams, channels) => {\n        const entries = [];\n\n        const existingTeams = new Set();\n        const teamEntries = [];\n        teams.forEach((team) => {\n            existingTeams.add(team.team_id);\n            teamEntries.push({\n                type: team.team_type === 'O' ? 'public-team' : 'private-team',\n                hasChildren: channels.some((channel) => channel.team_id === team.team_id),\n                name: team.team_display_name,\n                collapsed: this.state.collapsed[team.team_id],\n                id: team.team_id,\n                schemeAdmin: team.scheme_admin,\n            });\n        });\n\n        const channelEntriesByTeam = {};\n        channels.forEach((channel) => {\n            channelEntriesByTeam[channel.team_id] = channelEntriesByTeam[channel.team_id] || [];\n            channelEntriesByTeam[channel.team_id].push({\n                type: channel.channel_type === 'O' ? 'public-channel' : 'private-channel',\n                name: channel.channel_display_name,\n                id: channel.channel_id,\n                schemeAdmin: channel.scheme_admin,\n            });\n\n            if (!existingTeams.has(channel.team_id)) {\n                existingTeams.add(channel.team_id);\n                teamEntries.push({\n                    type: channel.team_type === 'O' ? 'public-team' : 'private-team',\n                    hasChildren: true,\n                    name: channel.team_display_name,\n                    collapsed: this.state.collapsed[channel.team_id],\n                    id: channel.team_id,\n                });\n            }\n        });\n        teamEntries.sort((a, b) => ((a.name && b.name) ? a.name.localeCompare(b.name) : 0));\n        teamEntries.forEach((team) => {\n            entries.push(team);\n            if (team.hasChildren && !team.collapsed) {\n                const teamChannels = channelEntriesByTeam[team.id];\n                teamChannels.sort((a, b) => a.name.localeCompare(b.name));\n                entries.push(...teamChannels);\n            }\n        });\n\n        return entries;\n    }\n\n    render = () => {\n        const entries = this.teamsAndChannelsToEntries(this.props.teams, this.props.channels);\n\n        if (this.props.loading) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-loading'>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                </div>\n            );\n        }\n\n        if (entries.length === 0) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-empty'>\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels.no-teams-or-channels-speicified'\n                            defaultMessage='No teams or channels specified yet'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='AdminPanel__content'>\n                <table\n                    id='team_and_channel_membership_table'\n                    className='AdminPanel__table group-teams-and-channels'\n                >\n                    <thead className='group-teams-and-channels--header'>\n                        <tr>\n                            <th width='30%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.name'\n                                    defaultMessage='Name'\n                                />\n                            </th>\n                            <th width='25%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.type'\n                                    defaultMessage='Type'\n                                />\n                            </th>\n                            <th width='25%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.assignedRoles'\n                                    defaultMessage='Assigned Roles'\n                                />\n                            </th>\n                            <th width='20%'/>\n                        </tr>\n                    </thead>\n                    <tbody className='group-teams-and-channels--body'>\n                        {entries.map((entry) => (\n                            <GroupTeamsAndChannelsRow\n                                key={entry.id}\n                                onRemoveItem={this.onRemoveItem}\n                                onChangeRoles={this.onChangeRoles}\n                                onToggleCollapse={this.onToggleCollapse}\n                                {...entry}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {isNil} from 'lodash';\nimport classNames from 'classnames';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\nexport default class GroupTeamsAndChannelsRow extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        hasChildren: PropTypes.bool,\n        collapsed: PropTypes.bool,\n        onRemoveItem: PropTypes.func.isRequired,\n        onToggleCollapse: PropTypes.func.isRequired,\n        onChangeRoles: PropTypes.func.isRequired,\n        schemeAdmin: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmationModal: false,\n        };\n    }\n\n    removeItem = () => {\n        this.props.onRemoveItem(this.props.id, this.props.type);\n        this.setState({showConfirmationModal: false});\n    }\n\n    changeRoles = () => {\n        this.props.onChangeRoles(this.props.id, this.props.type, !this.props.schemeAdmin);\n    }\n\n    toggleCollapse = () => {\n        this.props.onToggleCollapse(this.props.id);\n    }\n\n    displayAssignedRolesDropdown = () => {\n        const {schemeAdmin, name} = this.props;\n        const channelAdmin = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.channelAdmin'\n                defaultMessage='Channel Admin'\n            />\n        );\n        const teamAdmin = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.teamAdmin'\n                defaultMessage='Team Admin'\n            />\n        );\n        const member = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.member'\n                defaultMessage='Member'\n            />\n        );\n        let dropDown = null;\n        if (!isNil(schemeAdmin)) {\n            let currentRole = member;\n            let roleToBe = (this.props.type.includes('team')) ? teamAdmin : channelAdmin;\n            if (schemeAdmin) {\n                currentRole = (this.props.type.includes('team')) ? teamAdmin : channelAdmin;\n                roleToBe = member;\n            }\n            dropDown = (\n                <div >\n                    <MenuWrapper>\n                        <div data-testid={`${name}_current_role`}>\n                            <a>\n                                <span>{currentRole} </span>\n                                <span className='caret'/>\n                            </a>\n                        </div>\n                        <Menu\n                            openLeft={true}\n                            openUp={true}\n                            ariaLabel={localizeMessage('admin.team_channel_settings.group_row.memberRole', 'Member Role')}\n                            id={`${name}_change_role_options`}\n                        >\n                            <Menu.ItemAction\n                                testid={`${name}_role_to_be`}\n                                onClick={this.changeRoles}\n                                text={roleToBe}\n                            />\n                        </Menu>\n                    </MenuWrapper>\n                </div>\n            );\n        }\n\n        return dropDown;\n    }\n\n    render = () => {\n        let extraClasses = '';\n        let arrowIcon = null;\n        if (this.props.hasChildren) {\n            arrowIcon = (\n                <i\n                    className={'fa ' + (this.props.collapsed ? 'fa-caret-right' : 'fa-caret-down')}\n                    onClick={this.toggleCollapse}\n                />\n            );\n            extraClasses += ' has-clidren';\n        }\n\n        if (this.props.collapsed) {\n            extraClasses += ' collapsed';\n        }\n\n        let channelIcon = null;\n        let typeText = null;\n        switch (this.props.type) {\n        case 'public-team':\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.publicTeam'\n                    defaultMessage='Team'\n                />\n            );\n            break;\n        case 'private-team':\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.privateTeam'\n                    defaultMessage='Team (Private)'\n                />\n            );\n            break;\n        }\n\n        switch (this.props.type) {\n        case 'public-channel':\n            channelIcon = (\n                <span className='channel-icon'>\n                    <GlobeIcon className='icon icon__globe'/>\n                </span>\n            );\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.publicChannel'\n                    defaultMessage='Channel'\n                />\n            );\n            break;\n        case 'private-channel':\n            channelIcon = (\n                <span className='channel-icon'>\n                    <LockIcon className='icon icon__lock'/>\n                </span>\n            );\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.privateChannel'\n                    defaultMessage='Channel (Private)'\n                />\n            );\n            break;\n        }\n\n        const displayType = this.props.type.split('-')[1];\n\n        return (\n            <tr className={'group-teams-and-channels-row' + extraClasses}>\n                <ConfirmModal\n                    show={this.state.showConfirmationModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_header'\n                            defaultMessage='Remove Membership from the {name} {displayType}?'\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_body'\n                            defaultMessage='Removing this membership will prevent future users in this group from being added to the {name} {displayType}.'\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_button'\n                            defaultMessage='Yes, Remove'\n                        />\n                    }\n                    onConfirm={this.removeItem}\n                    onCancel={() => this.setState({showConfirmationModal: false})}\n                />\n                <td>\n                    <span className='arrow-icon'>\n                        {arrowIcon}\n                    </span>\n                    {channelIcon}\n                    <span className={classNames({'name-no-arrow': isNil(arrowIcon) && isNil(channelIcon)})}>\n                        {this.props.name}\n                    </span>\n                </td>\n                <td className='type'>\n                    {typeText}\n                </td>\n                <td>\n                    {this.displayAssignedRolesDropdown()}\n                </td>\n                <td className='text-right'>\n                    <button\n                        className='btn btn-link'\n                        onClick={() => this.setState({showConfirmationModal: true})}\n                        data-testid={`${this.props.name}_groupsyncable_remove`}\n                    >\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove'\n                            defaultMessage='Remove'\n                        />\n                    </button>\n                </td>\n            </tr>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GroupUsersRow from 'components/admin_console/group_settings/group_details/group_users_row';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport {getSiteURL} from 'utils/url';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 20;\n\nexport default class GroupUsers extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        members: PropTypes.arrayOf(PropTypes.object),\n        total: PropTypes.number.isRequired,\n        getMembers: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.props.getMembers(this.props.groupID, 0, GROUP_MEMBERS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    previousPage = async () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\n        this.setState({loading: false});\n    }\n\n    nextPage = async () => {\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\n        this.setState({page, loading: true});\n        await this.props.getMembers(this.props.groupID, page, GROUP_MEMBERS_PAGE_SIZE);\n        this.setState({loading: false});\n    }\n\n    renderRows = () => {\n        if (this.props.members.length === 0) {\n            return (\n                <div className='group-users-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.group_details.group_users.no-users-found'\n                        defaultMessage='No users found'\n                    />\n                </div>\n            );\n        }\n        return this.props.members.map((member) => {\n            return (\n                <GroupUsersRow\n                    key={member.id}\n                    username={member.username}\n                    displayName={member.first_name + ' ' + member.last_name}\n                    email={member.email}\n                    userId={member.id}\n                    lastPictureUpdate={member.last_picture_update}\n                />\n            );\n        });\n    }\n\n    renderPagination = () => {\n        if (this.props.members.length === 0) {\n            return (<div className='group-users--footer empty'/>);\n        }\n\n        const startCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n\n        return (\n            <div className='group-users--footer'>\n                <div className='counter'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.paginatorCount'\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                        values={{\n                            startCount,\n                            endCount,\n                            total,\n                        }}\n                    />\n                </div>\n                <button\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                    onClick={this.previousPage}\n                    disabled={firstPage}\n                >\n                    <PreviousIcon/>\n                </button>\n                <button\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                    onClick={this.nextPage}\n                    disabled={lastPage}\n                >\n                    <NextIcon/>\n                </button>\n            </div>\n        );\n    }\n\n    render = () => {\n        return (\n            <div className='group-users'>\n                <div className='group-users--header'>\n                    <FormattedMarkdownMessage\n                        id='admin.group_settings.group_profile.group_users.ldapConnector'\n                        defaultMessage={'AD/LDAP Connector is configured to sync and manage this group and its users. [Click here to view]({siteURL}/admin_console/authentication/ldap)'}\n                        values={{siteURL: getSiteURL()}}\n                    />\n                </div>\n                <div className='group-users--body'>\n                    <div className={'group-users-loading ' + (this.state.loading ? 'active' : '')}>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                    {this.renderRows()}\n                </div>\n                {this.renderPagination()}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport Avatar from 'components/widgets/users/avatar';\n\nexport default class GroupUsersRow extends React.PureComponent {\n    static propTypes = {\n        username: PropTypes.string.isRequired,\n        displayName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        lastPictureUpdate: PropTypes.number.isRequired,\n    };\n\n    render = () => {\n        return (\n            <div className='group-users-row'>\n                <Avatar\n                    username={this.props.username}\n                    url={Client4.getProfilePictureUrl(this.props.userId, this.props.lastPictureUpdate)}\n                    size='lg'\n                />\n                <div className='user-data'>\n                    <div className='name-row'>\n                        <span className='username'>{'@' + this.props.username}</span>\n                        {'-'}\n                        <span className='display-name'>{this.props.displayName}</span>\n                    </div>\n                    <div>\n                        <span className='email-label'>\n                            <FormattedMessage\n                                id='admin.group_settings.group_details.group_users.email'\n                                defaultMessage='Email:'\n                            />\n                        </span>\n                        <span className='email'>{this.props.email}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n    getGroup as fetchGroup,\n    getGroupMembers as fetchMembers,\n    getGroupSyncables as fetchGroupSyncables,\n    patchGroupSyncable,\n    patchGroup,\n} from 'mattermost-redux/actions/groups';\nimport {getGroup, getGroupTeams, getGroupChannels, getGroupMembers, getGroupMemberCount} from 'mattermost-redux/selectors/entities/groups';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport GroupDetails from './group_details.jsx';\n\nfunction mapStateToProps(state, props) {\n    const groupID = props.match.params.group_id;\n    const group = getGroup(state, groupID);\n    const groupTeams = getGroupTeams(state, groupID);\n    const groupChannels = getGroupChannels(state, groupID);\n    const members = getGroupMembers(state, groupID);\n    const memberCount = getGroupMemberCount(state, groupID);\n\n    return {\n        groupID,\n        group,\n        groupTeams,\n        groupChannels,\n        members,\n        memberCount,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            setNavigationBlocked,\n            getGroup: fetchGroup,\n            getMembers: fetchMembers,\n            getGroupSyncables: fetchGroupSyncables,\n            link: linkGroupSyncable,\n            unlink: unlinkGroupSyncable,\n            patchGroupSyncable,\n            patchGroup,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\n\nexport default class GroupRow extends React.PureComponent {\n    static propTypes = {\n        primary_key: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        mattermost_group_id: PropTypes.string,\n        has_syncables: PropTypes.bool,\n        checked: PropTypes.bool,\n        failed: PropTypes.bool,\n        onCheckToggle: PropTypes.func,\n        actions: PropTypes.shape({\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        };\n    }\n\n    onRowClick = () => {\n        this.props.onCheckToggle(this.props.primary_key);\n    }\n\n    linkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        this.setState({loading: true});\n        await this.props.actions.link(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    unlinkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.setState({loading: true});\n        await this.props.actions.unlink(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    renderActions = () => {\n        if (!this.props.mattermost_group_id) {\n            return null;\n        }\n        if (this.props.has_syncables) {\n            return (\n                <Link\n                    to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}\n                    id={`${this.props.name}_edit`}\n                >\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.edit'\n                        defaultMessage='Edit'\n                    />\n                </Link>\n            );\n        }\n        return (\n            <Link\n                to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}\n                id={`${this.props.name}_configure`}\n            >\n                <FormattedMessage\n                    id='admin.group_settings.group_row.configure'\n                    defaultMessage='Configure'\n                />\n            </Link>\n        );\n    }\n\n    renderLinked = () => {\n        if (this.state.loading) {\n            return (\n                <a href='#'>\n                    {this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.unlinking', 'Unlinking')}/>\n                    }\n                    {!this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.linking', 'Linking')}/>\n                    }\n                </a>\n            );\n        }\n        if (this.props.mattermost_group_id) {\n            if (this.props.failed) {\n                return (\n                    <a\n                        href='#'\n                        onClick={this.unlinkHandler}\n                        className='warning'\n                    >\n                        <i className='icon fa fa-exclamation-triangle'/>\n                        <FormattedMessage\n                            id='admin.group_settings.group_row.unlink_failed'\n                            defaultMessage='Unlink failed'\n                        />\n                    </a>\n                );\n            }\n            return (\n                <a\n                    href='#'\n                    onClick={this.unlinkHandler}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.linked'\n                        defaultMessage='Linked'\n                    />\n                </a>\n            );\n        }\n        if (this.props.failed) {\n            return (\n                <a\n                    href='#'\n                    onClick={this.linkHandler}\n                    className='warning'\n                >\n                    <i className='icon fa fa-exclamation-triangle'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.link_failed'\n                        defaultMessage='Link failed'\n                    />\n                </a>\n            );\n        }\n        return (\n            <a\n                href='#'\n                onClick={this.linkHandler}\n            >\n                <i className='icon fa fa-unlink'/>\n                <FormattedMessage\n                    id='admin.group_settings.group_row.not_linked'\n                    defaultMessage='Not Linked'\n                />\n            </a>\n        );\n    }\n\n    render = () => {\n        return (\n            <div\n                id={`${this.props.name}_group`}\n                className={'group ' + (this.props.checked ? 'checked' : '')}\n                onClick={this.onRowClick}\n            >\n                <div className='group-row'>\n                    <div className='group-name'>\n                        <div\n                            className={'group-check ' + (this.props.checked ? 'checked' : '')}\n                        >\n                            {this.props.checked && <CheckboxCheckedIcon/>}\n                        </div>\n                        <span>\n                            {this.props.name}\n                        </span>\n                    </div>\n                    <div className='group-content'>\n                        <span className='group-description'>\n                            {this.renderLinked()}\n                        </span>\n                        <span className='group-actions'>\n                            {this.renderActions()}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport GroupsList from 'components/admin_console/group_settings/groups_list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {getSiteURL} from 'utils/url';\n\nexport default class GroupSettings extends React.PureComponent {\n    render = () => {\n        const siteURL = getSiteURL();\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.group_settings.groupsPageTitle'\n                        defaultMessage='Groups (Beta)'\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <FormattedMarkdownMessage\n                                    id='admin.group_settings.introBanner'\n                                    defaultMessage={'Groups are a way to organize users and apply actions to all users within that group.\\nFor more information on Groups, please see [documentation](!https://www.mattermost.com/default-ad-ldap-groups).'}\n                                />\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            id='ldap_groups'\n                            titleId={t('admin.group_settings.ldapGroupsTitle')}\n                            titleDefault='AD/LDAP Groups'\n                            subtitleId={t('admin.group_settings.ldapGroupsDescription')}\n                            subtitleDefault={`Connect AD/LDAP and create groups in Mattermost. To get started, configure group attributes on the [AD/LDAP] (${siteURL}/admin_console/authentication/ldap) configuration page.`}\n                            subtitleValues={{siteURL}}\n                        >\n                            <GroupsList/>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {GroupSearchOpts} from 'mattermost-redux/types/groups';\n\nimport * as Utils from 'utils/utils';\n\nimport GroupRow from 'components/admin_console/group_settings/group_row';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/search_icon';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon';\nimport {Constants} from 'utils/constants';\n\nconst LDAP_GROUPS_PAGE_SIZE = 200;\n\ntype Props = {\n    groups: any[];\n    total: number;\n    actions: {\n        getLdapGroups: (page?: number, perPage?: number, opts?: GroupSearchOpts) => Promise<any>;\n        link: (key: string) => Promise<any>;\n        unlink: (key: string) => Promise<any>;\n    };\n}\n\ntype FilterOption = {\n    is_configured?: boolean;\n    is_linked?: boolean;\n}\n\ntype FilterConfig = {\n    filter: string;\n    option: FilterOption;\n}\n\ntype FilterSearchMap = {\n    filterIsConfigured: FilterConfig;\n    filterIsUnconfigured: FilterConfig;\n    filterIsLinked: FilterConfig;\n    filterIsUnlinked: FilterConfig;\n}\n\ntype State = {\n    checked?: any;\n    loading: boolean;\n    page: number;\n    showFilters: boolean;\n    searchString: string;\n    filterIsConfigured?: boolean;\n    filterIsUnconfigured?: boolean;\n    filterIsLinked?: boolean;\n    filterIsUnlinked?: boolean;\n}\n\ntype filterUpdates = [string, boolean];\n\nconst FILTER_STATE_SEARCH_KEY_MAPPING: FilterSearchMap = {\n    filterIsConfigured: {filter: 'is:configured', option: {is_configured: true}},\n    filterIsUnconfigured: {filter: 'is:notconfigured', option: {is_configured: false}},\n    filterIsLinked: {filter: 'is:linked', option: {is_linked: true}},\n    filterIsUnlinked: {filter: 'is:notlinked', option: {is_linked: false}},\n};\n\nexport default class GroupsList extends React.PureComponent<Props, State> {\n    public static defaultProps: Partial<Props> = {\n        groups: [],\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            checked: {},\n            loading: true,\n            page: 0,\n            showFilters: false,\n            searchString: '',\n            filterIsConfigured: false,\n            filterIsUnconfigured: false,\n            filterIsLinked: false,\n            filterIsUnlinked: false,\n        };\n    }\n\n    public closeFilters() {\n        this.setState({showFilters: false});\n    }\n\n    public componentDidMount() {\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public async previousPage(e: any): Promise<void> {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    public async nextPage(e: any): Promise<void> {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    public onCheckToggle(key: string) {\n        const newChecked = {...this.state.checked};\n        newChecked[key] = !newChecked[key];\n        this.setState({checked: newChecked});\n    }\n\n    public linkSelectedGroups() {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && !group.mattermost_group_id) {\n                this.props.actions.link(group.primary_key);\n            }\n        }\n    }\n\n    public unlinkSelectedGroups() {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && group.mattermost_group_id) {\n                this.props.actions.unlink(group.primary_key);\n            }\n        }\n    }\n\n    public selectionActionButtonType(): string {\n        let hasSelectedLinked = false;\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key]) {\n                if (!group.mattermost_group_id) {\n                    return 'link';\n                }\n                hasSelectedLinked = true;\n            }\n        }\n        if (hasSelectedLinked) {\n            return 'unlink';\n        }\n\n        return 'disabled';\n    }\n\n    public renderSelectionActionButton(): JSX.Element {\n        switch (this.selectionActionButtonType()) {\n        case 'link':\n            return (\n                <button\n                    className='btn btn-primary'\n                    onClick={() => this.linkSelectedGroups()}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        case 'unlink':\n            return (\n                <button\n                    className='btn btn-primary'\n                    onClick={() => this.unlinkSelectedGroups()}\n                >\n                    <i className='icon fa fa-unlink'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.unlink_selected'\n                        defaultMessage='Unlink Selected Groups'\n                    />\n                </button>\n            );\n        default:\n            return (\n                <button\n                    className='btn btn-inactive disabled'\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        }\n    }\n    renderHeader = () => {\n        if (this.props.groups.length === 0) {\n            return null;\n        }\n        return (\n            <div className='groups-list--header'>\n                <div className='group-name'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.nameHeader'\n                        defaultMessage='Name'\n                    />\n                </div>\n                <div className='group-content'>\n                    <div className='group-description'>\n                        <FormattedMessage\n                            id='admin.group_settings.groups_list.mappingHeader'\n                            defaultMessage='Mattermost Linking'\n                        />\n                    </div>\n                    <div className='group-actions'/>\n                </div>\n            </div>\n        );\n    }\n\n    public renderRows(): JSX.Element | JSX.Element[] {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.groups.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.no_groups_found'\n                        defaultMessage='No groups found'\n                    />\n                </div>\n            );\n        }\n        return this.props.groups.map((item) => {\n            return (\n                <GroupRow\n                    key={item.primary_key}\n                    primary_key={item.primary_key}\n                    name={item.name}\n                    mattermost_group_id={item.mattermost_group_id}\n                    has_syncables={item.has_syncables}\n                    failed={item.failed}\n                    checked={Boolean(this.state.checked[item.primary_key])}\n                    onCheckToggle={(key: string) => this.onCheckToggle(key)}\n                    actions={{\n                        link: this.props.actions.link,\n                        unlink: this.props.actions.unlink,\n                    }}\n                />\n            );\n        });\n    }\n\n    public regex(str: string): RegExp {\n        return new RegExp(`(${str})`, 'i');\n    }\n\n    public searchGroups(page?: number) {\n        let {searchString} = this.state;\n\n        const newState = {...this.state};\n        delete newState.page;\n        delete newState.checked;\n\n        let q = searchString;\n        let opts = {q: ''};\n\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key, value]) => {\n            const re = this.regex(value.filter);\n            if (re.test(searchString)) {\n                (newState as any)[key] = true;\n                q = q.replace(re, '');\n                opts = Object.assign(opts, value.option);\n            } else if ((this.state as any)[key]) {\n                searchString += ' ' + value.filter;\n            }\n        });\n\n        opts.q = q.trim();\n\n        newState.searchString = searchString;\n        newState.showFilters = false;\n        newState.loading = true;\n        newState.showFilters = false;\n        this.setState(newState);\n\n        this.props.actions.getLdapGroups(page, LDAP_GROUPS_PAGE_SIZE, opts).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public handleGroupSearchKeyUp(e: any) {\n        const {key} = e;\n        const {searchString} = this.state;\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            this.setState({page: 0});\n            this.searchGroups();\n        }\n        const newState = {};\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([k, value]) => {\n            if (!this.regex(value.filter).test(searchString)) {\n                (newState as any)[k] = false;\n            }\n        });\n        this.setState(newState);\n    }\n\n    public newSearchString(searchString: string, stateKey: string, checked: boolean): string {\n        let newSearchString = searchString;\n        const {filter} = (FILTER_STATE_SEARCH_KEY_MAPPING as any)[stateKey];\n        const re = this.regex(filter);\n        const stringFilterPresent = re.test(searchString);\n\n        if (stringFilterPresent && !checked) {\n            newSearchString = searchString.replace(re, '').trim();\n        }\n\n        if (!stringFilterPresent && checked) {\n            newSearchString += ' ' + filter;\n        }\n\n        return newSearchString.replace(/\\s{2,}/g, ' ');\n    }\n\n    public handleFilterCheck(updates: filterUpdates[]) {\n        let {searchString} = this.state;\n        updates.forEach((item: filterUpdates) => {\n            searchString = this.newSearchString(searchString, item[0], item[1]);\n            this.setState({[item[0]]: item[1]} as any);\n        });\n        this.setState({searchString});\n    }\n\n    public renderSearchFilters(): JSX.Element {\n        return (\n            <div\n                id='group-filters'\n                className='group-search-filters'\n                onClick={(e) => {\n                    e.nativeEvent.stopImmediatePropagation();\n                }}\n            >\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsLinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsLinked', !this.state.filterIsLinked], ['filterIsUnlinked', false]])}\n                    >\n                        {this.state.filterIsLinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isLinked'\n                            defaultMessage='Is Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnlinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnlinked', !this.state.filterIsUnlinked], ['filterIsLinked', false]])}\n                    >\n                        {this.state.filterIsUnlinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnlinked'\n                            defaultMessage='Is Not Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsConfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsConfigured', !this.state.filterIsConfigured], ['filterIsUnconfigured', false]])}\n                    >\n                        {this.state.filterIsConfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isConfigured'\n                            defaultMessage='Is Configured'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnconfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnconfigured', !this.state.filterIsUnconfigured], ['filterIsConfigured', false]])}\n                    >\n                        {this.state.filterIsUnconfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnconfigured'\n                            defaultMessage='Is Not Configured'\n                        />\n                    </span>\n                </div>\n                <a\n                    onClick={() => {\n                        this.setState({page: 0});\n                        this.searchGroups(0);\n                    }}\n                    className='btn btn-primary search-groups-btn'\n                >\n                    <FormattedMessage\n                        id='search_bar.search'\n                        defaultMessage='Search'\n                    />\n                </a>\n            </div>\n        );\n    }\n\n    resetFiltersAndSearch = () => {\n        const newState: Partial<State> = {\n            showFilters: false,\n            searchString: '',\n            loading: true,\n            page: 0,\n            filterIsConfigured: false,\n            filterIsUnconfigured: false,\n            filterIsLinked: false,\n            filterIsUnlinked: false,\n        };\n        this.setState(newState as any);\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE, {q: ''}).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public render(): JSX.Element {\n        const startCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + LDAP_GROUPS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='groups-list'>\n                <div className='groups-list--global-actions'>\n                    <div className='group-list-search'>\n                        <input\n                            type='text'\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                            onKeyUp={(e: any) => this.handleGroupSearchKeyUp(e)}\n                            onChange={(e) => this.setState({searchString: e.target.value})}\n                            value={this.state.searchString}\n                        />\n                        <SearchIcon\n                            className='search__icon'\n                            aria-hidden='true'\n                        />\n                        <i\n                            className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                            onClick={() => this.resetFiltersAndSearch()}\n                        />\n                        <i\n                            className={'fa fa-caret-down group-filter-action ' + (this.state.showFilters ? 'hidden' : '')}\n                            onClick={() => {\n                                document.addEventListener('click', this.closeFilters, {once: true});\n                                this.setState({showFilters: true});\n                            }}\n                        />\n                    </div>\n                    {this.state.showFilters && this.renderSearchFilters()}\n                    <div className='group-list-link-unlink'>\n                        {this.renderSelectionActionButton()}\n                    </div>\n                </div>\n                {this.renderHeader()}\n                <div\n                    id='groups-list--body'\n                    className='groups-list--body'\n                >\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='groups-list--footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.group_settings.groups_list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={(e: any) => this.previousPage(e)}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={(e: any) => this.nextPage(e)}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {linkLdapGroup, unlinkLdapGroup, getLdapGroups as fetchLdapGroups} from 'mattermost-redux/actions/admin';\nimport {getLdapGroups, getLdapGroupsCount} from 'mattermost-redux/selectors/entities/admin';\n\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport GroupsList from './groups_list';\n\nconst getSortedListOfLdapGroups = createSelector(\n    getLdapGroups,\n    (ldapGroups) => {\n        const groups = Object.values<any>(ldapGroups);\n        groups.sort((a, b) => a.name.localeCompare(b.name));\n        return groups;\n    },\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        groups: getSortedListOfLdapGroups(state),\n        total: getLdapGroupsCount(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, any>({\n            getLdapGroups: fetchLdapGroups,\n            link: linkLdapGroup,\n            unlink: unlinkLdapGroup,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport Mark from 'mark.js';\nimport debounce from 'lodash/debounce';\n\ntype Props = {\n    filter: string;\n    children: React.ReactNode;\n}\n\nexport default class Highlight extends React.PureComponent<Props> {\n    private markInstance? : Mark;\n    private ref: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef<HTMLDivElement>();\n    }\n\n    private redrawHighlight = debounce(() => {\n        if (this.markInstance) {\n            this.markInstance.unmark();\n        }\n\n        if (!this.props.filter) {\n            return;\n        }\n\n        if (!this.ref.current) {\n            return;\n        }\n\n        // Is necesary to recreate the instances to get again the DOM elements after the re-render\n        this.markInstance = new Mark(this.ref.current);\n        this.markInstance.mark(this.props.filter, {accuracy: 'complementary'});\n    }, 100, {leading: true, trailing: true});\n\n    public render() {\n        // Run on next frame\n        setTimeout(this.redrawHighlight, 0);\n        return (\n            <div ref={this.ref}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {getConfig, getEnvironmentConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {withRouter} from 'react-router-dom';\nimport {getConfig as getGeneralConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {selectChannel} from 'mattermost-redux/actions/channels';\nimport {selectTeam} from 'mattermost-redux/actions/teams';\nimport {isCurrentUserSystemAdmin, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {General} from 'mattermost-redux/constants';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\nimport {getAdminDefinition} from 'selectors/admin_console';\n\nimport LocalStorageStore from 'stores/local_storage_store';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminConsole from './admin_console';\n\nfunction mapStateToProps(state: GlobalState) {\n    const generalConfig = getGeneralConfig(state);\n    const buildEnterpriseReady = generalConfig.BuildEnterpriseReady === 'true';\n    const adminDefinition = getAdminDefinition(state);\n    const teamId = LocalStorageStore.getPreviousTeamId(getCurrentUserId(state));\n    const team = getTeam(state, teamId || '');\n    const unauthorizedRoute = team ? `/${team.name}/channels/${General.DEFAULT_CHANNEL}` : '/';\n\n    return {\n        config: Selectors.getConfig(state),\n        environmentConfig: Selectors.getEnvironmentConfig(state),\n        license: getLicense(state),\n        buildEnterpriseReady,\n        unauthorizedRoute,\n        navigationBlocked: getNavigationBlocked(state),\n        showNavigationPrompt: showNavigationPrompt(state),\n        isCurrentUserSystemAdmin: isCurrentUserSystemAdmin(state),\n        roles: getRoles(state),\n        adminDefinition,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getConfig,\n            getEnvironmentConfig,\n            updateConfig,\n            setNavigationBlocked,\n            deferNavigation,\n            cancelNavigation,\n            confirmNavigation,\n            loadRolesIfNeeded,\n            editRole,\n            selectChannel,\n            selectTeam,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminConsole));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getJobsByType, createJob, cancelJob} from 'mattermost-redux/actions/jobs';\nimport * as Selectors from 'mattermost-redux/selectors/entities/jobs';\n\nimport Table from './table.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        jobs: Selectors.makeGetJobsByType(ownProps.jobType)(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getJobsByType,\n            createJob,\n            cancelJob,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage, FormattedTime, injectIntl} from 'react-intl';\n\nimport {JobStatuses} from 'utils/constants';\nimport {intlShape} from 'utils/react_intl';\nimport * as Utils from 'utils/utils.jsx';\n\nclass JobTable extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Used for formatting dates\n         */\n        intl: intlShape.isRequired,\n\n        /**\n         * Array of jobs\n         */\n        jobs: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * Function called when displaying extra text.\n         */\n        getExtraInfoText: PropTypes.func,\n\n        /**\n         * Grey buttons out when disabled\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * Help text under the create job button\n         */\n        createJobHelpText: PropTypes.element.isRequired,\n\n        /**\n         * Button text to create a new job\n         */\n        createJobButtonText: PropTypes.element.isRequired,\n\n        /**\n         * The type of jobs to include in this table.\n         */\n        jobType: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n            getJobsByType: PropTypes.func.isRequired,\n            cancelJob: PropTypes.func.isRequired,\n            createJob: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.interval = null;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => this.setState({loading: false}),\n        );\n\n        this.interval = setInterval(this.reload, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    getStatus = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        if (job.status === JobStatuses.PENDING) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusPending'\n                        defaultMessage='Pending'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusInProgress'\n                        defaultMessage='In Progress'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.SUCCESS) {\n            return (\n                <span\n                    className='status-icon-success'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusSuccess'\n                        defaultMessage='Success'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.WARNING) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusWarning'\n                        defaultMessage='Warning'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.ERROR) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusError'\n                        defaultMessage='Error'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceling'\n                        defaultMessage='Canceling...'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCELED) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceled'\n                        defaultMessage='Canceled'\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <span title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}>{job.status}</span>\n        );\n    }\n\n    getExtraInfoText = (job) => {\n        if (job.data && job.data.error && job.data.error.length > 0) {\n            return <span title={job.data.error}>{job.data.error}</span>;\n        }\n\n        if (this.props.getExtraInfoText) {\n            return this.props.getExtraInfoText(job);\n        }\n\n        return <span/>;\n    }\n\n    getRunLength = (job) => {\n        let millis = job.last_activity_at - job.start_at;\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            const runningMillis = Date.now() - job.start_at;\n            if (runningMillis > millis) {\n                millis = runningMillis;\n            }\n        }\n\n        let lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') + '--';\n\n        if (job.last_activity_at > 0) {\n            lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') +\n                this.props.intl.formatDate(new Date(job.last_activity_at), {\n                    year: 'numeric',\n                    month: 'short',\n                    day: '2-digit',\n                }) + ' - ' +\n                this.props.intl.formatTime(new Date(job.last_activity_at), {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                });\n        }\n\n        var seconds = Math.round(millis / 1000);\n        var minutes = Math.round(millis / (1000 * 60));\n\n        if (millis <= 0 || job.status === JobStatuses.CANCELED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        if (seconds <= 120) {\n            return (\n                <span\n                    className='whitespace--nowrap'\n                    title={lastActivity}\n                >\n                    {seconds + Utils.localizeMessage('admin.jobTable.runLengthSeconds', ' seconds')}\n                </span>\n            );\n        }\n\n        return (\n            <span\n                className='whitespace--nowrap'\n                title={lastActivity}\n            >\n                {minutes + Utils.localizeMessage('admin.jobTable.runLengthMinutes', ' minutes')}\n            </span>\n        );\n    }\n\n    getFinishAt = (status, millis) => {\n        if (millis === 0 || status === JobStatuses.PENDING || status === JobStatuses.IN_PROGRESS || status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        const date = new Date(millis);\n\n        return (\n            <span className='whitespace--nowrap'>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    reload = () => {\n        this.setState({loading: true});\n\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => {\n                this.setState({\n                    loading: false,\n                });\n            },\n        );\n    };\n\n    handleCancelJob = async (e) => {\n        e.preventDefault();\n        const jobId = e.currentTarget.getAttribute('data-job-id');\n        await this.props.actions.cancelJob(jobId);\n        this.reload();\n    };\n\n    handleCreateJob = async (e) => {\n        e.preventDefault();\n        const job = {\n            type: this.props.jobType,\n        };\n\n        await this.props.actions.createJob(job);\n        this.reload();\n    };\n\n    getCancelButton = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        let cancelButton = null;\n\n        if (!this.props.disabled && (job.status === JobStatuses.PENDING || job.status === JobStatuses.IN_PROGRESS)) {\n            cancelButton = (\n                <span\n                    data-job-id={job.id}\n                    onClick={this.handleCancelJob}\n                    className='job-table__cancel-button'\n                    title={formatMessage({id: 'admin.jobTable.cancelButton', defaultMessage: 'Cancel'})}\n                >\n                    {'×'}\n                </span>\n            );\n        }\n\n        return cancelButton;\n    }\n\n    render() {\n        var items = this.props.jobs.map((job) => {\n            return (\n                <tr key={job.id}>\n                    <td\n                        width='30px'\n                        className='whitespace--nowrap text-center'\n                    >\n                        {this.getCancelButton(job)}\n                    </td>\n                    <td className='whitespace--nowrap'>{this.getStatus(job)}</td>\n                    <td className='whitespace--nowrap'>{this.getFinishAt(job.status, job.last_activity_at)}</td>\n                    <td className='whitespace--nowrap'>{this.getRunLength(job)}</td>\n                    <td>{this.getExtraInfoText(job)}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div className='job-table__panel'>\n                <div className='job-table__create-button'>\n                    <div>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.handleCreateJob}\n                            disabled={this.props.disabled}\n                        >\n                            {this.props.createJobButtonText}\n                        </button>\n                    </div>\n                    <div className='help-text'>\n                        {this.props.createJobHelpText}\n                    </div>\n                </div>\n                <div className='job-table__table'>\n                    <table\n                        className='table'\n                        data-testid='jobTable'\n                    >\n                        <thead>\n                            <tr>\n                                <th width='30px'/>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerStatus'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerFinishAt'\n                                        defaultMessage='Finish Time'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerRunTime'\n                                        defaultMessage='Run Time'\n                                    />\n                                </th>\n                                <th colSpan='3'>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerExtraInfo'\n                                        defaultMessage='Details'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(JobTable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getLicenseConfig} from 'mattermost-redux/actions/general';\nimport {uploadLicense, removeLicense} from 'mattermost-redux/actions/admin';\n\nimport LicenseSettings from './license_settings.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLicenseConfig,\n            uploadLicense,\n            removeLicense,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(LicenseSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedTime, FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nexport default class LicenseSettings extends React.PureComponent {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        actions: PropTypes.shape({\n            getLicenseConfig: PropTypes.func.isRequired,\n            uploadLicense: PropTypes.func.isRequired,\n            removeLicense: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileSelected: false,\n            fileName: null,\n            serverError: null,\n            removing: false,\n            uploading: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getLicenseConfig();\n    }\n\n    handleChange = () => {\n        const element = this.refs.fileInput;\n        if (element && element.files.length > 0) {\n            this.setState({fileSelected: true, fileName: element.files[0].name});\n        }\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const element = this.refs.fileInput;\n        if (!element || element.files.length === 0) {\n            return;\n        }\n        const file = element.files[0];\n\n        this.setState({uploading: true});\n\n        const {error} = await this.props.actions.uploadLicense(file);\n        if (error) {\n            Utils.clearFileInput(element[0]);\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, uploading: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, uploading: false});\n    }\n\n    handleRemove = async (e) => {\n        e.preventDefault();\n\n        this.setState({removing: true});\n\n        const {error} = await this.props.actions.removeLicense();\n        if (error) {\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, removing: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, removing: false});\n    }\n\n    render() {\n        let serverError = '';\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n\n        var btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        const {license} = this.props;\n        const {uploading} = this.state;\n\n        let edition;\n        let licenseType;\n        let licenseKey;\n\n        const issued = (\n            <React.Fragment>\n                <FormattedDate value={new Date(parseInt(license.IssuedAt, 10))}/>\n                {' '}\n                <FormattedTime value={new Date(parseInt(license.IssuedAt, 10))}/>\n            </React.Fragment>\n        );\n        const startsAt = <FormattedDate value={new Date(parseInt(license.StartsAt, 10))}/>;\n        const expiresAt = <FormattedDate value={new Date(parseInt(license.ExpiresAt, 10))}/>;\n\n        if (license.IsLicensed === 'true' && !uploading) {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            const sku = license.SkuShortName ? <React.Fragment>{`Edition: Mattermost Enterprise Edition ${license.SkuShortName}`}<br/></React.Fragment> : null;\n            edition = 'Mattermost Enterprise Edition. Enterprise features on this server have been unlocked with a license key and a valid subscription.';\n            licenseType = (\n                <div>\n                    <p>\n                        {'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.\\n\\nYour subscription details are as follows:'}\n                    </p>\n                    {`Name: ${license.Name}`}<br/>\n                    {`Company or organization name: ${license.Company}`}<br/>\n                    {sku}\n                    {`Number of users: ${license.Users}`}<br/>\n                    {'License issued: '}{issued}<br/>\n                    {'Start date of license: '}{startsAt}<br/>\n                    {'Expiry date of license: '}{expiresAt}<br/>\n                    <br/>\n                    {'See also '}\n                    <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/enterprise-edition-terms/'\n                    >{'Enterprise Edition Terms of Service'}</a>{' and '}\n                    <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/default-privacy-policy/'\n                    >{'Privacy Policy.'}</a>\n                </div>\n            );\n\n            let removeButtonText = (\n                <FormattedMessage\n                    id='admin.license.keyRemove'\n                    defaultMessage='Remove Enterprise License and Downgrade Server'\n                />\n            );\n            if (this.state.removing) {\n                removeButtonText = (\n                    <FormattedMessage\n                        id='admin.license.removing'\n                        defaultMessage='Removing License...'\n                    />\n                );\n            }\n\n            licenseKey = (\n                <div className='col-sm-8'>\n                    <button\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        id='remove-button'\n                    >\n                        {removeButtonText}\n                    </button>\n                    <br/>\n                    <br/>\n                    <p className='help-text'>\n                        {'If you migrate servers you may need to remove your license key to install it elsewhere. You can remove the key here, which will revert functionality to that of Team Edition.'}\n                    </p>\n                </div>\n            );\n        } else {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            edition = (\n                <p>\n                    {'Mattermost Enterprise Edition. A license is required to unlock enterprise features. Start a trial subscription at '}\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='https://mattermost.com/trial/?utm_medium=product&utm_source=product-trial'\n                    >\n                        {'https://mattermost.com/trial/'}\n                    </a>\n                </p>\n            );\n\n            licenseType = 'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.';\n\n            let fileName;\n            if (this.state.fileName) {\n                fileName = this.state.fileName;\n            } else {\n                fileName = (\n                    <FormattedMessage\n                        id='admin.license.noFile'\n                        defaultMessage='No file uploaded'\n                    />\n                );\n            }\n\n            let uploadButtonText = (\n                <FormattedMessage\n                    id='admin.license.upload'\n                    defaultMessage='Upload'\n                />\n            );\n            if (uploading) {\n                uploadButtonText = (\n                    <FormattedMessage\n                        id='admin.license.uploading'\n                        defaultMessage='Uploading License...'\n                    />\n                );\n            }\n\n            licenseKey = (\n                <div className='col-sm-8'>\n                    <div className='file__upload'>\n                        <button className='btn btn-primary'>\n                            <FormattedMessage\n                                id='admin.license.choose'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref='fileInput'\n                            type='file'\n                            accept='.mattermost-license'\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button\n                        className={btnClass}\n                        disabled={!this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        id='upload-button'\n                    >\n                        {uploadButtonText}\n                    </button>\n                    <div className='help-text m-0'>\n                        {fileName}\n                    </div>\n                    <br/>\n                    {serverError}\n                    <p className='help-text m-0'>\n                        <FormattedMarkdownMessage\n                            id='admin.license.uploadDesc'\n                            defaultMessage='Upload a license key for Mattermost Enterprise Edition to upgrade this server. [Visit us online](!http://mattermost.com) to learn more about the benefits of Enterprise Edition or to purchase a key.'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.license.title'\n                    defaultMessage='Edition and License'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                        >\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.edition'\n                                        defaultMessage='Edition: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {edition}\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.type'\n                                        defaultMessage='License: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {licenseType}\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.key'\n                                        defaultMessage='License Key: '\n                                    />\n                                </label>\n                                {licenseKey}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {updateUserRoles} from 'mattermost-redux/actions/users';\n\nimport ManageRolesModal from './manage_roles_modal';\n\nfunction mapStateToProps(state: any) {\n    return {\n        userAccessTokensEnabled: state.entities.admin.config.ServiceSettings.EnableUserAccessTokens,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n    return {\n        actions: bindActionCreators({\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageRolesModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {General} from 'mattermost-redux/constants';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport Avatar from 'components/widgets/users/avatar';\ntype Props = {\n    show: boolean;\n    user?: any;\n    userAccessTokensEnabled: boolean;\n\n    // defining custom function type instead of using React.MouseEventHandler\n    // to make the event optional\n    onModalDismissed: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    actions: { updateUserRoles: Function };\n}\n\ntype State = {\n    user: any;\n    error: any | null;\n    hasPostAllRole: boolean;\n    hasPostAllPublicRole: boolean;\n    hasUserAccessTokenRole: boolean;\n    isSystemAdmin: boolean;\n}\n\nfunction getStateFromProps(props: Props): State {\n    const roles = props.user && props.user.roles ? props.user.roles : '';\n\n    return {\n        user: props.user,\n        error: null,\n        hasPostAllRole: UserUtils.hasPostAllRole(roles),\n        hasPostAllPublicRole: UserUtils.hasPostAllPublicRole(roles),\n        hasUserAccessTokenRole: UserUtils.hasUserAccessTokenRole(roles),\n        isSystemAdmin: UserUtils.isSystemAdmin(roles),\n    };\n}\n\nexport default class ManageRolesModal extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = getStateFromProps(props);\n    }\n\n    static getDerivedStateFromProps(nextProps: Props, prevState: Props) {\n        const prevUser = prevState.user || {};\n        const user = nextProps.user || {};\n\n        if (prevUser.id !== user.id) {\n            return getStateFromProps(nextProps);\n        }\n        return null;\n    }\n\n    handleError = (error: any) => {\n        this.setState({\n            error,\n        });\n    }\n\n    handleSystemAdminChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.name === 'systemadmin') {\n            this.setState({isSystemAdmin: true});\n        } else if (e.target.name === 'systemmember') {\n            this.setState({isSystemAdmin: false});\n        }\n    };\n\n    handleUserAccessTokenChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasUserAccessTokenRole: e.target.checked,\n        });\n    };\n\n    handlePostAllChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasPostAllRole: e.target.checked,\n        });\n    };\n\n    handlePostAllPublicChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasPostAllPublicRole: e.target.checked,\n        });\n    };\n\n    trackRoleChanges = (roles: string, oldRoles: string) => {\n        if (UserUtils.hasUserAccessTokenRole(roles) && !UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        } else if (!UserUtils.hasUserAccessTokenRole(roles) && UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        }\n\n        if (UserUtils.hasPostAllRole(roles) && !UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        } else if (!UserUtils.hasPostAllRole(roles) && UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        }\n\n        if (UserUtils.hasPostAllPublicRole(roles) && !UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        } else if (!UserUtils.hasPostAllPublicRole(roles) && UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        }\n    }\n\n    handleSave = async () => {\n        this.setState({error: null});\n\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.isSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.hasUserAccessTokenRole) {\n            roles += ' ' + General.SYSTEM_USER_ACCESS_TOKEN_ROLE;\n            if (this.state.hasPostAllRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n            } else if (this.state.hasPostAllPublicRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n            }\n        }\n\n        const {data} = await this.props.actions.updateUserRoles(this.props.user.id, roles);\n\n        this.trackRoleChanges(roles, this.props.user.roles);\n\n        if (data) {\n            this.props.onModalDismissed();\n        } else {\n            this.handleError(\n                <FormattedMessage\n                    id='admin.manage_roles.saveError'\n                    defaultMessage='Unable to save roles.'\n                />,\n            );\n        }\n    }\n\n    renderContents = () => {\n        const {user} = this.props;\n\n        if (user == null) {\n            return <div/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let additionalRoles;\n        if (this.state.hasUserAccessTokenRole || this.state.isSystemAdmin || user.is_bot) {\n            additionalRoles = (\n                <div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='admin.manage_roles.additionalRoles'\n                            defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\n                        />\n                    </p>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postall'\n                                checked={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.isSystemAdmin}\n                                onChange={this.handlePostAllChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllRoleTitle'\n                                    defaultMessage='post:all'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllRole'\n                                defaultMessage='Access to post to all Mattermost channels including direct messages.'\n                            />\n                        </label>\n                    </div>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postallpublic'\n                                checked={this.state.hasPostAllPublicRole || this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                onChange={this.handlePostAllPublicChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllPublicRoleTitle'\n                                    defaultMessage='post:channels'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllPublicRole'\n                                defaultMessage='Access to post to all Mattermost public channels.'\n                            />\n                        </label>\n                    </div>\n                </div>\n            );\n        }\n\n        let userAccessTokenContent;\n        if (this.props.userAccessTokensEnabled) {\n            if (user.is_bot) {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='member-row--padded member-row-lone-padding'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            } else {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='checkbox'>\n                            <label>\n                                <input\n                                    type='checkbox'\n                                    ref='postall'\n                                    checked={this.state.hasUserAccessTokenRole || this.state.isSystemAdmin}\n                                    disabled={this.state.isSystemAdmin}\n                                    onChange={this.handleUserAccessTokenChange}\n                                />\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.allowUserAccessTokens'\n                                    defaultMessage='Allow this account to generate [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                                />\n                                <span className='d-block pt-2 pb-2 light'>\n                                    <FormattedHTMLMessage\n                                        id='admin.manage_roles.allowUserAccessTokensDesc'\n                                        defaultMessage=\"Removing this permission doesn't delete existing tokens. To delete them, go to the user's Manage Tokens menu.\"\n                                    />\n                                </span>\n                            </label>\n                        </div>\n                        <div className='member-row--padded'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        let email = user.email;\n        if (user.is_bot) {\n            email = '';\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        size='lg'\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                            <BotBadge\n                                show={Boolean(user.is_bot)}\n                                className='badge-admin'\n                            />\n                        </div>\n                        <div className='manage-teams__email'>\n                            {email}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className='manage-row--inner'>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemadmin'\n                                    type='radio'\n                                    checked={this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemAdmin'\n                                    defaultMessage='System Admin'\n                                />\n                            </label>\n                        </div>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemmember'\n                                    type='radio'\n                                    checked={!this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemMember'\n                                    defaultMessage='Member'\n                                />\n                            </label>\n                        </div>\n                    </div>\n                    {userAccessTokenContent}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageRolesModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageRolesModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.manageRolesTitle'\n                            defaultMessage='Manage Roles'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-link'\n                        onClick={this.props.onModalDismissed}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleSave}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateTeamMemberSchemeRoles, getTeamMembersForUser, getTeamsForUser, removeUserFromTeam} from 'mattermost-redux/actions/teams';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport ManageTeamsModal from './manage_teams_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeamMembersForUser,\n            getTeamsForUser,\n            updateTeamMemberSchemeRoles,\n            removeUserFromTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeamsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ManageTeamsDropdown extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        teamMember: PropTypes.object.isRequired,\n        onError: PropTypes.func.isRequired,\n        onMemberChange: PropTypes.func.isRequired,\n        updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    makeTeamAdmin = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, true);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    makeMember = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    removeFromTeam = () => {\n        this.props.handleRemoveUserFromTeam(this.props.teamMember.team_id);\n    }\n\n    render() {\n        const isTeamAdmin = Utils.isAdmin(this.props.teamMember.roles) || this.props.teamMember.scheme_admin;\n        const isSysAdmin = Utils.isSystemAdmin(this.props.user.roles);\n        const isGuest = Utils.isGuest(this.props.user);\n\n        const {team} = this.props;\n        let title;\n        if (isSysAdmin) {\n            title = Utils.localizeMessage('admin.user_item.sysAdmin', 'System Admin');\n        } else if (isTeamAdmin) {\n            title = Utils.localizeMessage('admin.user_item.teamAdmin', 'Team Admin');\n        } else if (isGuest) {\n            title = Utils.localizeMessage('admin.user_item.guest', 'Guest');\n        } else {\n            title = Utils.localizeMessage('admin.user_item.teamMember', 'Team Member');\n        }\n\n        return (\n            <MenuWrapper>\n                <a>\n                    <span>{title} </span>\n                    <span className='caret'/>\n                </a>\n                <Menu\n                    openLeft={true}\n                    ariaLabel={Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member')}\n                >\n                    <Menu.ItemAction\n                        show={!isTeamAdmin && !isGuest}\n                        onClick={this.makeTeamAdmin}\n                        text={Utils.localizeMessage('admin.user_item.makeTeamAdmin', 'Make Team Admin')}\n                    />\n                    <Menu.ItemAction\n                        show={isTeamAdmin}\n                        onClick={this.makeMember}\n                        text={Utils.localizeMessage('admin.user_item.makeMember', 'Make Team Member')}\n                    />\n                    <Menu.ItemAction\n                        show={!team.group_constrained}\n                        onClick={this.removeFromTeam}\n                        text={Utils.localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport ManageTeamsDropdown from './manage_teams_dropdown.jsx';\nimport RemoveFromTeamButton from './remove_from_team_button.jsx';\n\nexport default class ManageTeamsModal extends React.PureComponent {\n    static propTypes = {\n        locale: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func.isRequired,\n        show: PropTypes.bool.isRequired,\n        user: PropTypes.object,\n        actions: PropTypes.shape({\n            getTeamMembersForUser: PropTypes.func.isRequired,\n            getTeamsForUser: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            teams: null,\n            teamMembers: null,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.user) {\n            this.loadTeamsAndTeamMembers();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const userId = this.props.user ? this.props.user.id : '';\n        const nextUserId = nextProps.user ? nextProps.user.id : '';\n\n        if (userId !== nextUserId) {\n            this.setState({\n                teams: null,\n                teamMembers: null,\n            });\n\n            if (nextProps.user) {\n                this.loadTeamsAndTeamMembers(nextProps.user);\n            }\n        }\n    }\n\n    loadTeamsAndTeamMembers = async (user = this.props.user) => {\n        this.getTeamMembers(user.id);\n        const {data} = await this.props.actions.getTeamsForUser(user.id);\n        this.setState({\n            teams: filterAndSortTeamsByDisplayName(data, this.props.locale),\n        });\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    getTeamMembers = async (userId = this.props.user.id) => {\n        const {data} = await this.props.actions.getTeamMembersForUser(userId);\n        if (data) {\n            this.setState({\n                teamMembers: data,\n            });\n        }\n    }\n\n    handleMemberRemove = (teamId) => {\n        this.setState({\n            teams: this.state.teams.filter((team) => team.id !== teamId),\n            teamMembers: this.state.teamMembers.filter((teamMember) => teamMember.team_id !== teamId),\n        });\n    }\n\n    handleRemoveUserFromTeam = async (teamId) => {\n        const {actions, user} = this.props;\n\n        const {data, error} = await actions.removeUserFromTeam(teamId, user.id);\n        if (data) {\n            this.handleMemberRemove(teamId);\n        } else if (error) {\n            this.handleError(error.message);\n        }\n    }\n\n    handleMemberChange = () => {\n        this.getTeamMembers(this.props.user.id);\n    };\n\n    renderContents = () => {\n        const {user} = this.props;\n        const {teams, teamMembers} = this.state;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        const isSystemAdmin = Utils.isAdmin(user.roles);\n\n        let name = Utils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let teamList;\n        if (teams && teamMembers) {\n            teamList = teams.map((team) => {\n                const teamMember = teamMembers.find((member) => member.team_id === team.id);\n                if (!teamMember) {\n                    return null;\n                }\n\n                let action;\n                if (isSystemAdmin) {\n                    action = (\n                        <RemoveFromTeamButton\n                            teamId={team.id}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                } else {\n                    action = (\n                        <ManageTeamsDropdown\n                            user={user}\n                            team={team}\n                            teamMember={teamMember}\n                            onError={this.handleError}\n                            onMemberChange={this.handleMemberChange}\n                            updateTeamMemberSchemeRoles={this.props.actions.updateTeamMemberSchemeRoles}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                }\n\n                return (\n                    <div\n                        key={team.id}\n                        className='manage-teams__team'\n                    >\n                        <div className='manage-teams__team-name'>\n                            {team.display_name}\n                        </div>\n                        <div className='manage-teams__team-actions'>\n                            {action}\n                        </div>\n                    </div>\n                );\n            });\n        } else {\n            teamList = <LoadingScreen/>;\n        }\n\n        let systemAdminIndicator = null;\n        if (isSystemAdmin) {\n            systemAdminIndicator = (\n                <div className='manage-teams__system-admin'>\n                    <FormattedMessage\n                        id='admin.user_item.sysAdmin'\n                        defaultMessage='System Admin'\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                    {systemAdminIndicator}\n                </div>\n                <div className='manage-teams__teams'>\n                    {teamList}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams modal--overflow-visible'\n                role='dialog'\n                aria-labelledby='manageTeamsModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTeamsModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.user_item.manageTeams'\n                            defaultMessage='Manage Teams'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class RemoveFromTeamButton extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.handleRemoveUserFromTeam(this.props.teamId);\n    }\n\n    render() {\n        return (\n            <button\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='team_members_dropdown.leave_team'\n                    defaultMessage='Remove from Team'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getUserAccessTokensForUser} from 'mattermost-redux/actions/users';\n\nimport ManageTokensModal from './manage_tokens_modal.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const userId = ownProps.user ? ownProps.user.id : '';\n\n    return {\n        userAccessTokens: state.entities.admin.userAccessTokensByUser[userId],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUserAccessTokensForUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTokensModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport RevokeTokenButton from 'components/admin_console/revoke_token_button';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class ManageTokensModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set to render the modal\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * The user the roles are being managed for\n         */\n        user: PropTypes.object,\n\n        /**\n         * The personal access tokens for a user, object with token ids as keys\n         */\n        userAccessTokens: PropTypes.object,\n\n        /**\n         * Function called when modal is dismissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Function to get a user's access tokens\n             */\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {error: null};\n    }\n\n    componentDidUpdate(prevProps) {\n        const userId = this.props.user ? this.props.user.id : null;\n        const prevUserId = prevProps.user ? prevProps.user.id : null;\n        if (userId && prevUserId !== userId) {\n            this.props.actions.getUserAccessTokensForUser(userId, 0, 200);\n        }\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    renderContents = () => {\n        const {user, userAccessTokens} = this.props;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let tokenList;\n        if (userAccessTokens) {\n            const userAccessTokensList = Object.values(userAccessTokens);\n\n            if (userAccessTokensList.length === 0) {\n                tokenList = (\n                    <div className='manage-row__empty'>\n                        <FormattedMessage\n                            id='admin.manage_tokens.userAccessTokensNone'\n                            defaultMessage='No personal access tokens.'\n                        />\n                    </div>\n                );\n            } else {\n                tokenList = userAccessTokensList.map((token) => {\n                    return (\n                        <div\n                            key={token.id}\n                            className='manage-teams__team'\n                        >\n                            <div className='manage-teams__team-name'>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensNameLabel'\n                                        defaultMessage='Token Description: '\n                                    />\n                                    {token.description}\n                                </div>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensIdLabel'\n                                        defaultMessage='Token ID: '\n                                    />\n                                    {token.id}\n                                </div>\n                            </div>\n                            <div className='manage-teams__team-actions'>\n                                <RevokeTokenButton\n                                    tokenId={token.id}\n                                    onError={this.handleError}\n                                />\n                            </div>\n                        </div>\n                    );\n                });\n            }\n        } else {\n            tokenList = <LoadingScreen/>;\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                </div>\n                <div className='pt-3'>\n                    <FormattedMarkdownMessage\n                        id='admin.manage_tokens.userAccessTokensDescription'\n                        defaultMessage='Personal access tokens function similarly to session tokens and can be used by integrations to [interact with this Mattermost server](!https://about.mattermost.com/default-api-authentication). Tokens are disabled if the user is deactivated. Learn more about [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                    />\n                </div>\n                <div className='manage-teams__teams'>\n                    {tokenList}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageTokensModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTokensModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_tokens.manageTokensTitle'\n                            defaultMessage='Manage Personal Access Tokens'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {getSiteURL} from 'utils/url';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\nimport RadioSetting from './radio_setting';\n\nconst exportFormats = {\n    EXPORT_FORMAT_CSV: 'csv',\n    EXPORT_FORMAT_ACTIANCE: 'actiance',\n    EXPORT_FORMAT_GLOBALRELAY: 'globalrelay',\n};\n\nexport default class MessageExportSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.MessageExportSettings.EnableExport = this.state.enableComplianceExport;\n        config.MessageExportSettings.ExportFormat = this.state.exportFormat;\n        config.MessageExportSettings.DailyRunTime = this.state.exportJobStartTime;\n\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            config.MessageExportSettings.GlobalRelaySettings = {\n                CustomerType: this.state.globalRelayCustomerType,\n                SmtpUsername: this.state.globalRelaySmtpUsername,\n                SmtpPassword: this.state.globalRelaySmtpPassword,\n                EmailAddress: this.state.globalRelayEmailAddress,\n\n            };\n        }\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const state = {\n            enableComplianceExport: config.MessageExportSettings.EnableExport,\n            exportFormat: config.MessageExportSettings.ExportFormat,\n            exportJobStartTime: config.MessageExportSettings.DailyRunTime,\n        };\n        if (config.MessageExportSettings.GlobalRelaySettings) {\n            state.globalRelayCustomerType = config.MessageExportSettings.GlobalRelaySettings.CustomerType;\n            state.globalRelaySmtpUsername = config.MessageExportSettings.GlobalRelaySettings.SmtpUsername;\n            state.globalRelaySmtpPassword = config.MessageExportSettings.GlobalRelaySettings.SmtpPassword;\n            state.globalRelayEmailAddress = config.MessageExportSettings.GlobalRelaySettings.EmailAddress;\n        }\n        return state;\n    }\n\n    getJobDetails = (job) => {\n        if (job.data) {\n            const message = [];\n            if (job.data.messages_exported) {\n                message.push(\n                    <FormattedMessage\n                        id='admin.complianceExport.messagesExportedCount'\n                        defaultMessage='{count} messages exported.'\n                        values={{\n                            count: job.data.messages_exported,\n                        }}\n                    />,\n                );\n            }\n            if (job.data.warning_count > 0) {\n                message.push(\n                    <div>\n                        <FormattedMessage\n                            id='admin.complianceExport.warningCount'\n                            defaultMessage='{count} warning(s) were encountered, see warning.txt for details'\n                            values={{\n                                count: job.data.warning_count,\n                            }}\n                        />\n                    </div>,\n                );\n            }\n            return message;\n        }\n        return null;\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.complianceExport.title'\n                defaultMessage='Compliance Export (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const exportFormatOptions = [\n            {value: exportFormats.EXPORT_FORMAT_ACTIANCE, text: Utils.localizeMessage('admin.complianceExport.exportFormat.actiance', 'Actiance XML')},\n            {value: exportFormats.EXPORT_FORMAT_CSV, text: Utils.localizeMessage('admin.complianceExport.exportFormat.csv', 'CSV')},\n            {value: exportFormats.EXPORT_FORMAT_GLOBALRELAY, text: Utils.localizeMessage('admin.complianceExport.exportFormat.globalrelay', 'GlobalRelay EML')},\n        ];\n\n        // if the export format is globalrelay, the user needs to set some additional parameters\n        let globalRelaySettings;\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            const globalRelayCustomerType = (\n                <RadioSetting\n                    id='globalRelayCustomerType'\n                    values={[\n                        {value: 'A9', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a9.description', 'A9/Type 9')},\n                        {value: 'A10', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a10.description', 'A10/Type 10')},\n                    ]}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.title'\n                            defaultMessage='Customer Type:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.description'\n                            defaultMessage='The type of GlobalRelay customer account that your organization has.'\n                        />\n                    }\n                    value={this.state.globalRelayCustomerType ? this.state.globalRelayCustomerType : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.CustomerType')}\n                />\n            );\n\n            const globalRelaySmtpUsername = (\n                <TextSetting\n                    id='globalRelaySmtpUsername'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.title'\n                            defaultMessage='SMTP Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpUsername.example', 'E.g.: \"globalRelayUser\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.description'\n                            defaultMessage='The username that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpUsername ? this.state.globalRelaySmtpUsername : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpUsername')}\n                />\n            );\n\n            const globalRelaySmtpPassword = (\n                <TextSetting\n                    id='globalRelaySmtpPassword'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.title'\n                            defaultMessage='SMTP Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpPassword.example', 'E.g.: \"globalRelayPassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.description'\n                            defaultMessage='The password that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpPassword ? this.state.globalRelaySmtpPassword : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpPassword')}\n                />\n            );\n\n            const globalRelayEmail = (\n                <TextSetting\n                    id='globalRelayEmailAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.title'\n                            defaultMessage='Email Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelayEmailAddress.example', 'E.g.: \"globalrelay@mattermost.com\"')}\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.description'\n                            defaultMessage='The email address that your GlobalRelay server monitors for incoming Compliance Exports.'\n                        />\n                    }\n                    value={this.state.globalRelayEmailAddress ? this.state.globalRelayEmailAddress : ''}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.EmailAddress')}\n                />\n            );\n\n            globalRelaySettings = (\n                <SettingsGroup id={'globalRelaySettings'} >\n                    {globalRelayCustomerType}\n                    {globalRelaySmtpUsername}\n                    {globalRelaySmtpPassword}\n                    {globalRelayEmail}\n                </SettingsGroup>\n            );\n        }\n\n        const dropdownHelpText = (\n            <FormattedMarkdownMessage\n                id='admin.complianceExport.exportFormat.description'\n                defaultMessage='Format of the compliance export. Corresponds to the system that you want to import the data into.\\n \\nFor Actiance XML, compliance export files are written to the \\\"exports\\\" subdirectory of the configured [Local Storage Directory]({siteURL}/admin_console/environment/file_storage). For Global Relay EML, they are emailed to the configured email address.'\n                values={{siteURL: getSiteURL()}}\n            />\n        );\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableComplianceExport'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.complianceExportTitle'\n                            defaultMessage='Enable Compliance Export:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.complianceExportDesc'\n                            defaultMessage='When true, Mattermost will export all messages that were posted in the last 24 hours. The export task is scheduled to run once per day. See [the documentation](!https://about.mattermost.com/default-compliance-export-documentation) to learn more.'\n                        />\n                    }\n                    value={this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableExport')}\n                />\n\n                <TextSetting\n                    id='exportJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportJobStartTime.title'\n                            defaultMessage='Compliance Export Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.exportJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedHTMLMessage\n                            id='admin.complianceExport.exportJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled compliance export job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.exportJobStartTime}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DailyRunTime')}\n                />\n\n                <DropdownSetting\n                    id='exportFormat'\n                    values={exportFormatOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportFormat.title'\n                            defaultMessage='Export Format:'\n                        />\n                    }\n                    helpText={dropdownHelpText}\n                    value={this.state.exportFormat}\n                    disabled={!this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.ExportFormat')}\n                />\n\n                {globalRelaySettings}\n\n                <JobsTable\n                    jobType={JobTypes.MESSAGE_EXPORT}\n                    disabled={!this.state.enableComplianceExport}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.title'\n                            defaultMessage='Run Compliance Export Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.help'\n                            defaultMessage='Initiates a Compliance Export job immediately.'\n                        />\n                    }\n                    getExtraInfoText={this.getJobDetails}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactSelect from 'react-select';\n\nimport FormError from 'components/form_error';\n\nimport Setting from './setting';\n\nexport default class MultiSelectSetting extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        selected: PropTypes.array.isRequired,\n        mustBePresent: PropTypes.string,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n        noResultText: PropTypes.node,\n        errorText: PropTypes.node,\n        notPresent: PropTypes.node,\n    };\n\n    static defaultProps = {\n        disabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {error: false};\n    }\n\n    handleChange = (newValue) => {\n        const values = newValue.map((n) => {\n            return n.value;\n        });\n\n        if (this.props.selected.length > 0 && this.props.mustBePresent && values.join(',').indexOf(this.props.mustBePresent) === -1) {\n            this.setState({error: this.props.notPresent});\n        } else {\n            this.props.onChange(this.props.id, values);\n            this.setState({error: false});\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) { // eslint-disable-line camelcase\n        if (newProps.selected.length > 0 && newProps.mustBePresent && newProps.selected.join(',').indexOf(newProps.mustBePresent) === -1) {\n            this.setState({error: this.props.notPresent});\n        } else {\n            this.setState({error: false});\n        }\n    }\n\n    calculateValue = () => {\n        return this.props.selected.reduce((values, item) => {\n            const found = this.props.values.find((e) => {\n                return e.value === item;\n            });\n            if (found !== null) {\n                values.push(found);\n            }\n            return values;\n        }, []);\n    };\n\n    getOptionLabel = ({text}) => text;\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <ReactSelect\n                    id={this.props.id}\n                    isMulti={true}\n                    getOptionLabel={this.getOptionLabel}\n                    options={this.props.values}\n                    delimiter={','}\n                    clearable={false}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                    noResultsText={this.props.noResultText}\n                    onChange={this.handleChange}\n                    value={this.calculateValue()}\n                />\n                <FormError error={this.state.error}/>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport Setting from './setting';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class PasswordSettings extends AdminSettings {\n    constructor(props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            passwordMinimumLength: props.config.PasswordSettings.MinimumLength,\n            passwordLowercase: props.config.PasswordSettings.Lowercase,\n            passwordNumber: props.config.PasswordSettings.Number,\n            passwordUppercase: props.config.PasswordSettings.Uppercase,\n            passwordSymbol: props.config.PasswordSettings.Symbol,\n            maximumLoginAttempts: props.config.ServiceSettings.MaximumLoginAttempts,\n        });\n\n        // Update sample message from config settings\n        t('user.settings.security.passwordErrorLowercase');\n        t('user.settings.security.passwordErrorLowercaseUppercase');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseUppercaseSymbol');\n        t('user.settings.security.passwordErrorLowercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseSymbol');\n        t('user.settings.security.passwordErrorUppercase');\n        t('user.settings.security.passwordErrorUppercaseNumber');\n        t('user.settings.security.passwordErrorUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorUppercaseSymbol');\n        t('user.settings.security.passwordErrorNumber');\n        t('user.settings.security.passwordErrorNumberSymbol');\n        t('user.settings.security.passwordErrorSymbol');\n\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (props.config.PasswordSettings.Lowercase) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (props.config.PasswordSettings.Uppercase) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (props.config.PasswordSettings.Number) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (props.config.PasswordSettings.Symbol) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        this.sampleErrorMsg = (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (this.state.passwordMinimumLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    getConfigFromState = (config) => {\n        config.PasswordSettings.MinimumLength = this.parseIntNonZero(this.state.passwordMinimumLength, Constants.MIN_PASSWORD_LENGTH);\n        config.PasswordSettings.Lowercase = this.refs.lowercase.checked;\n        config.PasswordSettings.Uppercase = this.refs.uppercase.checked;\n        config.PasswordSettings.Number = this.refs.number.checked;\n        config.PasswordSettings.Symbol = this.refs.symbol.checked;\n\n        config.ServiceSettings.MaximumLoginAttempts = this.parseIntNonZero(this.state.maximumLoginAttempts);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            passwordMinimumLength: config.PasswordSettings.MinimumLength,\n            passwordLowercase: config.PasswordSettings.Lowercase,\n            passwordNumber: config.PasswordSettings.Number,\n            passwordUppercase: config.PasswordSettings.Uppercase,\n            passwordSymbol: config.PasswordSettings.Symbol,\n            maximumLoginAttempts: config.ServiceSettings.MaximumLoginAttempts,\n        };\n    }\n\n    getSampleErrorMsg = (minLength) => {\n        if (this.props.config.PasswordSettings.MinimumLength > Constants.MAX_PASSWORD_LENGTH || this.props.config.PasswordSettings.MinimumLength < Constants.MIN_PASSWORD_LENGTH) {\n            return (\n                <FormattedMessage\n                    id='user.settings.security.passwordMinLength'\n                    default='Invalid minimum length, cannot show preview.'\n                />\n            );\n        }\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (this.refs.lowercase.checked) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (this.refs.uppercase.checked) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (this.refs.number.checked) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (this.refs.symbol.checked) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        return (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (minLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    handlePasswordLengthChange = (id, value) => {\n        this.sampleErrorMsg = this.getSampleErrorMsg(value);\n        this.handleChange(id, value);\n    }\n\n    handleCheckboxChange = (id, value) => {\n        this.sampleErrorMsg = this.getSampleErrorMsg(this.state.passwordMinimumLength);\n        this.handleChange(id, value);\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.security.password'\n                defaultMessage='Password'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <div>\n                    <TextSetting\n                        id='passwordMinimumLength'\n                        label={\n                            <FormattedMessage\n                                id='admin.password.minimumLength'\n                                defaultMessage='Minimum Password Length:'\n                            />\n                        }\n                        placeholder={Utils.localizeMessage('admin.password.minimumLengthExample', 'E.g.: \"5\"')}\n                        helpText={\n                            <FormattedMessage\n                                id='admin.password.minimumLengthDescription'\n                                defaultMessage='Minimum number of characters required for a valid password. Must be a whole number greater than or equal to {min} and less than or equal to {max}.'\n                                values={{\n                                    min: Constants.MIN_PASSWORD_LENGTH,\n                                    max: Constants.MAX_PASSWORD_LENGTH,\n                                }}\n                            />\n                        }\n                        value={this.state.passwordMinimumLength}\n                        onChange={this.handlePasswordLengthChange}\n                        setByEnv={this.isSetByEnv('PasswordSettings.MinimumLength')}\n                    />\n                    <Setting\n                        label={\n                            <FormattedMessage\n                                id='passwordRequirements'\n                                defaultMessage='Password Requirements:'\n                            />\n                        }\n                    >\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='lowercase'\n                                    defaultChecked={this.state.passwordLowercase}\n                                    name='admin.password.lowercase'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.lowercase'\n                                    defaultMessage='At least one lowercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='uppercase'\n                                    defaultChecked={this.state.passwordUppercase}\n                                    name='admin.password.uppercase'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.uppercase'\n                                    defaultMessage='At least one uppercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='number'\n                                    defaultChecked={this.state.passwordNumber}\n                                    name='admin.password.number'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.number'\n                                    defaultMessage='At least one number'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref='symbol'\n                                    defaultChecked={this.state.passwordSymbol}\n                                    name='admin.password.symbol'\n                                    onChange={this.handleCheckboxChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.symbol'\n                                    defaultMessage='At least one symbol (e.g. \"~!@#$%^&*()\")'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <br/>\n                            <label>\n                                <FormattedMessage\n                                    id='admin.password.preview'\n                                    defaultMessage='Error message preview:'\n                                />\n                            </label>\n                            <br/>\n                            {this.sampleErrorMsg}\n                        </div>\n                    </Setting>\n                </div>\n                <TextSetting\n                    id='maximumLoginAttempts'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.attemptTitle'\n                            defaultMessage='Maximum Login Attempts:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.attemptExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.attemptDescription'\n                            defaultMessage='Login attempts allowed before user is locked out and required to reset password via email.'\n                        />\n                    }\n                    value={this.state.maximumLoginAttempts}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MaximumLoginAttempts')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nexport default class EditPostTimeLimitButton extends React.PureComponent {\n    static propTypes = {\n        timeLimit: PropTypes.number.isRequired,\n        onClick: PropTypes.func,\n    };\n\n    render = () => {\n        let messageID;\n        if (this.props.timeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            messageID = t('edit_post.time_limit_button.no_limit');\n        } else {\n            messageID = t('edit_post.time_limit_button.for_n_seconds');\n        }\n\n        return (\n            <button\n                className='edit-post-time-limit-button'\n                onClick={this.props.onClick}\n            >\n                <i className='fa fa-gear'/>\n                <FormattedMessage\n                    id={messageID}\n                    values={{n: this.props.timeLimit}}\n                />\n            </button>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditPostTimeLimitButton from './edit_post_time_limit_button';\n\nfunction mapStateToProps(state) {\n    const {PostEditTimeLimit} = getConfig(state);\n\n    return {\n        timeLimit: parseInt(PostEditTimeLimit, 10),\n    };\n}\n\nexport default connect(mapStateToProps)(EditPostTimeLimitButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nconst INT32_MAX = 2147483647;\n\nexport default class EditPostTimeLimitModal extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        show: PropTypes.bool,\n        onClose: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            updateConfig: PropTypes.func.isRequired,\n            getConfig: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            postEditTimeLimit: parseInt(props.config.ServiceSettings.PostEditTimeLimit, 10),\n            saving: false,\n            errorMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getConfig();\n    }\n\n    save = async () => {\n        this.setState({saving: true, errorMessage: ''});\n\n        const val = parseInt(this.state.postEditTimeLimit, 10);\n        if (val !== Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            if (val.toString() === 'NaN' || val <= 0 || val > INT32_MAX) {\n                this.setState({errorMessage: localizeMessage('edit_post.time_limit_modal.invalid_time_limit', 'Invalid time limit'), saving: false});\n                return false;\n            }\n        }\n\n        const newConfig = JSON.parse(JSON.stringify(this.props.config));\n        newConfig.ServiceSettings.PostEditTimeLimit = val;\n\n        const {error: err} = await this.props.actions.updateConfig(newConfig);\n        if (err) {\n            this.setState({errorMessage: err, saving: false});\n        } else {\n            this.setState({saving: false});\n            this.props.onClose();\n        }\n\n        return true;\n    }\n\n    handleOptionChange = (e) => {\n        const {value} = e.target;\n        if (value === Constants.ALLOW_EDIT_POST_ALWAYS) {\n            this.setState({postEditTimeLimit: Constants.UNSET_POST_EDIT_TIME_LIMIT});\n        } else {\n            this.setState({postEditTimeLimit: ''});\n        }\n    }\n\n    handleSecondsChange = (e) => {\n        const {value} = e.target;\n        this.setState({postEditTimeLimit: value});\n    }\n\n    render = () => {\n        return (\n            <Modal\n                dialogClassName='a11y__modal admin-modal edit-post-time-limit-modal'\n                show={this.props.show}\n                role='dialog'\n                aria-labelledby='editPostTimeModalLabel'\n            >\n                <Modal.Header\n                    closeButton={true}\n                >\n                    <Modal.Title\n                        componentClass='h1'\n                        id='editPostTimeModalLabel'\n                    >\n                        <FormattedMessage\n                            id='edit_post.time_limit_modal.title'\n                            defaultMessage='Configure Global Edit Post Time Limit'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormattedHTMLMessage\n                        id='edit_post.time_limit_modal.description'\n                        defaultMessage='Setting a time limit <strong>applies to all users</strong> who have the \"Edit Post\" permissions in any permission scheme.'\n                    />\n                    <div className='pl-3 pb-3 pt-3'>\n                        <div className='pt-3'>\n                            <input\n                                id='anytime'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_ALWAYS}\n                                checked={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='anytime'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_anytime'\n                                    defaultMessage='Anytime'\n                                />\n                            </label>\n                        </div>\n                        <div className='pt-2'>\n                            <input\n                                id='timelimit'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_TIME_LIMIT}\n                                checked={this.state.postEditTimeLimit !== Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.preinput'\n                                    defaultMessage='Can edit for'\n                                />\n                            </label>\n                            <input\n                                type='number'\n                                className='form-control inline'\n                                min='0'\n                                step='1'\n                                max={INT32_MAX}\n                                id='editPostTimeLimit'\n                                readOnly={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleSecondsChange}\n                                value={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT ? '' : this.state.postEditTimeLimit}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.postinput'\n                                    defaultMessage='seconds after posting'\n                                />\n                            </label>\n                        </div>\n                        <div className='pt-3 light'>\n                            <FormattedMessage\n                                id='edit_post.time_limit_modal.subscript'\n                                defaultMessage='Set the length of time users have to edit their messages after posting.'\n                            />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className='edit-post-time-limit-modal__error'>\n                        {this.state.errorMessage}\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-cancel'\n                        onClick={this.props.onClose}\n                    >\n                        <FormattedMessage\n                            id='confirm_modal.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        id='linkModalCloseButton'\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.save}\n                        disabled={this.state.saving}\n                    >\n                        <FormattedMessage\n                            id={this.state.saving ? t('save_button.saving') : t('edit_post.time_limit_modal.save_button')}\n                            defaultMessage='Save Edit Time'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport EditPostTimeLimitModal from './edit_post_time_limit_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        config: Selectors.getConfig(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateConfig,\n            getConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostTimeLimitModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class GuestPermissionsTree extends React.PureComponent {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n        license: PropTypes.object,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            edit_post: {\n                editTimeLimitButton: <EditPostTimeLimitButton onClick={this.openPostTimeLimitModal}/>,\n            },\n        };\n\n        this.permissions = [\n            Permissions.CREATE_PRIVATE_CHANNEL,\n            Permissions.EDIT_POST,\n            Permissions.DELETE_POST,\n            {\n                id: 'reactions',\n                combined: true,\n                permissions: [\n                    Permissions.ADD_REACTION,\n                    Permissions.REMOVE_REACTION,\n                ],\n            },\n            Permissions.USE_CHANNEL_MENTIONS,\n        ];\n\n        if (props.license && props.license.IsLicensed === 'true' && props.license.LDAPGroups === 'true') {\n            this.permissions.push(Permissions.USE_GROUP_MENTIONS);\n        }\n        this.permissions.push(Permissions.CREATE_POST);\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree guest'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.permissions}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport GuestPermissionsTree from './guest_permissions_tree.jsx';\n\nexport const GUEST_INCLUDED_PERMISSIONS = [\n    Permissions.CREATE_PRIVATE_CHANNEL,\n    Permissions.EDIT_POST,\n    Permissions.DELETE_POST,\n    Permissions.ADD_REACTION,\n    Permissions.REMOVE_REACTION,\n    Permissions.USE_CHANNEL_MENTIONS,\n    Permissions.USE_GROUP_MENTIONS,\n    Permissions.CREATE_POST,\n];\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const license = getLicense(state);\n\n    return {\n        config,\n        license,\n    };\n}\n\nexport default connect(mapStateToProps)(GuestPermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getSchemeTeams as loadSchemeTeams, getSchemes as loadSchemes} from 'mattermost-redux/actions/schemes';\nimport {getSchemes} from 'mattermost-redux/selectors/entities/schemes';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PermissionSchemesSettings from './permission_schemes_settings.jsx';\n\nfunction mapStateToProps(state) {\n    const schemes = getSchemes(state);\n    const config = getConfig(state);\n\n    return {\n        schemes,\n        jobsAreEnabled: config.RunJobs === 'true',\n        clusterIsEnabled: config.EnableCluster === 'true',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadSchemes,\n            loadSchemeTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSchemesSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport CheckboxPartialIcon from 'components/widgets/icons/checkbox_partial_icon.jsx';\n\nexport default class PermissionCheckbox extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        id: PropTypes.string,\n    };\n\n    static defaultProps = {\n        value: '',\n        id: '',\n    }\n\n    render() {\n        const {value, id} = this.props;\n        let icon = null;\n        let extraClass = '';\n        if (value === 'checked') {\n            icon = (<CheckboxCheckedIcon/>);\n            extraClass = 'checked';\n        } else if (value === 'intermediate') {\n            icon = (<CheckboxPartialIcon/>);\n            extraClass = 'intermediate';\n        }\n        return (\n            <div\n                className={'permission-check ' + extraClass}\n                data-testid={id}\n            >\n                {icon}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, FormattedHTMLMessage, injectIntl} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {generateId} from 'utils/utils.jsx';\nimport {intlShape} from 'utils/react_intl';\nimport Constants from 'utils/constants';\n\nexport class PermissionDescription extends React.PureComponent {\n    static propTypes = {\n        intl: intlShape.isRequired,\n        id: PropTypes.string.isRequired,\n        rowType: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        selectRow: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.id = generateId();\n\n        this.state = {\n            open: false,\n        };\n    }\n\n    closeTooltip = () => {\n        this.setState({open: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('span');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({open: isElipsis});\n    }\n\n    parentPermissionClicked = (e) => {\n        const isInheritLink = e.target.parentElement.parentElement.className === 'inherit-link-wrapper';\n        if (e.target.parentElement.className !== 'permission-description' && !isInheritLink) {\n            e.stopPropagation();\n        } else if (isInheritLink) {\n            this.props.selectRow(this.props.id);\n            e.stopPropagation();\n        }\n    }\n\n    render() {\n        const {inherited, id, rowType} = this.props;\n\n        let content = '';\n        if (inherited) {\n            content = (\n                <span className='inherit-link-wrapper'>\n                    <FormattedHTMLMessage\n                        id='admin.permissions.inherited_from'\n                        values={{\n                            name: this.props.intl.formatMessage({\n                                id: 'admin.permissions.roles.' + inherited.name + '.name',\n                                defaultMessage: inherited.display_name,\n                            }),\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            content = (\n                <FormattedMessage\n                    id={'admin.permissions.' + rowType + '.' + id + '.description'}\n                    values={this.props.additionalValues}\n                />\n            );\n        }\n        let tooltip = (\n            <Overlay\n                show={this.state.open}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                target={this.refs.content}\n            >\n                <Tooltip id={this.id}>\n                    {content}\n                </Tooltip>\n            </Overlay>\n        );\n        if (content.props.values && Object.keys(content.props.values).length > 0) {\n            tooltip = null;\n        }\n        content = (\n            <span\n                className='permission-description'\n                onClick={this.parentPermissionClicked}\n                ref='content'\n                onMouseOver={this.openTooltip}\n                onMouseOut={this.closeTooltip}\n            >\n                {content}\n                {tooltip}\n            </span>\n        );\n\n        return content;\n    }\n}\n\nexport default injectIntl(PermissionDescription);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {PermissionsScope} from 'utils/constants';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionRow from './permission_row.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nconst getRecursivePermissions = (permissions) => {\n    let result = [];\n    for (const permission of permissions) {\n        if (typeof permission === 'string') {\n            result.push(permission);\n        } else {\n            result = result.concat(getRecursivePermissions(permission.permissions));\n        }\n    }\n    return result;\n};\n\nexport default class PermissionGroup extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        permissions: PropTypes.array.isRequired,\n        readOnly: PropTypes.bool,\n        role: PropTypes.object,\n        parentRole: PropTypes.object,\n        scope: PropTypes.string.isRequired,\n        combined: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        root: PropTypes.bool,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            prevPermissions: [],\n            selected: props.selected,\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selected !== state.selected) {\n            if (getRecursivePermissions(props.permissions).indexOf(props.selected) !== -1) {\n                return {expanded: true, selected: props.selected};\n            }\n            return {selected: props.selected};\n        }\n        return null;\n    }\n\n    toggleExpanded = (e) => {\n        e.stopPropagation();\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    toggleSelectRow = (id) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange([id]);\n    }\n\n    toggleSelectSubGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(ids);\n    }\n\n    toggleSelectGroup = () => {\n        const {readOnly, permissions, role, onChange} = this.props;\n        if (readOnly) {\n            return;\n        }\n        if (this.getStatus(permissions) === 'checked') {\n            const permissionsToToggle = [];\n            for (const permission of getRecursivePermissions(permissions)) {\n                if (!this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({expanded: true});\n            onChange(permissionsToToggle);\n        } else if (this.getStatus(permissions) === '') {\n            const permissionsToToggle = [];\n            let expanded = true;\n            if (this.state.prevPermissions.length === 0) {\n                for (const permission of getRecursivePermissions(permissions)) {\n                    if (!this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                        expanded = false;\n                    }\n                }\n            } else {\n                for (const permission of getRecursivePermissions(permissions)) {\n                    if (this.state.prevPermissions.indexOf(permission) !== -1 && !this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                    }\n                }\n            }\n            onChange(permissionsToToggle);\n            this.setState({prevPermissions: [], expanded});\n        } else {\n            const permissionsToToggle = [];\n            for (const permission of getRecursivePermissions(permissions)) {\n                if (role.permissions.indexOf(permission) === -1 && !this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({prevPermissions: role.permissions, expanded: false});\n            onChange(permissionsToToggle);\n        }\n    }\n\n    isInScope = (permission) => {\n        if (this.props.scope === 'channel_scope' && PermissionsScope[permission] !== 'channel_scope') {\n            return false;\n        }\n        if (this.props.scope === 'team_scope' && PermissionsScope[permission] === 'system_scope') {\n            return false;\n        }\n        return true;\n    }\n\n    renderPermission = (permission, additionalValues) => {\n        if (!this.isInScope(permission)) {\n            return null;\n        }\n        const comesFromParent = this.fromParent(permission);\n        const active = comesFromParent || this.props.role.permissions.indexOf(permission) !== -1;\n        return (\n            <PermissionRow\n                key={permission}\n                id={permission}\n                uniqId={this.props.uniqId + '-' + permission}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly || comesFromParent}\n                inherited={comesFromParent ? this.props.parentRole : null}\n                value={active ? 'checked' : ''}\n                onChange={this.toggleSelectRow}\n                additionalValues={additionalValues}\n            />\n        );\n    }\n\n    renderGroup = (g) => {\n        return (\n            <PermissionGroup\n                key={g.id}\n                id={g.id}\n                uniqId={this.props.uniqId + '-' + g.id}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly}\n                permissions={g.permissions}\n                additionalValues={this.props.additionalValues}\n                role={this.props.role}\n                parentRole={this.props.parentRole}\n                scope={this.props.scope}\n                onChange={this.toggleSelectSubGroup}\n                combined={g.combined}\n                root={false}\n            />\n        );\n    }\n\n    fromParent = (id) => {\n        return this.props.parentRole && this.props.parentRole.permissions.indexOf(id) !== -1;\n    }\n\n    getStatus = (permissions) => {\n        let anyChecked = false;\n        let anyUnchecked = false;\n        for (const permission of permissions) {\n            if (typeof permission === 'string') {\n                if (!this.isInScope(permission)) {\n                    continue;\n                }\n                anyChecked = anyChecked || this.fromParent(permission) || this.props.role.permissions.indexOf(permission) !== -1;\n                anyUnchecked = anyUnchecked || (!this.fromParent(permission) && this.props.role.permissions.indexOf(permission) === -1);\n            } else {\n                const status = this.getStatus(permission.permissions);\n                if (status === 'intermediate') {\n                    return 'intermediate';\n                }\n                if (status === 'checked') {\n                    anyChecked = true;\n                }\n                if (status === '') {\n                    anyUnchecked = true;\n                }\n            }\n        }\n        if (anyChecked && anyUnchecked) {\n            return 'intermediate';\n        }\n        if (anyChecked && !anyUnchecked) {\n            return 'checked';\n        }\n        return '';\n    }\n\n    hasPermissionsOnScope = () => {\n        return getRecursivePermissions(this.props.permissions).some((permission) => this.isInScope(permission));\n    }\n\n    allPermissionsFromParent = (permissions) => {\n        for (const permission of permissions) {\n            if (typeof permission !== 'string') {\n                if (!this.allPermissionsFromParent(permission.permissions)) {\n                    return false;\n                }\n                continue;\n            }\n            if (this.isInScope(permission) && !this.fromParent(permission)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render = () => {\n        const {id, uniqId, permissions, readOnly, combined, root, selected, additionalValues} = this.props;\n        if (!this.hasPermissionsOnScope()) {\n            return null;\n        }\n        const permissionsRows = permissions.map((group) => {\n            if (typeof group === 'string') {\n                const addVals = additionalValues && additionalValues[group] ? additionalValues[group] : {};\n                return this.renderPermission(group, addVals);\n            }\n            return this.renderGroup(group);\n        });\n        if (root) {\n            return (\n                <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                    {permissionsRows}\n                </div>\n            );\n        }\n\n        let inherited = null;\n        if (this.allPermissionsFromParent(this.props.permissions) && this.props.combined) {\n            inherited = this.props.parentRole;\n        }\n\n        let classes = '';\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        if (readOnly || this.allPermissionsFromParent(this.props.permissions)) {\n            classes += ' read-only';\n        }\n\n        if (combined) {\n            classes += ' combined';\n        }\n\n        return (\n            <div className='permission-group'>\n                {!root &&\n                    <div\n                        className={'permission-group-row ' + classes}\n                        onClick={this.toggleSelectGroup}\n                        id={uniqId}\n                    >\n                        {!combined &&\n                            <div\n                                className={'fa fa-caret-right permission-arrow ' + (this.state.expanded ? 'open' : '')}\n                                onClick={this.toggleExpanded}\n                            />}\n                        <PermissionCheckbox\n                            value={this.getStatus(this.props.permissions)}\n                            id={`${uniqId}-checkbox`}\n                        />\n                        <span className='permission-name'>\n                            <FormattedMessage id={'admin.permissions.group.' + id + '.name'}/>\n                        </span>\n                        <PermissionDescription\n                            inherited={inherited}\n                            id={id}\n                            selectRow={this.props.selectRow}\n                            rowType='group'\n                        />\n                    </div>}\n                {!combined &&\n                    <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                        {permissionsRows}\n                    </div>}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nexport default class PermissionRow extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        readOnly: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    toggleSelect = () => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(this.props.id);\n    }\n\n    render = () => {\n        const {id, uniqId, inherited, value, readOnly, selected, additionalValues} = this.props;\n        let classes = 'permission-row';\n        if (readOnly) {\n            classes += ' read-only';\n        }\n\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        return (\n            <div\n                className={classes}\n                onClick={this.toggleSelect}\n                id={uniqId}\n            >\n                <PermissionCheckbox\n                    value={value}\n                    id={`${uniqId}-checkbox`}\n                />\n                <span className='permission-name'>\n                    <FormattedMessage\n                        id={'admin.permissions.permission.' + id + '.name'}\n                    />\n                </span>\n                <PermissionDescription\n                    inherited={inherited}\n                    id={id}\n                    selectRow={this.props.selectRow}\n                    rowType='permission'\n                    additionalValues={additionalValues}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport LoadingScreen from 'components/loading_screen';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport AdminPanelWithLink from 'components/widgets/admin_console/admin_panel_with_link';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary';\n\nconst PAGE_SIZE = 30;\nconst PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE = 501;\n\nexport default class PermissionSchemesSettings extends React.PureComponent {\n    static propTypes = {\n        schemes: PropTypes.object.isRequired,\n        jobsAreEnabled: PropTypes.bool,\n        clusterIsEnabled: PropTypes.bool,\n        license: PropTypes.shape({\n            CustomPermissionsSchemes: PropTypes.string,\n        }),\n        actions: PropTypes.shape({\n            loadSchemes: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n        }),\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            loadingMore: false,\n            page: 0,\n            phase2MigrationIsComplete: false,\n        };\n    }\n\n    static defaultProps = {\n        schemes: {},\n    };\n\n    componentDidMount() {\n        let phase2MigrationIsComplete = true; // Assume migration is complete unless HTTP status code says otherwise.\n        this.props.actions.loadSchemes('team', 0, PAGE_SIZE).then((schemes) => {\n            if (schemes.error.status_code === PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE) {\n                phase2MigrationIsComplete = false;\n            }\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loading: false, phase2MigrationIsComplete}));\n        }).catch(() => {\n            this.setState({loading: false, phase2MigrationIsComplete});\n        });\n    }\n\n    loadMoreSchemes = () => {\n        this.setState({loadingMore: true});\n        this.props.actions.loadSchemes('team', this.state.page + 1, PAGE_SIZE).then((schemes) => {\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loadingMore: false, page: this.state.page + 1}));\n        });\n    }\n\n    // |RunJobs && !EnableCluster|(*App).IsPhase2MigrationCompleted|View                                                   |\n    // |-------------------------|---------------------------------|-------------------------------------------------------|\n    // |true                     |true                             |null                                                   |\n    // |false                    |true                             |null (Jobs were disabled after a successful migration.)|\n    // |false                    |false                            |On hold view.                                          |\n    // |true                     |false                            |In progress view.                                      |\n    teamOverrideSchemesMigrationView = () => {\n        if (this.state.phase2MigrationIsComplete) {\n            return null;\n        }\n\n        const docLink = (\n            <a\n                href='https://docs.mattermost.com/administration/config-settings.html#jobs'\n                rel='noopener noreferrer'\n                target='_blank'\n            >\n                <FormattedMessage\n                    id='admin.permissions.documentationLinkText'\n                    defaultMessage='documentation'\n                />\n            </a>\n        );\n\n        if (this.props.jobsAreEnabled && !this.props.clusterIsEnabled) {\n            return this.teamOverrideUnavalableView(\n                t('admin.permissions.teamOverrideSchemesInProgress'),\n                'Migration job in progress: Team Override Schemes are not available until the job server completes the permissions migration. Learn more in the {documentationLink}.',\n                docLink,\n            );\n        }\n\n        return this.teamOverrideUnavalableView(\n            t('admin.permissions.teamOverrideSchemesNoJobsEnabled'),\n            'Migration job on hold: Team Override Schemes are not available until the job server can execute the permissions migration. The job will be automatically started when the job server is enabled. Learn more in the {documentationLink}.',\n            docLink,\n        );\n    }\n\n    teamOverrideUnavalableView = (id, defaultMsg, documentationLink) => {\n        return (\n            <div className='team-override-unavailable'>\n                <div className='team-override-unavailable__inner'>\n                    <FormattedMessage\n                        id={id}\n                        defaultMessage={defaultMsg}\n                        values={{documentationLink}}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    renderTeamOverrideSchemes = () => {\n        const schemes = Object.values(this.props.schemes).map((scheme) => (\n            <PermissionsSchemeSummary\n                scheme={scheme}\n                history={this.props.history}\n                key={scheme.id}\n            />\n        ));\n        const hasCustomSchemes = this.props.license.CustomPermissionsSchemes === 'true';\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        if (hasCustomSchemes) {\n            return (\n                <AdminPanelWithLink\n                    id='team-override-schemes'\n                    className='permissions-block'\n                    titleId={t('admin.permissions.teamOverrideSchemesTitle')}\n                    titleDefault='Team Override Schemes'\n                    subtitleId={t('admin.permissions.teamOverrideSchemesBannerText')}\n                    subtitleDefault='Use when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                    url='/admin_console/user_management/permissions/team_override_scheme'\n                    disabled={teamOverrideView !== null}\n                    linkTextId={t('admin.permissions.teamOverrideSchemesNewButton')}\n                    linkTextDefault='New Team Override Scheme'\n                >\n                    {schemes.length === 0 && teamOverrideView === null &&\n                        <div className='no-team-schemes'>\n                            <FormattedMessage\n                                id='admin.permissions.teamOverrideSchemesNoSchemes'\n                                defaultMessage='No team override schemes created.'\n                            />\n                        </div>}\n                    {teamOverrideView}\n                    {schemes.length > 0 && schemes}\n                    {schemes.length === (PAGE_SIZE * (this.state.page + 1)) &&\n                        <button\n                            className='more-schemes theme style--none color--link'\n                            onClick={this.loadMoreSchemes}\n                            disabled={this.state.loadingMore}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.loadingMore}\n                                text={Utils.localizeMessage('admin.permissions.loadingMoreSchemes', 'Loading...')}\n                            >\n                                <FormattedMessage\n                                    id='admin.permissions.loadMoreSchemes'\n                                    defaultMessage='Load more schemes'\n                                />\n                            </LoadingWrapper>\n                        </button>}\n                </AdminPanelWithLink>\n            );\n        }\n        return false;\n    }\n\n    render = () => {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.permissions.permissionSchemes'\n                    defaultMessage='Permission Schemes'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.introBanner'\n                                        defaultMessage='Permission Schemes set the default permissions for Team Admins, Channel Admins and everyone else. Learn more about permission schemes in our [documentation](!https://about.mattermost.com/default-advanced-permissions).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanelWithLink\n                            titleId={t('admin.permissions.systemSchemeBannerTitle')}\n                            titleDefault='System Scheme'\n                            subtitleId={t('admin.permissions.systemSchemeBannerText')}\n                            subtitleDefault='Set the default permissions inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied.'\n                            url='/admin_console/user_management/permissions/system_scheme'\n                            disabled={teamOverrideView !== null}\n                            linkTextId={t('admin.permissions.systemSchemeBannerButton')}\n                            linkTextDefault='Edit Scheme'\n                        />\n\n                        {this.renderTeamOverrideSchemes()}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nt('admin.permissions.group.delete_posts.description');\nt('admin.permissions.group.delete_posts.name');\nt('admin.permissions.group.integrations.description');\nt('admin.permissions.group.integrations.name');\nt('admin.permissions.group.posts.description');\nt('admin.permissions.group.posts.name');\nt('admin.permissions.group.private_channel.description');\nt('admin.permissions.group.private_channel.name');\nt('admin.permissions.group.public_channel.description');\nt('admin.permissions.group.public_channel.name');\nt('admin.permissions.group.reactions.description');\nt('admin.permissions.group.reactions.name');\nt('admin.permissions.group.send_invites.description');\nt('admin.permissions.group.send_invites.name');\nt('admin.permissions.group.teams.description');\nt('admin.permissions.group.teams.name');\nt('admin.permissions.group.edit_posts.description');\nt('admin.permissions.group.edit_posts.name');\nt('admin.permissions.group.teams_team_scope.description');\nt('admin.permissions.group.teams_team_scope.name');\nt('admin.permissions.permission.assign_system_admin_role.description');\nt('admin.permissions.permission.assign_system_admin_role.name');\nt('admin.permissions.permission.create_direct_channel.description');\nt('admin.permissions.permission.create_direct_channel.name');\nt('admin.permissions.permission.create_group_channel.description');\nt('admin.permissions.permission.create_group_channel.name');\nt('admin.permissions.permission.create_post.description');\nt('admin.permissions.permission.create_post.name');\nt('admin.permissions.permission.create_private_channel.description');\nt('admin.permissions.permission.create_private_channel.name');\nt('admin.permissions.permission.create_public_channel.description');\nt('admin.permissions.permission.create_public_channel.name');\nt('admin.permissions.permission.create_team.description');\nt('admin.permissions.permission.create_team.name');\nt('admin.permissions.permission.create_user_access_token.description');\nt('admin.permissions.permission.create_user_access_token.name');\nt('admin.permissions.permission.delete_others_posts.description');\nt('admin.permissions.permission.delete_others_posts.name');\nt('admin.permissions.permission.delete_post.description');\nt('admin.permissions.permission.delete_post.name');\nt('admin.permissions.permission.delete_private_channel.description');\nt('admin.permissions.permission.delete_private_channel.name');\nt('admin.permissions.permission.delete_public_channel.description');\nt('admin.permissions.permission.delete_public_channel.name');\nt('admin.permissions.permission.edit_other_users.description');\nt('admin.permissions.permission.edit_other_users.name');\nt('admin.permissions.permission.edit_post.description');\nt('admin.permissions.permission.edit_post.name');\nt('admin.permissions.permission.import_team.description');\nt('admin.permissions.permission.import_team.name');\nt('admin.permissions.permission.list_team_channels.description');\nt('admin.permissions.permission.list_team_channels.name');\nt('admin.permissions.permission.list_users_without_team.description');\nt('admin.permissions.permission.list_users_without_team.name');\nt('admin.permissions.permission.manage_channel_roles.description');\nt('admin.permissions.permission.manage_channel_roles.name');\nt('admin.permissions.permission.create_emojis.description');\nt('admin.permissions.permission.create_emojis.name');\nt('admin.permissions.permission.delete_emojis.description');\nt('admin.permissions.permission.delete_emojis.name');\nt('admin.permissions.permission.delete_others_emojis.description');\nt('admin.permissions.permission.delete_others_emojis.name');\nt('admin.permissions.permission.manage_jobs.description');\nt('admin.permissions.permission.manage_jobs.name');\nt('admin.permissions.permission.manage_oauth.description');\nt('admin.permissions.permission.manage_oauth.name');\nt('admin.permissions.permission.manage_private_channel_members.description');\nt('admin.permissions.permission.manage_private_channel_members.name');\nt('admin.permissions.permission.manage_private_channel_properties.description');\nt('admin.permissions.permission.manage_private_channel_properties.name');\nt('admin.permissions.permission.manage_public_channel_members.description');\nt('admin.permissions.permission.manage_public_channel_members.name');\nt('admin.permissions.permission.manage_public_channel_properties.description');\nt('admin.permissions.permission.manage_public_channel_properties.name');\nt('admin.permissions.permission.manage_roles.description');\nt('admin.permissions.permission.manage_roles.name');\nt('admin.permissions.permission.manage_slash_commands.description');\nt('admin.permissions.permission.manage_slash_commands.name');\nt('admin.permissions.permission.manage_system.description');\nt('admin.permissions.permission.manage_system.name');\nt('admin.permissions.permission.manage_team.description');\nt('admin.permissions.permission.manage_team.name');\nt('admin.permissions.permission.manage_team_roles.description');\nt('admin.permissions.permission.manage_team_roles.name');\nt('admin.permissions.permission.manage_incoming_webhooks.description');\nt('admin.permissions.permission.manage_incoming_webhooks.name');\nt('admin.permissions.permission.manage_outgoing_webhooks.description');\nt('admin.permissions.permission.manage_outgoing_webhooks.name');\nt('admin.permissions.permission.permanent_delete_user.description');\nt('admin.permissions.permission.permanent_delete_user.name');\nt('admin.permissions.permission.read_channel.description');\nt('admin.permissions.permission.read_channel.name');\nt('admin.permissions.permission.read_user_access_token.description');\nt('admin.permissions.permission.read_user_access_token.name');\nt('admin.permissions.permission.remove_user_from_team.description');\nt('admin.permissions.permission.remove_user_from_team.name');\nt('admin.permissions.permission.revoke_user_access_token.description');\nt('admin.permissions.permission.revoke_user_access_token.name');\nt('admin.permissions.permission.upload_file.description');\nt('admin.permissions.permission.upload_file.name');\nt('admin.permissions.permission.use_channel_mentions.description');\nt('admin.permissions.permission.use_channel_mentions.name');\nt('admin.permissions.permission.use_group_mentions.description');\nt('admin.permissions.permission.use_group_mentions.name');\nt('admin.permissions.permission.view_team.description');\nt('admin.permissions.permission.view_team.name');\nt('admin.permissions.permission.edit_others_posts.description');\nt('admin.permissions.permission.edit_others_posts.name');\nt('admin.permissions.permission.invite_guest.name');\nt('admin.permissions.permission.invite_guest.description');\nt('admin.permissions.roles.all_users.name');\nt('admin.permissions.roles.channel_admin.name');\nt('admin.permissions.roles.channel_user.name');\nt('admin.permissions.roles.system_admin.name');\nt('admin.permissions.roles.system_user.name');\nt('admin.permissions.roles.team_admin.name');\nt('admin.permissions.roles.team_user.name');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionSystemSchemeSettings from './permission_system_scheme_settings.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        config: getConfig(state),\n        license: getLicense(state),\n        roles: getRoles(state),\n        rolesRequest: state.requests.roles.getRolesByNames,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            editRole,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSystemSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport ConfirmModal from 'components/confirm_modal';\n\nimport {PermissionsScope, DefaultRolePermissions} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree, {EXCLUDED_PERMISSIONS} from '../permissions_tree';\nimport GuestPermissionsTree, {GUEST_INCLUDED_PERMISSIONS} from '../guest_permissions_tree';\n\nexport default class PermissionSystemSchemeSettings extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        roles: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showResetDefaultModal: false,\n            loaded: false,\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: {},\n            openRoles: {\n                guests: true,\n                all_users: true,\n                system_admin: true,\n                team_admin: true,\n                channel_admin: true,\n            },\n        };\n        this.rolesNeeded = [\n            GeneralConstants.SYSTEM_ADMIN_ROLE,\n            GeneralConstants.SYSTEM_USER_ROLE,\n            GeneralConstants.TEAM_ADMIN_ROLE,\n            GeneralConstants.TEAM_USER_ROLE,\n            GeneralConstants.CHANNEL_ADMIN_ROLE,\n            GeneralConstants.CHANNEL_USER_ROLE,\n            GeneralConstants.SYSTEM_GUEST_ROLE,\n            GeneralConstants.TEAM_GUEST_ROLE,\n            GeneralConstants.CHANNEL_GUEST_ROLE,\n        ];\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(this.rolesNeeded);\n        if (this.rolesNeeded.every((roleName) => this.props.roles[roleName])) {\n            this.loadRolesIntoState(this.props);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.state.loaded && this.rolesNeeded.every((roleName) => nextProps.roles[roleName])) {\n            this.loadRolesIntoState(nextProps);\n        }\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    loadRolesIntoState(props) {\n        const {system_admin, team_admin, channel_admin, system_user, team_user, channel_user, system_guest, team_guest, channel_guest} = props.roles; // eslint-disable-line camelcase, @typescript-eslint/camelcase\n        this.setState({\n            selectedPermission: null,\n            loaded: true,\n            roles: {\n                system_admin,\n                team_admin,\n                channel_admin,\n                all_users: {\n                    name: 'all_users',\n                    displayName: 'All members',\n                    permissions: system_user.permissions.concat(team_user.permissions).concat(channel_user.permissions),\n                },\n                guests: {\n                    name: 'guests',\n                    displayName: 'Guests',\n                    permissions: system_guest.permissions.concat(team_guest.permissions).concat(channel_guest.permissions),\n                },\n            },\n        });\n    }\n\n    deriveRolesFromAllUsers = (role) => {\n        return {\n            system_user: {\n                ...this.props.roles.system_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_user: {\n                ...this.props.roles.team_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...this.props.roles.channel_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    deriveRolesFromGuests = (role) => {\n        return {\n            system_guest: {\n                ...this.props.roles.system_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_guest: {\n                ...this.props.roles.team_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_guest: {\n                ...this.props.roles.channel_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (roles) => {\n        for (const permission of this.props.roles.system_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    restoreGuestPermissions = (roles) => {\n        for (const permission of this.props.roles.system_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_guest.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleSubmit = async () => {\n        const teamAdminPromise = this.props.actions.editRole(this.state.roles.team_admin);\n        const channelAdminPromise = this.props.actions.editRole(this.state.roles.channel_admin);\n        const roles = this.restoreExcludedPermissions(this.deriveRolesFromAllUsers(this.state.roles.all_users));\n        const guestRoles = this.restoreGuestPermissions(this.deriveRolesFromGuests(this.state.roles.guests));\n        const systemUserPromise = this.props.actions.editRole(roles.system_user);\n        const teamUserPromise = this.props.actions.editRole(roles.team_user);\n        const channelUserPromise = this.props.actions.editRole(roles.channel_user);\n\n        const promises = [teamAdminPromise, channelAdminPromise, systemUserPromise, teamUserPromise, channelUserPromise];\n\n        if (this.haveGuestAccountsPermissions()) {\n            const systemGuestPromise = this.props.actions.editRole(guestRoles.system_guest);\n            const teamGuestPromise = this.props.actions.editRole(guestRoles.team_guest);\n            const channelGuestPromise = this.props.actions.editRole(guestRoles.channel_guest);\n            promises.push(systemGuestPromise, teamGuestPromise, channelGuestPromise);\n        }\n\n        this.setState({saving: true});\n\n        const results = await Promise.all(promises);\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.state.roles};\n        const role = {...roles[roleId]};\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        roles[roleId] = role;\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    resetDefaults = () => {\n        const newRolesState = JSON.parse(JSON.stringify({...this.state.roles}));\n\n        Object.entries(DefaultRolePermissions).forEach(([roleName, permissions]) => {\n            newRolesState[roleName].permissions = permissions;\n        });\n\n        this.setState({roles: newRolesState, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    haveGuestAccountsPermissions = () => {\n        return this.props.license.GuestAccountsPermissions === 'true';\n    }\n\n    render = () => {\n        if (!this.state.loaded) {\n            return <LoadingScreen/>;\n        }\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme'\n                            defaultMessage='System Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.systemScheme.introBanner'\n                                        defaultMessage='Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams.'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        {this.props.license && this.props.config.EnableGuestAccounts === 'true' &&\n                            <AdminPanelTogglable\n                                className='permissions-block'\n                                open={this.state.openRoles.guests}\n                                id='all_users'\n                                onToggle={() => this.toggleRole('guests')}\n                                titleId={t('admin.permissions.systemScheme.GuestsTitle')}\n                                titleDefault='Guests'\n                                subtitleId={t('admin.permissions.systemScheme.GuestsDescription')}\n                                subtitleDefault='Permissions granted to guest users.'\n                            >\n                                <GuestPermissionsTree\n                                    selected={this.state.selectedPermission}\n                                    role={this.state.roles.guests}\n                                    scope={'system_scope'}\n                                    onToggle={this.togglePermission}\n                                    selectRow={this.selectRow}\n                                    readOnly={!this.haveGuestAccountsPermissions()}\n                                />\n                            </AdminPanelTogglable>}\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={this.state.roles.all_users}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.system_admin}\n                            onToggle={() => this.toggleRole('system_admin')}\n                            titleId={t('admin.permissions.systemScheme.systemAdminsTitle')}\n                            titleDefault='System Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.systemAdminsDescription')}\n                            subtitleDefault='Full permissions granted to System Administrators.'\n                        >\n                            <PermissionsTree\n                                readOnly={true}\n                                role={this.state.roles.system_admin}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <a\n                        data-testid='resetPermissionsToDefault'\n                        onClick={() => this.setState({showResetDefaultModal: true})}\n                        className='cancel-button reset-defaults-btn'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButton'\n                            defaultMessage='Reset to Defaults'\n                        />\n                    </a>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n\n                <ConfirmModal\n                    show={this.state.showResetDefaultModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalTitle'\n                            defaultMessage='Reset to Default?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalBody'\n                            defaultMessage='This will reset all selections on this page to their default settings. Are you sure you want to reset?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsConfirmationButton'\n                            defaultMessage='Yes, Reset'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.resetDefaults();\n                        this.setState({showResetDefaultModal: false});\n                    }}\n                    onCancel={() => this.setState({showResetDefaultModal: false})}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getScheme, makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport {getScheme as loadScheme, patchScheme, createScheme, getSchemeTeams as loadSchemeTeams} from 'mattermost-redux/actions/schemes';\n\nimport {updateTeamScheme} from 'mattermost-redux/actions/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionTeamSchemeSettings from './permission_team_scheme_settings.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return (state, ownProps) => {\n        const schemeId = ownProps.match.params.scheme_id;\n        return {\n            config: getConfig(state),\n            license: getLicense(state),\n            schemeId,\n            scheme: schemeId ? getScheme(state, schemeId) : null,\n            teams: schemeId ? getSchemeTeams(state, {schemeId}) : null,\n            roles: getRoles(state),\n            rolesRequest: state.requests.roles.getRolesByNames,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            loadScheme,\n            loadSchemeTeams,\n            editRole,\n            patchScheme,\n            updateTeamScheme,\n            createScheme,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionTeamSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {PermissionsScope, ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\nimport AdminPanelWithButton from 'components/widgets/admin_console/admin_panel_with_button';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree, {EXCLUDED_PERMISSIONS} from '../permissions_tree';\nimport GuestPermissionsTree, {GUEST_INCLUDED_PERMISSIONS} from '../guest_permissions_tree';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport TeamInList from './team_in_list';\n\nexport default class PermissionTeamSchemeSettings extends React.PureComponent {\n    static propTypes = {\n        schemeId: PropTypes.string,\n        scheme: PropTypes.object,\n        config: PropTypes.object.isRequired,\n        roles: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        teams: PropTypes.array,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            loadScheme: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            patchScheme: PropTypes.func.isRequired,\n            createScheme: PropTypes.func.isRequired,\n            updateTeamScheme: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: null,\n            teams: null,\n            addTeamOpen: false,\n            selectedPermission: null,\n            openRoles: {\n                all_users: true,\n                team_admin: true,\n                channel_admin: true,\n                guests: true,\n            },\n        };\n    }\n\n    static defaultProps = {\n        scheme: null,\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(['team_admin', 'team_user', 'channel_admin', 'channel_user', 'team_guest', 'channel_guest']);\n        if (this.props.schemeId) {\n            this.props.actions.loadScheme(this.props.schemeId).then((result) => {\n                this.props.actions.loadRolesIfNeeded([\n                    result.data.default_team_guest_role,\n                    result.data.default_team_user_role,\n                    result.data.default_team_admin_role,\n                    result.data.default_channel_guest_role,\n                    result.data.default_channel_user_role,\n                    result.data.default_channel_admin_role,\n                ]);\n            });\n            this.props.actions.loadSchemeTeams(this.props.schemeId);\n        }\n    }\n\n    isLoaded = (props) => {\n        if (props.schemeId) {\n            if (props.scheme !== null &&\n                props.teams !== null &&\n                props.roles[props.scheme.default_team_guest_role] &&\n                props.roles[props.scheme.default_team_user_role] &&\n                props.roles[props.scheme.default_team_admin_role] &&\n                props.roles[props.scheme.default_channel_guest_role] &&\n                props.roles[props.scheme.default_channel_user_role] &&\n                props.roles[props.scheme.default_channel_admin_role]) {\n                return true;\n            }\n            return false;\n        } else if (props.roles.team_guest &&\n            props.roles.team_user &&\n            props.roles.team_admin &&\n            props.roles.channel_guest &&\n            props.roles.channel_user &&\n            props.roles.channel_admin) {\n            return true;\n        }\n        return false;\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    getStateRoles = () => {\n        if (this.state.roles !== null) {\n            return this.state.roles;\n        }\n\n        let teamGuest = null;\n        let teamUser = null;\n        let teamAdmin = null;\n        let channelGuest = null;\n        let channelUser = null;\n        let channelAdmin = null;\n\n        if (this.props.schemeId) {\n            if (this.isLoaded(this.props)) {\n                teamGuest = this.props.roles[this.props.scheme.default_team_guest_role];\n                teamUser = this.props.roles[this.props.scheme.default_team_user_role];\n                teamAdmin = this.props.roles[this.props.scheme.default_team_admin_role];\n                channelGuest = this.props.roles[this.props.scheme.default_channel_guest_role];\n                channelUser = this.props.roles[this.props.scheme.default_channel_user_role];\n                channelAdmin = this.props.roles[this.props.scheme.default_channel_admin_role];\n            }\n        } else if (this.isLoaded(this.props)) {\n            teamGuest = this.props.roles.team_guest;\n            teamUser = this.props.roles.team_user;\n            teamAdmin = this.props.roles.team_admin;\n            channelGuest = this.props.roles.channel_guest;\n            channelUser = this.props.roles.channel_user;\n            channelAdmin = this.props.roles.channel_admin;\n        } else {\n            return null;\n        }\n        return {\n            team_admin: teamAdmin,\n            channel_admin: channelAdmin,\n            team_guest: teamGuest,\n            team_user: teamUser,\n            channel_guest: channelGuest,\n            channel_user: channelUser,\n            all_users: {\n                name: 'all_users',\n                displayName: 'All members',\n                permissions: teamUser.permissions.concat(channelUser.permissions),\n            },\n            guests: {\n                name: 'guests',\n                displayName: 'Guests',\n                permissions: teamGuest.permissions.concat(channelGuest.permissions),\n            },\n        };\n    }\n\n    deriveRolesFromGuests = (teamGuest, channelGuest, role) => {\n        return {\n            team_guest: {\n                ...teamGuest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_guest: {\n                ...channelGuest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreGuestPermissions = (teamGuest, channelGuest, roles) => {\n        for (const permission of teamGuest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of channelGuest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_guest.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    deriveRolesFromAllUsers = (baseTeam, baseChannel, role) => {\n        return {\n            team_user: {\n                ...baseTeam,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...baseChannel,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (baseTeam, baseChannel, roles) => {\n        for (const permission of baseTeam.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of baseChannel.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleNameChange = (e) => {\n        this.setState({schemeName: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleDescriptionChange = (e) => {\n        this.setState({schemeDescription: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleSubmit = async () => {\n        const roles = this.getStateRoles();\n        let teamAdmin = roles.team_admin;\n        let channelAdmin = roles.channel_admin;\n        const allUsers = roles.all_users;\n        const guests = roles.guests;\n\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        let teamUser = null;\n        let channelUser = null;\n        let teamGuest = null;\n        let channelGuest = null;\n        let schemeId = null;\n\n        this.setState({saving: true});\n\n        let derived = this.deriveRolesFromAllUsers(\n            roles.team_user,\n            roles.channel_user,\n            allUsers,\n        );\n        derived = this.restoreExcludedPermissions(\n            roles.team_user,\n            roles.channel_user,\n            derived,\n        );\n        teamUser = derived.team_user;\n        channelUser = derived.channel_user;\n\n        let derivedGuests = this.deriveRolesFromGuests(\n            roles.team_guest,\n            roles.channel_guest,\n            guests,\n        );\n        derivedGuests = this.restoreGuestPermissions(\n            roles.team_guest,\n            roles.channel_guest,\n            derivedGuests,\n        );\n        teamGuest = derivedGuests.team_guest;\n        channelGuest = derivedGuests.channel_guest;\n\n        if (this.props.schemeId) {\n            await this.props.actions.patchScheme(this.props.schemeId, {\n                display_name: schemeName,\n                description: schemeDescription,\n            });\n            schemeId = this.props.schemeId;\n        } else {\n            const result = await this.props.actions.createScheme({\n                display_name: schemeName,\n                description: schemeDescription,\n                scope: 'team',\n            });\n            if (result.error) {\n                this.setState({serverError: result.error.message, saving: false, saveNeeded: true});\n                this.props.actions.setNavigationBlocked(true);\n                return;\n            }\n            const newScheme = result.data;\n            schemeId = newScheme.id;\n            await this.props.actions.loadRolesIfNeeded([\n                newScheme.default_team_guest_role,\n                newScheme.default_team_user_role,\n                newScheme.default_team_admin_role,\n                newScheme.default_channel_guest_role,\n                newScheme.default_channel_user_role,\n                newScheme.default_channel_admin_role,\n            ]);\n            teamGuest = {...teamGuest, id: this.props.roles[newScheme.default_team_guest_role].id};\n            teamUser = {...teamUser, id: this.props.roles[newScheme.default_team_user_role].id};\n            teamAdmin = {...teamAdmin, id: this.props.roles[newScheme.default_team_admin_role].id};\n            channelGuest = {...channelGuest, id: this.props.roles[newScheme.default_channel_guest_role].id};\n            channelUser = {...channelUser, id: this.props.roles[newScheme.default_channel_user_role].id};\n            channelAdmin = {...channelAdmin, id: this.props.roles[newScheme.default_channel_admin_role].id};\n        }\n\n        const teamAdminPromise = this.props.actions.editRole(teamAdmin);\n        const channelAdminPromise = this.props.actions.editRole(channelAdmin);\n        const promises = [teamAdminPromise, channelAdminPromise];\n\n        const teamUserPromise = this.props.actions.editRole(teamUser);\n        const channelUserPromise = this.props.actions.editRole(channelUser);\n        promises.push(teamUserPromise);\n        promises.push(channelUserPromise);\n\n        if (this.haveGuestAccountsPermissions()) {\n            const teamGuestPromise = this.props.actions.editRole(teamGuest);\n            const channelGuestPromise = this.props.actions.editRole(channelGuest);\n            promises.push(teamGuestPromise, channelGuestPromise);\n        }\n\n        const currentTeams = new Set((this.state.teams || this.props.teams || []).map((team) => team.id));\n        const serverTeams = new Set((this.props.teams || []).map((team) => team.id));\n\n        // Difference of sets (currentTeams - serverTeams)\n        const addedTeams = new Set([...currentTeams].filter((team) => !serverTeams.has(team)));\n\n        // Difference of sets (serverTeams - currentTeams)\n        const removedTeams = new Set([...serverTeams].filter((team) => !currentTeams.has(team)));\n\n        for (const teamId of addedTeams) {\n            promises.push(this.props.actions.updateTeamScheme(teamId, schemeId));\n        }\n\n        for (const teamId of removedTeams) {\n            promises.push(this.props.actions.updateTeamScheme(teamId, ''));\n        }\n\n        const results = await Promise.all(promises);\n\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n        this.props.history.push('/admin_console/user_management/permissions');\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.getStateRoles()};\n        let role = null;\n        if (roles.team_admin.name === roleId) {\n            role = {...roles.team_admin};\n        } else if (roles.channel_admin.name === roleId) {\n            role = {...roles.channel_admin};\n        } else if (roles.all_users.name === roleId) {\n            role = {...roles.all_users};\n        } else if (roles.guests.name === roleId) {\n            role = {...roles.guests};\n        }\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        if (roles.team_admin.name === roleId) {\n            roles.team_admin = role;\n        } else if (roles.channel_admin.name === roleId) {\n            roles.channel_admin = role;\n        } else if (roles.all_users.name === roleId) {\n            roles.all_users = role;\n        } else if (roles.guests.name === roleId) {\n            roles.guests = role;\n        }\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    removeTeam = (teamId) => {\n        const teams = (this.state.teams || this.props.teams).filter((team) => team.id !== teamId);\n        this.setState({teams, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addTeams = (teams) => {\n        const currentTeams = this.state.teams || this.props.teams || [];\n        this.setState({\n            teams: [...currentTeams, ...teams],\n            saveNeeded: true,\n        });\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    haveGuestAccountsPermissions = () => {\n        return this.props.license.GuestAccountsPermissions === 'true';\n    }\n\n    render = () => {\n        if (!this.isLoaded(this.props)) {\n            return <LoadingScreen/>;\n        }\n        const roles = this.getStateRoles();\n        const teams = this.state.teams || this.props.teams || [];\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        return (\n            <div className='wrapper--fixed'>\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        modalID={ModalIdentifiers.ADD_TEAMS_TO_SCHEME}\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        currentSchemeId={this.props.schemeId}\n                        alreadySelected={teams.map((team) => team.id)}\n                    />\n                }\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.teamScheme'\n                            defaultMessage='Team Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.teamScheme.introBanner'\n                                        defaultMessage='[Team Override Schemes](!https://about.mattermost.com/default-team-override-scheme) set the permissions for Team Admins, Channel Admins and other members in specific teams. Use a Team Override Scheme when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            titleId={t('admin.permissions.teamScheme.schemeDetailsTitle')}\n                            titleDefault='Scheme Details'\n                            subtitleId={t('admin.permissions.teamScheme.schemeDetailsDescription')}\n                            subtitleDefault='Set the name and description for this scheme.'\n                        >\n                            <div className='team-scheme-details'>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-name'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeNameLabel'\n                                            defaultMessage='Scheme Name:'\n                                        />\n                                    </label>\n                                    <LocalizedInput\n                                        id='scheme-name'\n                                        className='form-control'\n                                        type='text'\n                                        value={schemeName}\n                                        placeholder={{id: t('admin.permissions.teamScheme.schemeNamePlaceholder'), defaultMessage: 'Scheme Name'}}\n                                        onChange={this.handleNameChange}\n                                    />\n                                </div>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-description'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeDescriptionLabel'\n                                            defaultMessage='Scheme Description:'\n                                        />\n                                    </label>\n                                    <textarea\n                                        id='scheme-description'\n                                        className='form-control'\n                                        rows='5'\n                                        value={schemeDescription}\n                                        placeholder={localizeMessage('admin.permissions.teamScheme.schemeDescriptionPlaceholder', 'Scheme Description')}\n                                        onChange={this.handleDescriptionChange}\n                                    />\n                                </div>\n                            </div>\n                        </AdminPanel>\n\n                        <AdminPanelWithButton\n                            className='permissions-block'\n                            titleId={t('admin.permissions.teamScheme.selectTeamsTitle')}\n                            titleDefault='Select teams to override permissions'\n                            subtitleId={t('admin.permissions.teamScheme.selectTeamsDescription')}\n                            subtitleDefault='Select teams where permission exceptions are required.'\n                            onButtonClick={this.openAddTeam}\n                            buttonTextId={t('admin.permissions.teamScheme.addTeams')}\n                            buttonTextDefault='Add Teams'\n                        >\n                            <div className='teams-list'>\n                                {teams.length === 0 &&\n                                    <div className='no-team-schemes'>\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.noTeams'\n                                            defaultMessage='No team selected. Please add teams to this list.'\n                                        />\n                                    </div>}\n                                {teams.map((team) => (\n                                    <TeamInList\n                                        key={team.id}\n                                        team={team}\n                                        onRemoveTeam={this.removeTeam}\n                                    />\n                                ))}\n                            </div>\n                        </AdminPanelWithButton>\n\n                        {this.props.license && this.props.config.EnableGuestAccounts === 'true' &&\n                            <AdminPanelTogglable\n                                className='permissions-block'\n                                open={this.state.openRoles.guests}\n                                id='guests'\n                                onToggle={() => this.toggleRole('guests')}\n                                titleId={t('admin.permissions.systemScheme.GuestsTitle')}\n                                titleDefault='Guests'\n                                subtitleId={t('admin.permissions.systemScheme.GuestsDescription')}\n                                subtitleDefault='Permissions granted to guest users.'\n                            >\n                                <GuestPermissionsTree\n                                    selected={this.state.selectedPermission}\n                                    role={roles.guests}\n                                    scope={'team_scope'}\n                                    onToggle={this.togglePermission}\n                                    selectRow={this.selectRow}\n                                    readOnly={!this.haveGuestAccountsPermissions()}\n                                />\n                            </AdminPanelTogglable>\n                        }\n\n                        <AdminPanelTogglable\n                            className='permissions-block all_users'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={roles.all_users}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block channel_admin'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block team_admin'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\n\nimport {getTeamStats} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamInList from './team_in_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        stats: getTeamStats(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTeamStats,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamInList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport {imageURLForTeam} from 'utils/utils';\n\nexport default class TeamInList extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onRemoveTeam: PropTypes.func,\n    }\n\n    render() {\n        const team = this.props.team;\n        return (\n            <div\n                className='team'\n                key={team.id}\n            >\n                <div className='team-info-block'>\n                    <TeamIcon\n                        name={team.display_name}\n                        url={imageURLForTeam(team)}\n                    />\n                    <div className='team-data'>\n                        <div className='title'>{team.display_name}</div>\n                    </div>\n                </div>\n                <a\n                    className='remove'\n                    onClick={() => this.props.onRemoveTeam(team.id)}\n                >\n                    <FormattedMessage\n                        id='admin.permissions.teamScheme.removeTeam'\n                        defaultMessage='Remove'\n                    />\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {deleteScheme} from 'mattermost-redux/actions/schemes';\n\nimport {makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return function mapStateToProps(state, ownProps) {\n        return {\n            teams: getSchemeTeams(state, {schemeId: ownProps.scheme.id}),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteScheme,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionsSchemeSummary);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\n\nconst MAX_TEAMS_PER_SCHEME_SUMMARY = 8;\n\nexport default class PermissionsSchemeSummary extends React.PureComponent {\n    static propTypes = {\n        scheme: PropTypes.object.isRequired,\n        teams: PropTypes.array,\n        actions: PropTypes.shape({\n            deleteScheme: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmModal: false,\n            deleting: false,\n            serverError: null,\n        };\n    }\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.permissions.permissionsSchemeSummary.deleteSchemeTitle'\n                defaultMessage='Delete {scheme} scheme?'\n                values={{scheme: this.props.scheme.display_name}}\n            />\n        );\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='permission-scheme-summary-error-message'>\n                    <i className='fa fa-exclamation-circle'/> {this.state.serverError}\n                </div>\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.permissions.permissionsSchemeSummary.deleteConfirmQuestion'\n                        defaultMessage='The permissions in the teams using this scheme will reset to the defaults in the System Scheme. Are you sure you want to delete the {schemeName} scheme?'\n                        values={{schemeName: this.props.scheme.display_name}}\n                    />\n                </p>\n                {serverError}\n            </div>\n        );\n\n        const confirmButton = (\n            <LoadingWrapper\n                loading={this.state.deleting}\n                text={Utils.localizeMessage('admin.permissions.permissionsSchemeSummary.deleting', 'Deleting...')}\n            >\n                <FormattedMessage\n                    id='admin.permissions.permissionsSchemeSummary.deleteConfirmButton'\n                    defaultMessage='Yes, Delete'\n                />\n            </LoadingWrapper>\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleDeleteConfirmed}\n                onCancel={this.handleDeleteCanceled}\n            />\n        );\n    }\n\n    stopPropagation = (e) => {\n        e.stopPropagation();\n    }\n\n    handleDeleteCanceled = () => {\n        this.setState({\n            showConfirmModal: false,\n        });\n    }\n\n    handleDeleteConfirmed = async () => {\n        this.setState({deleting: true, serverError: null});\n        const data = await this.props.actions.deleteScheme(this.props.scheme.id);\n        if (data.error) {\n            this.setState({deleting: false, serverError: data.error.message});\n        } else {\n            this.setState({deleting: false, showConfirmModal: false});\n        }\n    }\n\n    delete = (e) => {\n        e.stopPropagation();\n        this.setState({showConfirmModal: true, serverError: null});\n    }\n\n    goToEdit = () => {\n        this.props.history.push('/admin_console/user_management/permissions/team_override_scheme/' + this.props.scheme.id);\n    }\n\n    render = () => {\n        const scheme = this.props.scheme;\n\n        let teams = this.props.teams ? this.props.teams.map((team) => (\n            <span\n                className='team'\n                key={team.id}\n            >\n                {team.display_name}\n            </span>\n        )) : [];\n\n        let extraTeams = null;\n        if (teams.length > MAX_TEAMS_PER_SCHEME_SUMMARY) {\n            extraTeams = (\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={\n                        <Tooltip\n                            className='team-scheme-extra-teams-overlay'\n                            id={scheme.id + '-extra-teams-overlay'}\n                        >\n                            {teams.slice(MAX_TEAMS_PER_SCHEME_SUMMARY)}\n                        </Tooltip>\n                    }\n                >\n                    <span\n                        className='team'\n                        key='extra-teams'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionsSchemeSummary.moreTeams'\n                            defaultMessage='+{number} more'\n                            values={{number: teams.length - MAX_TEAMS_PER_SCHEME_SUMMARY}}\n                        />\n                    </span>\n                </OverlayTrigger>\n            );\n            teams = teams.slice(0, MAX_TEAMS_PER_SCHEME_SUMMARY);\n        }\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <div\n                className='permissions-scheme-summary'\n                data-testid='permissions-scheme-summary'\n                onClick={this.goToEdit}\n            >\n                <div onClick={this.stopPropagation}>{confirmModal}</div>\n                <div\n                    className='permissions-scheme-summary--header'\n                >\n                    <div className='title'>\n                        {scheme.display_name}\n                    </div>\n                    <div className='actions'>\n                        <Link\n                            data-testid={`${scheme.display_name}-edit`}\n                            className='edit-button'\n                            to={'/admin_console/user_management/permissions/team_override_scheme/' + scheme.id}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.edit'\n                                defaultMessage='Edit'\n                            />\n                        </Link>\n                        {'-'}\n                        <a\n                            data-testid={`${scheme.display_name}-delete`}\n                            className='delete-button'\n                            onClick={this.delete}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.delete'\n                                defaultMessage='Delete'\n                            />\n                        </a>\n                    </div>\n                </div>\n                <div className='permissions-scheme-summary--description'>\n                    {scheme.description}\n                </div>\n                <div className='permissions-scheme-summary--teams'>\n                    {teams}\n                    {extraTeams}\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionsTree from './permissions_tree.jsx';\n\nexport const EXCLUDED_PERMISSIONS = [\n    Permissions.VIEW_MEMBERS,\n    Permissions.JOIN_PUBLIC_TEAMS,\n    Permissions.LIST_PUBLIC_TEAMS,\n    Permissions.JOIN_PRIVATE_TEAMS,\n    Permissions.LIST_PRIVATE_TEAMS,\n];\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const license = getLicense(state);\n\n    return {\n        config,\n        license,\n    };\n}\n\nexport default connect(mapStateToProps)(PermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class PermissionsTree extends React.PureComponent {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        config: PropTypes.object.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n        license: PropTypes.object,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            edit_post: {\n                editTimeLimitButton: <EditPostTimeLimitButton onClick={this.openPostTimeLimitModal}/>,\n            },\n        };\n\n        this.groups = [\n            {\n                id: 'teams',\n                permissions: [\n                    {\n                        id: 'send_invites',\n                        combined: true,\n                        permissions: [\n                            Permissions.INVITE_USER,\n                            Permissions.GET_PUBLIC_LINK,\n                            Permissions.ADD_USER_TO_TEAM,\n                        ],\n                    },\n                    Permissions.CREATE_TEAM,\n                ],\n            },\n            {\n                id: 'public_channel',\n                permissions: [\n                    Permissions.CREATE_PUBLIC_CHANNEL,\n                    Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES,\n                    Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS,\n                    Permissions.DELETE_PUBLIC_CHANNEL,\n                ],\n            },\n            {\n                id: 'private_channel',\n                permissions: [\n                    Permissions.CREATE_PRIVATE_CHANNEL,\n                    Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES,\n                    Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS,\n                    Permissions.DELETE_PRIVATE_CHANNEL,\n                ],\n            },\n            {\n                id: 'posts',\n                permissions: [\n                    {\n                        id: 'edit_posts',\n                        permissions: [\n                            Permissions.EDIT_POST,\n                            Permissions.EDIT_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'delete_posts',\n                        permissions: [\n                            Permissions.DELETE_POST,\n                            Permissions.DELETE_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'reactions',\n                        combined: true,\n                        permissions: [\n                            Permissions.ADD_REACTION,\n                            Permissions.REMOVE_REACTION,\n                        ],\n                    },\n                    Permissions.USE_CHANNEL_MENTIONS,\n                ],\n            },\n            {\n                id: 'integrations',\n                permissions: [\n                ],\n            },\n        ];\n        this.updateGroups();\n    }\n\n    updateGroups = () => {\n        const {config, scope, license} = this.props;\n        const integrationsGroup = this.groups[this.groups.length - 1];\n        const postsGroup = this.groups[this.groups.length - 2];\n        const teamsGroup = this.groups[0];\n        if (config.EnableIncomingWebhooks === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_INCOMING_WEBHOOKS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_INCOMING_WEBHOOKS);\n        }\n        if (config.EnableOutgoingWebhooks === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_OUTGOING_WEBHOOKS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OUTGOING_WEBHOOKS);\n        }\n        if (config.EnableOAuthServiceProvider === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_OAUTH)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OAUTH);\n        }\n        if (config.EnableCommands === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_SLASH_COMMANDS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_SLASH_COMMANDS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.CREATE_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.CREATE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.DELETE_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.DELETE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.DELETE_OTHERS_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.DELETE_OTHERS_EMOJIS);\n        }\n        if (config.EnableGuestAccounts === 'true' && !teamsGroup.permissions.includes(Permissions.INVITE_GUEST)) {\n            teamsGroup.permissions.push(Permissions.INVITE_GUEST);\n        }\n        if (scope === 'team_scope' && this.groups[0].id !== 'teams_team_scope') {\n            this.groups[0].id = 'teams_team_scope';\n        }\n        if (license?.IsLicensed === 'true' && license?.LDAPGroups === 'true' && !postsGroup.permissions.includes(Permissions.USE_GROUP_MENTIONS)) {\n            postsGroup.permissions.push(Permissions.USE_GROUP_MENTIONS);\n        }\n        postsGroup.permissions.push(Permissions.CREATE_POST);\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.config !== prevProps.config || this.props.license !== prevProps.license) {\n            this.updateGroups();\n        }\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.groups}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {\n    getPlugins,\n    getPluginStatuses,\n    removePlugin,\n    uploadPlugin,\n    installPluginFromUrl,\n    enablePlugin,\n    disablePlugin,\n} from 'mattermost-redux/actions/admin';\n\nimport PluginManagement from './plugin_management.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        plugins: state.entities.admin.plugins,\n        pluginStatuses: state.entities.admin.pluginStatuses,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            uploadPlugin,\n            installPluginFromUrl,\n            removePlugin,\n            getPlugins,\n            getPluginStatuses,\n            enablePlugin,\n            disablePlugin,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PluginManagement);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PluginState from 'mattermost-redux/constants/plugins';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nimport AdminSettings from '../admin_settings';\nimport BooleanSetting from '../boolean_setting';\nimport SettingsGroup from '../settings_group.jsx';\nimport TextSetting from '../text_setting';\n\nconst PluginItemState = ({state}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.not_running'\n                defaultMessage='Not running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.starting'\n                defaultMessage='Starting'\n            />\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.running'\n                defaultMessage='Running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_start'\n                defaultMessage='Failed to start'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_stay_running'\n                defaultMessage='Crashing'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.stopping'\n                defaultMessage='Stopping'\n            />\n        );\n    default:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.unknown'\n                defaultMessage='Unknown'\n            />\n        );\n    }\n};\n\nPluginItemState.propTypes = {\n    state: PropTypes.number.isRequired,\n};\n\nconst PluginItemStateDescription = ({state}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-ban'/>\n                <FormattedMessage\n                    id='admin.plugin.state.not_running.description'\n                    defaultMessage='This plugin is not enabled.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.starting.description'\n                    defaultMessage='This plugin is starting.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-check'/>\n                <FormattedMessage\n                    id='admin.plugin.state.running.description'\n                    defaultMessage='This plugin is running.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_start.description'\n                    defaultMessage='This plugin failed to start. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_stay_running.description'\n                    defaultMessage='This plugin crashed multiple times and is no longer running. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.stopping.description'\n                    defaultMessage='This plugin is stopping.'\n                />\n            </div>\n        );\n    default:\n        return null;\n    }\n};\n\nPluginItemStateDescription.propTypes = {\n    state: PropTypes.number.isRequired,\n};\n\nconst PluginItem = ({\n    pluginStatus,\n    removing,\n    handleEnable,\n    handleDisable,\n    handleRemove,\n    showInstances,\n    hasSettings,\n}) => {\n    let activateButton;\n    const activating = pluginStatus.state === PluginState.PLUGIN_STATE_STARTING;\n    const deactivating = pluginStatus.state === PluginState.PLUGIN_STATE_STOPPING;\n\n    if (pluginStatus.active) {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                disabled={deactivating}\n                onClick={handleDisable}\n            >\n                {deactivating ?\n                    <FormattedMessage\n                        id='admin.plugin.disabling'\n                        defaultMessage='Disabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.disable'\n                        defaultMessage='Disable'\n                    />\n                }\n            </a>\n        );\n    } else {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                disabled={activating}\n                onClick={handleEnable}\n            >\n                {activating ?\n                    <FormattedMessage\n                        id='admin.plugin.enabling'\n                        defaultMessage='Enabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.enable'\n                        defaultMessage='Enable'\n                    />\n                }\n            </a>\n        );\n    }\n\n    let settingsButton = null;\n    if (hasSettings) {\n        settingsButton = (\n            <span>\n                {' - '}\n                <Link\n                    to={'/admin_console/plugins/plugin_' + pluginStatus.id}\n                >\n                    <FormattedMessage\n                        id='admin.plugin.settingsButton'\n                        defaultMessage='Settings'\n                    />\n                </Link>\n            </span>\n        );\n    }\n\n    let removeButtonText;\n    if (removing) {\n        removeButtonText = (\n            <FormattedMessage\n                id='admin.plugin.removing'\n                defaultMessage='Removing...'\n            />\n        );\n    } else {\n        removeButtonText = (\n            <FormattedMessage\n                id='admin.plugin.remove'\n                defaultMessage='Remove'\n            />\n        );\n    }\n    const removeButton = (\n        <span>\n            {' - '}\n            <a\n                data-plugin-id={pluginStatus.id}\n                disabled={removing}\n                onClick={handleRemove}\n            >\n                {removeButtonText}\n            </a>\n        </span>\n    );\n\n    let description;\n    if (pluginStatus.description) {\n        description = (\n            <div className='pt-2'>\n                {pluginStatus.description}\n            </div>\n        );\n    }\n\n    const notices = [];\n    if (pluginStatus.instances.some((instance) => instance.version !== pluginStatus.version)) {\n        notices.push(\n            <div\n                key='multiple-versions'\n                className='alert alert-warning'\n            >\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.multiple_versions_warning'\n                    defaultMessage='There are multiple versions of this plugin installed across your cluster. Re-install this plugin to ensure it works consistently.'\n                />\n            </div>,\n        );\n    }\n\n    notices.push(\n        <PluginItemStateDescription\n            key='state-description'\n            state={pluginStatus.state}\n        />,\n    );\n\n    const instances = pluginStatus.instances.slice();\n    instances.sort((a, b) => {\n        if (a.cluster_id < b.cluster_id) {\n            return -1;\n        } else if (a.cluster_id > b.cluster_id) {\n            return 1;\n        }\n\n        return 0;\n    });\n\n    let clusterSummary;\n    if (showInstances) {\n        clusterSummary = (\n            <div className='pt-3 pb-3'>\n                <div className='row'>\n                    <div className='col-md-6'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.cluster_instance'\n                                defaultMessage='Cluster Instance'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.version_title'\n                                defaultMessage='Version'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.state'\n                                defaultMessage='State'\n                            />\n                        </strong>\n                    </div>\n                </div>\n                {instances.map((instance) => (\n                    <div\n                        key={instance.cluster_id}\n                        className='row'\n                    >\n                        <div className='col-md-6'>\n                            {instance.cluster_id}\n                        </div>\n                        <div className='col-md-3'>\n                            {instance.version}\n                        </div>\n                        <div className='col-md-3'>\n                            <PluginItemState state={instance.state}/>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div data-testid={pluginStatus.id}>\n            <div>\n                <strong>{pluginStatus.name}</strong>\n                {' ('}\n                {pluginStatus.id}\n                {' - '}\n                {pluginStatus.version}\n                {')'}\n            </div>\n            {description}\n            <div className='pt-2'>\n                {activateButton}\n                {removeButton}\n                {settingsButton}\n            </div>\n            <div>\n                {notices}\n            </div>\n            <div>\n                {clusterSummary}\n            </div>\n            <hr/>\n        </div>\n    );\n};\n\nPluginItem.propTypes = {\n    pluginStatus: PropTypes.object.isRequired,\n    removing: PropTypes.bool.isRequired,\n    handleEnable: PropTypes.func.isRequired,\n    handleDisable: PropTypes.func.isRequired,\n    handleRemove: PropTypes.func.isRequired,\n    showInstances: PropTypes.bool.isRequired,\n    hasSettings: PropTypes.bool.isRequired,\n};\n\nexport default class PluginManagement extends AdminSettings {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        pluginStatuses: PropTypes.object.isRequired,\n        plugins: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            uploadPlugin: PropTypes.func.isRequired,\n            removePlugin: PropTypes.func.isRequired,\n            getPlugins: PropTypes.func.isRequired,\n            getPluginStatuses: PropTypes.func.isRequired,\n            enablePlugin: PropTypes.func.isRequired,\n            disablePlugin: PropTypes.func.isRequired,\n            installPluginFromUrl: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            loading: true,\n            fileSelected: false,\n            file: null,\n            pluginDownloadUrl: '',\n            serverError: null,\n            lastMessage: null,\n            uploading: false,\n            installing: false,\n            overwritingUpload: false,\n            confirmOverwriteUploadModal: false,\n            overwritingInstall: false,\n            confirmOverwriteInstallModal: false,\n            showRemoveModal: false,\n            resolveRemoveModal: null,\n        });\n    }\n\n    getConfigFromState = (config) => {\n        config.PluginSettings.Enable = this.state.enable;\n        config.PluginSettings.EnableUploads = this.state.enableUploads;\n        config.PluginSettings.AllowInsecureDownloadUrl = this.state.allowInsecureDownloadUrl;\n        config.PluginSettings.EnableMarketplace = this.state.enableMarketplace;\n        config.PluginSettings.EnableRemoteMarketplace = this.state.enableRemoteMarketplace;\n        config.PluginSettings.AutomaticPrepackagedPlugins = this.state.automaticPrepackagedPlugins;\n        config.PluginSettings.MarketplaceUrl = this.state.marketplaceUrl;\n        config.PluginSettings.RequirePluginSignature = this.state.requirePluginSignature;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const state = {\n            enable: config.PluginSettings.Enable,\n            enableUploads: config.PluginSettings.EnableUploads,\n            allowInsecureDownloadUrl: config.PluginSettings.AllowInsecureDownloadUrl,\n            enableMarketplace: config.PluginSettings.EnableMarketplace,\n            enableRemoteMarketplace: config.PluginSettings.EnableRemoteMarketplace,\n            automaticPrepackagedPlugins: config.PluginSettings.AutomaticPrepackagedPlugins,\n            marketplaceUrl: config.PluginSettings.MarketplaceUrl,\n            requirePluginSignature: config.PluginSettings.RequirePluginSignature,\n        };\n\n        return state;\n    }\n\n    componentDidMount() {\n        if (this.state.enable) {\n            this.props.actions.getPluginStatuses().then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    handleUpload = () => {\n        this.setState({lastMessage: null, serverError: null});\n        const element = this.refs.fileInput;\n        if (element.files.length > 0) {\n            this.setState({fileSelected: true, file: element.files[0]});\n        }\n    }\n\n    helpSubmitUpload = async (file, force) => {\n        this.setState({uploading: true});\n        const {error} = await this.props.actions.uploadPlugin(file, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteUploadModal: true, overwritingUpload: true});\n                return;\n            }\n            this.setState({\n                file: null,\n                fileSelected: false,\n                uploading: false,\n            });\n            if (error.server_error_id === 'app.plugin.activate.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.activate', 'Unable to upload the plugin. It may conflict with another plugin on your server.')});\n            } else if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            this.setState({file: null, fileSelected: false});\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully uploaded plugin from ${file.name}`;\n        if (this.state.overwritingUpload) {\n            msg = `Successfully updated plugin from ${file.name}`;\n        }\n\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            lastMessage: msg,\n            overwritingUpload: false,\n            uploading: false,\n            loading: false,\n        });\n    }\n\n    handleSubmitUpload = (e) => {\n        e.preventDefault();\n\n        const element = this.refs.fileInput;\n        if (element.files.length === 0) {\n            return;\n        }\n        const file = element.files[0];\n\n        this.helpSubmitUpload(file, false);\n        Utils.clearFileInput(element);\n    }\n\n    handleOverwriteUploadPluginCancel = () => {\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            confirmOverwriteUploadModal: false,\n            lastMessage: null,\n            uploading: false,\n        });\n    }\n\n    handleOverwriteUploadPlugin = () => {\n        this.setState({confirmOverwriteUploadModal: false});\n        this.helpSubmitUpload(this.state.file, true);\n    }\n\n    onPluginDownloadUrlChange = (e) => {\n        this.setState({\n            pluginDownloadUrl: e.target.value,\n        });\n    }\n\n    installFromUrl = async (force) => {\n        const {pluginDownloadUrl} = this.state;\n\n        this.setState({\n            installing: true,\n            serverError: null,\n            lastMessage: null,\n        });\n        const {error} = await this.props.actions.installPluginFromUrl(pluginDownloadUrl, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteInstallModal: true, overwritingInstall: true});\n                return;\n            }\n\n            this.setState({\n                installing: false,\n            });\n\n            if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully installed plugin from ${pluginDownloadUrl}`;\n        if (this.state.overwritingInstall) {\n            msg = `Successfully updated plugin from ${pluginDownloadUrl}`;\n        }\n\n        this.setState({\n            serverError: null,\n            lastMessage: msg,\n            overwritingInstall: false,\n            installing: false,\n            loading: false,\n        });\n    }\n\n    getMarketplaceUrlHelpText = (url) => {\n        return (\n            <div>\n                {\n                    url === '' &&\n                    <div className='alert-warning'>\n                        <i className='fa fa-warning'/>\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.marketplaceUrlDesc.empty'\n                            defaultMessage=' Marketplace URL is a required field.'\n                        />\n                    </div>\n                }\n                {\n                    url !== '' &&\n                    <FormattedMarkdownMessage\n                        id='admin.plugins.settings.marketplaceUrlDesc'\n                        defaultMessage='URL of the marketplace server.'\n                    />\n                }\n            </div>\n        );\n    }\n\n    canSave = () => {\n        return this.state.marketplaceUrl !== '';\n    }\n\n    handleSubmitInstall = (e) => {\n        e.preventDefault();\n        return this.installFromUrl(false);\n    }\n\n    handleOverwriteInstallPluginCancel = () => {\n        this.setState({\n            confirmOverwriteInstallModal: false,\n            installing: false,\n            serverError: null,\n            lastMessage: null,\n        });\n    }\n\n    handleOverwriteInstallPlugin = () => {\n        this.setState({confirmOverwriteInstallModal: false});\n        return this.installFromUrl(true);\n    }\n\n    showRemovePluginModal = (e) => {\n        e.preventDefault();\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n        this.setState({showRemoveModal: true, removing: pluginId});\n    }\n\n    handleRemovePluginCancel = () => {\n        this.setState({showRemoveModal: false, removing: null});\n    }\n\n    handleRemovePlugin = () => {\n        this.setState({showRemoveModal: false});\n        this.handleRemove();\n    }\n\n    handleRemove = async () => {\n        this.setState({lastMessage: null, serverError: null});\n        const {error} = await this.props.actions.removePlugin(this.state.removing);\n        this.setState({removing: null});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    handleEnable = async (e) => {\n        e.preventDefault();\n        this.setState({lastMessage: null, serverError: null});\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n\n        const {error} = await this.props.actions.enablePlugin(pluginId);\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    handleDisable = async (e) => {\n        this.setState({lastMessage: null, serverError: null});\n        e.preventDefault();\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n\n        const {error} = await this.props.actions.disablePlugin(pluginId);\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.plugin.management.title'\n                defaultMessage='Management'\n            />\n        );\n    }\n\n    renderOverwritePluginModal = ({show, onConfirm, onCancel}) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.title'\n                defaultMessage='Overwrite existing plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.desc'\n                defaultMessage='A plugin with this ID already exists. Would you like to overwrite it?'\n            />\n        );\n\n        const overwriteButton = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.overwrite'\n                defaultMessage='Overwrite'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={overwriteButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderRemovePluginModal = ({show, onConfirm, onCancel}) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.title'\n                defaultMessage='Remove plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.desc'\n                defaultMessage='Are you sure you would like to remove the plugin?'\n            />\n        );\n\n        const removeButton = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.overwrite'\n                defaultMessage='Remove'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={removeButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderEnablePluginsSetting = () => {\n        const hideEnablePlugins = this.props.config.ExperimentalSettings.RestrictSystemAdmin;\n        if (!hideEnablePlugins) {\n            return (\n                <BooleanSetting\n                    id='enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.plugins.settings.enable'\n                            defaultMessage='Enable Plugins: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.enableDesc'\n                            defaultMessage='When true, enables plugins on your Mattermost server. Use plugins to integrate with third-party systems, extend functionality, or customize the user interface of your Mattermost server. See [documentation](https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                        />\n                    }\n                    value={this.state.enable}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('PluginSettings.Enable')}\n                />\n            );\n        }\n        return null;\n    }\n\n    renderSettings = () => {\n        const {enableUploads} = this.state;\n        const enable = this.props.config.PluginSettings.Enable;\n        let serverError = '';\n        let lastMessage = '';\n\n        // Using props values to make sure these are set on the server and not just locally\n        const enableUploadButton = enableUploads && enable && !this.props.config.PluginSettings.RequirePluginSignature;\n\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error half'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n        if (this.state.lastMessage) {\n            lastMessage = <div className='col-sm-12'><div className='form-group half'>{this.state.lastMessage}</div></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.file) {\n            fileName = this.state.file.name;\n        }\n\n        let uploadButtonText;\n        if (this.state.uploading) {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.uploading'\n                    defaultMessage='Uploading...'\n                />\n            );\n        } else {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.upload'\n                    defaultMessage='Upload'\n                />\n            );\n        }\n\n        let pluginsList;\n        let pluginsContainer;\n        let pluginsListContainer;\n        const plugins = Object.values(this.props.pluginStatuses);\n        if (this.state.loading) {\n            pluginsList = <LoadingScreen/>;\n        } else if (plugins.length === 0) {\n            pluginsListContainer = (\n                <FormattedMessage\n                    id='admin.plugin.no_plugins'\n                    defaultMessage='No installed plugins.'\n                />\n            );\n        } else {\n            const showInstances = plugins.some((pluginStatus) => pluginStatus.instances.length > 1);\n            plugins.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                } else if (a.name > b.name) {\n                    return 1;\n                }\n\n                return 0;\n            });\n\n            pluginsList = plugins.map((pluginStatus) => {\n                const p = this.props.plugins[pluginStatus.id];\n                const hasSettings = Boolean(p && p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || (p.settings_schema.settings && p.settings_schema.settings.length > 0)));\n                return (\n                    <PluginItem\n                        key={pluginStatus.id}\n                        pluginStatus={pluginStatus}\n                        removing={this.state.removing === pluginStatus.id}\n                        handleEnable={this.handleEnable}\n                        handleDisable={this.handleDisable}\n                        handleRemove={this.showRemovePluginModal}\n                        showInstances={showInstances}\n                        hasSettings={hasSettings}\n                    />\n                );\n            });\n\n            pluginsListContainer = (\n                <div className='alert alert-transparent'>\n                    {pluginsList}\n                </div>\n            );\n        }\n\n        if (enable) {\n            pluginsContainer = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.plugin.installedTitle'\n                            defaultMessage='Installed Plugins: '\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <p className='help-text'>\n                            <FormattedHTMLMessage\n                                id='admin.plugin.installedDesc'\n                                defaultMessage='Installed plugins on your Mattermost server.'\n                            />\n                        </p>\n                        <br/>\n                        {pluginsListContainer}\n                    </div>\n                </div>\n            );\n        }\n\n        let uploadHelpText;\n\n        if (enableUploads && enable) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDesc'\n                    defaultMessage='Upload a plugin for your Mattermost server. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else if (enable && !enableUploads) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDisabledDesc'\n                    defaultMessage='Enable plugin uploads in config.json. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadAndPluginDisabledDesc'\n                    defaultMessage='To enable plugins, set **Enable Plugins** to true. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        }\n\n        const overwriteUploadPluginModal = this.state.confirmOverwriteUploadModal && this.renderOverwritePluginModal({\n            show: this.state.confirmOverwriteUploadModal,\n            onConfirm: this.handleOverwriteUploadPlugin,\n            onCancel: this.handleOverwriteUploadPluginCancel,\n        });\n\n        const removePluginModal = this.state.showRemoveModal && this.renderRemovePluginModal({\n            show: this.state.showRemoveModal,\n            onConfirm: this.handleRemovePlugin,\n            onCancel: this.handleRemovePluginCancel,\n        });\n\n        return (\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <SettingsGroup\n                        id={'PluginSettings'}\n                        container={false}\n                    >\n                        {this.renderEnablePluginsSetting()}\n\n                        <BooleanSetting\n                            id='requirePluginSignature'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.requirePluginSignature'\n                                    defaultMessage='Require Plugin Signature:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.requirePluginSignatureDesc'\n                                    defaultMessage='When true, uploading plugins is disabled and may only be installed through the Marketplace. Plugins are always verified during Mattermost server startup and initialization. See [documentation](!https://mattermost.com/pl/default-plugin-signing) to learn more.'\n                                />\n                            }\n                            value={this.state.requirePluginSignature}\n                            disabled={!this.state.enable}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.RequirePluginSignature')}\n                        />\n                        <BooleanSetting\n                            id='automaticPrepackagedPlugins'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.automaticPrepackagedPlugins'\n                                    defaultMessage='Enable Automatic Prepackaged Plugins:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.automaticPrepackagedPluginsDesc'\n                                    defaultMessage='When true, automatically installs any prepackaged plugin found to be enabled in the server configuration.'\n                                />\n                            }\n                            value={this.state.automaticPrepackagedPlugins}\n                            disabled={!this.state.enable}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.AutomaticPrepackagedPlugins')}\n                        />\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                            >\n                                <FormattedMessage\n                                    id='admin.plugin.uploadTitle'\n                                    defaultMessage='Upload Plugin: '\n                                />\n                            </label>\n                            <div className='col-sm-8'>\n                                <div className='file__upload'>\n                                    <button\n                                        className={classNames(['btn', {'btn-primary': enableUploads}])}\n                                        disabled={!enableUploadButton}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.plugin.choose'\n                                            defaultMessage='Choose File'\n                                        />\n                                    </button>\n                                    <input\n                                        ref='fileInput'\n                                        type='file'\n                                        accept='.gz'\n                                        onChange={this.handleUpload}\n                                        disabled={!enableUploadButton}\n                                    />\n                                </div>\n                                <button\n                                    className={btnClass}\n                                    id='uploadPlugin'\n                                    disabled={!this.state.fileSelected}\n                                    onClick={this.handleSubmitUpload}\n                                >\n                                    {uploadButtonText}\n                                </button>\n                                <div className='help-text m-0'>\n                                    {fileName}\n                                </div>\n                                {serverError}\n                                {lastMessage}\n                                <p className='help-text'>\n                                    {uploadHelpText}\n                                </p>\n                            </div>\n                        </div>\n                        <BooleanSetting\n                            id='enableMarketplace'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.enableMarketplace'\n                                    defaultMessage='Enable Marketplace:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.enableMarketplaceDesc'\n                                    defaultMessage='When true, enables System Administrators to install plugins from the [marketplace](!https://mattermost.com/pl/default-mattermost-marketplace.html).'\n                                />\n                            }\n                            value={this.state.enableMarketplace}\n                            disabled={!this.state.enable}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.EnableMarketplace')}\n                        />\n                        <BooleanSetting\n                            id='enableRemoteMarketplace'\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.enableRemoteMarketplace'\n                                    defaultMessage='Enable Remote Marketplace:'\n                                />\n                            }\n                            helpText={\n                                <FormattedMarkdownMessage\n                                    id='admin.plugins.settings.enableRemoteMarketplaceDesc'\n                                    defaultMessage='When true, marketplace fetches latest plugins from the configured Marketplace URL.'\n                                />\n                            }\n                            value={this.state.enableRemoteMarketplace}\n                            disabled={!this.state.enable || !this.state.enableMarketplace}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.EnableRemoteMarketplace')}\n                        />\n                        <TextSetting\n                            id={'marketplaceUrl'}\n                            type={'input'}\n                            label={\n                                <FormattedMessage\n                                    id='admin.plugins.settings.marketplaceUrl'\n                                    defaultMessage='Marketplace URL:'\n                                />\n                            }\n                            helpText={this.getMarketplaceUrlHelpText(this.state.marketplaceUrl)}\n                            value={this.state.marketplaceUrl}\n                            disabled={!this.state.enable || !this.state.enableMarketplace || !this.state.enableRemoteMarketplace}\n                            onChange={this.handleChange}\n                            setByEnv={this.isSetByEnv('PluginSettings.MarketplaceUrl')}\n                        />\n                        {pluginsContainer}\n                    </SettingsGroup>\n                    {overwriteUploadPluginModal}\n                    {removePluginModal}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nconst PUSH_NOTIFICATIONS_OFF = 'off';\nconst PUSH_NOTIFICATIONS_MHPNS = 'mhpns';\nconst PUSH_NOTIFICATIONS_MTPNS = 'mtpns';\nconst PUSH_NOTIFICATIONS_CUSTOM = 'custom';\n\nexport default class PushSettings extends AdminSettings {\n    canSave = () => {\n        return this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_MHPNS || this.state.agree;\n    }\n\n    handleAgreeChange = (e) => {\n        this.setState({\n            agree: e.target.checked,\n        });\n    }\n\n    handleDropdownChange = (id, value) => {\n        if (id === 'pushNotificationServerType') {\n            this.setState({\n                agree: false,\n            });\n\n            if (value === PUSH_NOTIFICATIONS_MHPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MHPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_MTPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MTPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_CUSTOM &&\n                (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS ||\n                this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS)) {\n                this.setState({\n                    pushNotificationServer: '',\n                });\n            }\n        }\n\n        this.handleChange(id, value);\n    }\n\n    getConfigFromState = (config) => {\n        config.EmailSettings.SendPushNotifications = this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_OFF;\n        config.EmailSettings.PushNotificationServer = this.state.pushNotificationServer.trim();\n        config.TeamSettings.MaxNotificationsPerChannel = this.state.maxNotificationsPerChannel;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        let pushNotificationServerType = PUSH_NOTIFICATIONS_CUSTOM;\n        let agree = false;\n        if (!config.EmailSettings.SendPushNotifications) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_OFF;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MHPNS &&\n            this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MHPNS;\n            agree = true;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MTPNS) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MTPNS;\n        }\n\n        let pushNotificationServer = config.EmailSettings.PushNotificationServer;\n        if (pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushNotificationServer = Constants.MTPNS;\n        } else if (pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushNotificationServer = Constants.MHPNS;\n        }\n\n        const maxNotificationsPerChannel = config.TeamSettings.MaxNotificationsPerChannel;\n\n        return {\n            pushNotificationServerType,\n            pushNotificationServer,\n            maxNotificationsPerChannel,\n            agree,\n        };\n    }\n\n    isPushNotificationServerSetByEnv = () => {\n        // Assume that if one of these has been set using an environment variable,\n        // all of them have been set that way\n        return this.isSetByEnv('EmailSettings.SendPushNotifications') ||\n            this.isSetByEnv('EmailSettings.PushNotificationServer');\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.environment.pushNotificationServer'\n                defaultMessage='Push Notification Server'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const pushNotificationServerTypes = [];\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_OFF, text: Utils.localizeMessage('admin.email.pushOff', 'Do not send push notifications')});\n        if (this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MHPNS, text: Utils.localizeMessage('admin.email.mhpns', 'Use HPNS connection with uptime SLA to send notifications to iOS and Android apps')});\n        }\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MTPNS, text: Utils.localizeMessage('admin.email.mtpns', 'Use TPNS connection to send notifications to iOS and Android apps')});\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_CUSTOM, text: Utils.localizeMessage('admin.email.selfPush', 'Manually enter Push Notification Service location')});\n\n        let sendHelpText = null;\n        let pushServerHelpText = null;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_OFF) {\n            sendHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.pushOffHelp'\n                    defaultMessage='Please see [documentation on push notifications](!https://about.mattermost.com/default-mobile-push-notifications/) to learn more about setup options.'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mhpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Hosted Push Notification Service](!https://about.mattermost.com/default-hpns/).'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mtpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Test Push Notification Service](!https://about.mattermost.com/default-tpns/).'\n                />\n            );\n        } else {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.easHelp'\n                    defaultMessage='Learn more about compiling and deploying your own mobile apps from an [Enterprise App Store](!https://about.mattermost.com/default-enterprise-app-store).'\n                />\n            );\n        }\n\n        let tosCheckbox;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            tosCheckbox = (\n                <div className='form-group'>\n                    <div className='col-sm-4'/>\n                    <div className='col-sm-8'>\n                        <input\n                            type='checkbox'\n                            ref='agree'\n                            checked={this.state.agree}\n                            onChange={this.handleAgreeChange}\n                        />\n                        <FormattedMarkdownMessage\n                            id='admin.email.agreeHPNS'\n                            defaultMessage=' I understand and accept the Mattermost Hosted Push Notification Service [Terms of Service](!https://about.mattermost.com/hpns-terms/) and [Privacy Policy](!https://about.mattermost.com/hpns-privacy/).'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <DropdownSetting\n                    id='pushNotificationServerType'\n                    values={pushNotificationServerTypes}\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushTitle'\n                            defaultMessage='Enable Push Notifications: '\n                        />\n                    }\n                    value={this.state.pushNotificationServerType}\n                    onChange={this.handleDropdownChange}\n                    helpText={sendHelpText}\n                    setByEnv={this.isPushNotificationServerSetByEnv()}\n                />\n                {tosCheckbox}\n                <TextSetting\n                    id='pushNotificationServer'\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushServerTitle'\n                            defaultMessage='Push Notification Server:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.email.pushServerEx', 'E.g.: \"https://push-test.mattermost.com\"')}\n                    helpText={pushServerHelpText}\n                    value={this.state.pushNotificationServer}\n                    onChange={this.handleChange}\n                    disabled={this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_CUSTOM}\n                    setByEnv={this.isSetByEnv('EmailSettings.PushNotificationServer')}\n                />\n                <TextSetting\n                    id='maxNotificationsPerChannel'\n                    type='number'\n                    label={\n                        <FormattedMessage\n                            id='admin.team.maxNotificationsPerChannelTitle'\n                            defaultMessage='Max Notifications Per Channel:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.team.maxNotificationsPerChannelExample', 'E.g.: \"1000\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.team.maxNotificationsPerChannelDescription'\n                            defaultMessage='Maximum total number of users in a channel before users typing messages, @all, @here, and @channel no longer send notifications because of performance.'\n                        />\n                    }\n                    value={this.state.maxNotificationsPerChannel}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('TeamSettings.MaxNotificationsPerChannel')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport Setting from './setting';\n\ninterface Props {\n    id: string;\n    label: React.ReactNode;\n    values: { text: string; value: string }[];\n    value: string;\n    setByEnv: boolean;\n    disabled?: boolean;\n    helpText?: React.ReactNode;\n    onChange(id: string, value: any): void;\n}\nexport default class RadioSetting extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value);\n    };\n\n    render(): JSX.Element {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <div\n                    className='radio'\n                    key={value}\n                >\n                    <label>\n                        <input\n                            type='radio'\n                            value={value}\n                            name={this.props.id}\n                            checked={value === this.props.value}\n                            onChange={this.handleChange}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        />\n                        {text}\n                    </label>\n                </div>,\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                {options}\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class RemoveFileSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            removeButtonText: PropTypes.node.isRequired,\n            removingText: PropTypes.node,\n            fileName: PropTypes.string.isRequired,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n        };\n    }\n\n    handleRemove = (e) => {\n        e.preventDefault();\n\n        $(this.refs.remove_button).button('loading');\n        this.props.onSubmit(this.props.id, () => {\n            $(this.refs.remove_button).button('reset');\n        });\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='help-text remove-filename'>\n                        {this.props.fileName}\n                    </div>\n                    <button\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        ref='remove_button'\n                        disabled={this.props.disabled}\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.removingText}`}\n                    >\n                        {this.props.removeButtonText}\n                    </button>\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\nimport SuccessIcon from 'components/widgets/icons/fa_success_icon';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\n/**\n * A button which, when clicked, performs an action and displays\n * its outcome as either success, or failure accompanied by the\n * `message` property of the `err` object.\n */\nexport default class RequestButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * TD to assign to the form\n         */\n        id: PropTypes.string,\n\n        /**\n         * The action to be called to carry out the request.\n         */\n        requestAction: PropTypes.func.isRequired,\n\n        /**\n         * A component that displays help text for the request button.\n         *\n         * Typically, this will be a <FormattedMessage/>.\n         */\n        helpText: PropTypes.element,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        loadingText: PropTypes.string,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        buttonText: PropTypes.element.isRequired,\n\n        /**\n         * The element to display as the field label.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        label: PropTypes.element,\n\n        /**\n         * True if the button form control should be disabled, otherwise false.\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * True if the config needs to be saved before running the request, otherwise false.\n         *\n         * If set to true, the action provided in the `saveConfigAction` property will be\n         * called before the action provided in the `requestAction` property, with the later\n         * only being called if the former is successful.\n         */\n        saveNeeded: PropTypes.bool,\n\n        /**\n         * Action to be called to save the config, if saveNeeded is set to true.\n         */\n        saveConfigAction: PropTypes.func,\n\n        /**\n         * True if the success message should be show when the request completes successfully,\n         * otherwise false.\n         */\n        showSuccessMessage: PropTypes.bool,\n\n        /**\n         * The message to show when the request completes successfully.\n         */\n        successMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the success message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the success message.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * The message to show when the request returns an error.\n         */\n        errorMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the error message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the error message.\n             *\n             * The placeholder {error} may be used to include the error message returned\n             * by the server in response to the failed request.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * True if the {error} placeholder for the `errorMessage` property should include both\n         * the `message` and `detailed_error` properties of the error returned from the server,\n         * otherwise false to include only the `message` property.\n         */\n        includeDetailedError: PropTypes.bool,\n\n        /**\n         * An element to display adjacent to the request button.\n         */\n        alternativeActionElement: PropTypes.element,\n    }\n\n    static defaultProps = {\n        id: null,\n        disabled: false,\n        saveNeeded: false,\n        showSuccessMessage: true,\n        includeDetailedError: false,\n        successMessage: {\n            id: t('admin.requestButton.requestSuccess'),\n            defaultMessage: 'Test Successful',\n        },\n        errorMessage: {\n            id: t('admin.requestButton.requestFailure'),\n            defaultMessage: 'Test Failure: {error}',\n        },\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            busy: false,\n            fail: null,\n            success: false,\n        };\n    }\n\n    handleRequest = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            busy: true,\n            fail: null,\n            success: false,\n        });\n\n        const doRequest = () => { //eslint-disable-line func-style\n            this.props.requestAction(\n                () => {\n                    this.setState({\n                        busy: false,\n                        success: true,\n                    });\n                },\n                (err) => {\n                    let errMsg = err.message;\n                    if (this.props.includeDetailedError && err.detailed_error) {\n                        errMsg += ' - ' + err.detailed_error;\n                    }\n\n                    this.setState({\n                        busy: false,\n                        fail: errMsg,\n                    });\n                },\n            );\n        };\n\n        if (this.props.saveNeeded) {\n            this.props.saveConfigAction(doRequest);\n        } else {\n            doRequest();\n        }\n    }\n\n    render() {\n        let message = null;\n        if (this.state.fail) {\n            message = (\n                <div>\n                    <div className='alert alert-warning'>\n                        <WarningIcon/>\n                        <FormattedMessage\n                            id={this.props.errorMessage.id}\n                            defaultMessage={this.props.errorMessage.defaultMessage}\n                            values={{\n                                error: this.state.fail,\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        } else if (this.state.success && this.props.showSuccessMessage) {\n            message = (\n                <div>\n                    <div className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id={this.props.successMessage.id}\n                            defaultMessage={this.props.successMessage.defaultMessage}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let widgetClassNames = 'col-sm-8';\n        let label = null;\n        if (this.props.label) {\n            label = (\n                <label\n                    className='control-label col-sm-4'\n                >\n                    {this.props.label}\n                </label>\n            );\n        } else {\n            widgetClassNames = 'col-sm-offset-4 ' + widgetClassNames;\n        }\n\n        return (\n            <div\n                className='form-group'\n                id={this.props.id}\n            >\n                {label}\n                <div className={widgetClassNames}>\n                    <div>\n                        <button\n                            className='btn btn-default'\n                            onClick={this.handleRequest}\n                            disabled={this.props.disabled}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.busy}\n                                text={this.props.loadingText || Utils.localizeMessage('admin.requestButton.loading', ' Loading...')}\n                            >\n                                {this.props.buttonText}\n                            </LoadingWrapper>\n                        </button>\n                        {this.props.alternativeActionElement}\n                        {message}\n                    </div>\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {adminResetEmail} from 'actions/admin_actions.jsx';\n\nexport default class ResetEmailModal extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.object,\n        show: PropTypes.bool.isRequired,\n        onModalSubmit: PropTypes.func,\n        onModalDismissed: PropTypes.func,\n        passwordConfig: PropTypes.object,\n    };\n\n    static defaultProps = {\n        show: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n        };\n    }\n\n    doSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.refs.email) {\n            const email = this.refs.email.value;\n            if (!isEmail(email)) {\n                const errMsg = (\n                    <FormattedMessage\n                        id='user.settings.general.validEmail'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                );\n                this.setState({error: errMsg});\n                return;\n            }\n        }\n\n        const user = Object.assign({}, this.props.user);\n        const email = this.refs.email.value.trim().toLowerCase();\n        user.email = email;\n\n        this.setState({error: null});\n\n        adminResetEmail(\n            user,\n            () => {\n                this.props.onModalSubmit(this.props.user);\n            },\n            (err) => {\n                const serverError = err.message ? err.message : err;\n                this.setState({error: serverError});\n            },\n        );\n    }\n\n    doCancel = () => {\n        this.setState({error: null});\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        if (!this.props.user) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let errorMsg = null;\n        if (this.state.error) {\n            urlClass += ' has-error';\n            errorMsg = <div className='has-error'><p className='input__help error'>{this.state.error}</p></div>;\n        }\n\n        const title = (\n            <FormattedMessage\n                id='admin.reset_email.titleReset'\n                defaultMessage='Update Email'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetEmailModalLabel'\n                data-testid='resetEmailModal'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetEmailModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            <div className='col-sm-10'>\n                                <div\n                                    className={urlClass}\n                                    data-testid='resetEmailForm'\n                                >\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Email'\n                                        className='input-group-addon email__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_email.newEmail'\n                                            defaultMessage='New Email'\n                                        />\n                                    </span>\n                                    <input\n                                        type='email'\n                                        ref='email'\n                                        className='form-control'\n                                        maxLength='128'\n                                        autoFocus={true}\n                                    />\n                                </div>\n                                {errorMsg}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                            data-testid='resetEmailButton'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {updateUserPassword} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport {getPasswordConfig} from 'utils/utils.jsx';\n\nimport ResetPasswordModal from './reset_password_modal';\n\ntype Actions = {\n    updateUserPassword: (userId: string, currentPassword: string, password: string) => ActionResult;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    return {\n        currentUserId: getCurrentUserId(state),\n        passwordConfig: getPasswordConfig(config),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateUserPassword,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport * as Utils from 'utils/utils.jsx';\n\ninterface Error {\n    message: string;\n}\n\ninterface PasswordConfig {\n    minimumLength: number;\n    requireLowercase: boolean;\n    requireNumber: boolean;\n    requireSymbol: boolean;\n    requireUppercase: boolean;\n}\n\ntype State = {\n    serverErrorNewPass: JSX.Element|null;\n    serverErrorCurrentPass: JSX.Element|string|null;\n}\n\ntype Props = {\n    user?: UserProfile;\n    currentUserId: string;\n    show: boolean;\n    onModalSubmit: (user?: UserProfile) => void;\n    onModalDismissed: () => void;\n    passwordConfig: PasswordConfig;\n    actions: {\n        updateUserPassword: (userId: string, currentPassword: string, password: string) => ActionResult;\n    };\n}\n\nexport default class ResetPasswordModal extends React.PureComponent<Props, State> {\n    public static defaultProps: Partial<Props> = {\n        show: false,\n    };\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        };\n    }\n\n    public componentWillUnmount(): void {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n    }\n\n    private doSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        if (!this.props.user) {\n            return;\n        }\n\n        let currentPassword = '';\n        if (this.refs.currentPassword) {\n            currentPassword = (this.refs.currentPassword as HTMLInputElement).value;\n            if (currentPassword === '') {\n                const errorMsg = (\n                    <FormattedMessage\n                        id='admin.reset_password.missing_current'\n                        defaultMessage='Please enter your current password.'\n                    />\n                );\n                this.setState({serverErrorCurrentPass: errorMsg});\n                return;\n            }\n        }\n\n        const password = (this.refs.password as HTMLInputElement).value;\n\n        const {valid, error} = Utils.isValidPassword(password, this.props.passwordConfig);\n        if (!valid && error) {\n            this.setState({serverErrorNewPass: error});\n            return;\n        }\n\n        this.setState({serverErrorNewPass: null});\n\n        const result = await this.props.actions.updateUserPassword(this.props.user.id, currentPassword, password);\n        if ('error' in result) {\n            this.setState({serverErrorCurrentPass: result.error.message});\n            return;\n        }\n        this.props.onModalSubmit(this.props.user);\n    }\n\n    private doCancel = (): void => {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n        this.props.onModalDismissed();\n    }\n\n    public render(): JSX.Element {\n        const user = this.props.user;\n        if (user == null) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let serverErrorNewPass = null;\n\n        if (this.state.serverErrorNewPass) {\n            urlClass += ' has-error';\n            serverErrorNewPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorNewPass}</p></div>;\n        }\n\n        let title;\n        if (user.auth_service) {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleSwitch'\n                    defaultMessage='Switch Account to Email/Password'\n                />\n            );\n        } else {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleReset'\n                    defaultMessage='Reset Password'\n                />\n            );\n        }\n\n        let currentPassword = null;\n        let serverErrorCurrentPass = null;\n        let newPasswordFocus = true;\n        if (this.props.currentUserId === user.id) {\n            newPasswordFocus = false;\n            let urlClassCurrentPass = 'input-group input-group--limit';\n            if (this.state.serverErrorCurrentPass) {\n                urlClassCurrentPass += ' has-error';\n                serverErrorCurrentPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorCurrentPass}</p></div>;\n            }\n            currentPassword = (\n                <div className='col-sm-10 password__group-addon-space'>\n                    <div className={urlClassCurrentPass}>\n                        <span\n                            data-toggle='tooltip'\n                            title='Current Password'\n                            className='input-group-addon password__group-addon'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.curentPassword'\n                                defaultMessage='Current Password'\n                            />\n                        </span>\n                        <input\n                            type='password'\n                            ref='currentPassword'\n                            className='form-control'\n                            autoFocus={true}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetPasswordModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetPasswordModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            {currentPassword}\n                            <div className='col-sm-10'>\n                                <div className={urlClass}>\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Password'\n                                        className='input-group-addon password__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_password.newPassword'\n                                            defaultMessage='New Password'\n                                        />\n                                    </span>\n                                    <input\n                                        type='password'\n                                        ref='password'\n                                        className='form-control'\n                                        autoFocus={newPasswordFocus}\n                                    />\n                                </div>\n                                {serverErrorNewPass}\n                                {serverErrorCurrentPass}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {revokeUserAccessToken} from 'mattermost-redux/actions/users';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport RevokeTokenButton from './revoke_token_button';\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            revokeUserAccessToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(RevokeTokenButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\ninterface RevokeTokenButtonProps {\n    actions: {\n        revokeUserAccessToken: (tokenId: string) => Promise<ActionFunc | ActionResult> | ActionFunc | ActionResult;\n    };\n    tokenId: string;\n    onError: (errorMessage: string) => void;\n}\n\nexport default class RevokeTokenButton extends React.PureComponent<RevokeTokenButtonProps, {}> {\n    private handleClick = async (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        const response = await this.props.actions.revokeUserAccessToken(this.props.tokenId);\n        trackEvent('system_console', 'revoke_user_access_token');\n\n        if ('error' in response) {\n            this.props.onError(response.error.message);\n        }\n    }\n\n    render() {\n        return (\n            <button\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='admin.revoke_token_button.delete'\n                    defaultMessage='Delete'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport * as I18n from 'i18n/i18n.jsx';\n\nimport Constants from 'utils/constants';\nimport {rolesFromMapping, mappingValueFromRoles} from 'utils/policy_roles_adapter';\nimport * as Utils from 'utils/utils.jsx';\nimport RequestButton from 'components/admin_console/request_button/request_button';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport DropdownSetting from 'components/admin_console/dropdown_setting.jsx';\nimport MultiSelectSetting from 'components/admin_console/multiselect_settings.jsx';\nimport RadioSetting from 'components/admin_console/radio_setting';\nimport ColorSetting from 'components/admin_console/color_setting';\nimport GeneratedSetting from 'components/admin_console/generated_setting';\nimport UserAutocompleteSetting from 'components/admin_console/user_autocomplete_setting';\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport JobsTable from 'components/admin_console/jobs';\nimport FileUploadSetting from 'components/admin_console/file_upload_setting.jsx';\nimport RemoveFileSetting from 'components/admin_console/remove_file_setting.jsx';\nimport SchemaText from 'components/admin_console/schema_text';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport Setting from './setting';\n\nexport default class SchemaAdminSettings extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object,\n        environmentConfig: PropTypes.object,\n        setNavigationBlocked: PropTypes.func,\n        schema: PropTypes.object,\n        roles: PropTypes.object,\n        license: PropTypes.object,\n        editRole: PropTypes.func,\n        updateConfig: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.isPlugin = false;\n\n        this.saveActions = [];\n\n        this.buildSettingFunctions = {\n            [Constants.SettingsTypes.TYPE_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_LONG_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_NUMBER]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_COLOR]: this.buildColorSetting,\n            [Constants.SettingsTypes.TYPE_BOOL]: this.buildBoolSetting,\n            [Constants.SettingsTypes.TYPE_PERMISSION]: this.buildPermissionSetting,\n            [Constants.SettingsTypes.TYPE_DROPDOWN]: this.buildDropdownSetting,\n            [Constants.SettingsTypes.TYPE_RADIO]: this.buildRadioSetting,\n            [Constants.SettingsTypes.TYPE_BANNER]: this.buildBannerSetting,\n            [Constants.SettingsTypes.TYPE_GENERATED]: this.buildGeneratedSetting,\n            [Constants.SettingsTypes.TYPE_USERNAME]: this.buildUsernameSetting,\n            [Constants.SettingsTypes.TYPE_BUTTON]: this.buildButtonSetting,\n            [Constants.SettingsTypes.TYPE_LANGUAGE]: this.buildLanguageSetting,\n            [Constants.SettingsTypes.TYPE_JOBSTABLE]: this.buildJobsTableSetting,\n            [Constants.SettingsTypes.TYPE_FILE_UPLOAD]: this.buildFileUploadSetting,\n            [Constants.SettingsTypes.TYPE_CUSTOM]: this.buildCustomSetting,\n        };\n        this.state = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n            confirmNeededId: '',\n            showConfirmId: '',\n            clientWarning: '',\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.schema && props.schema.id !== state.prevSchemaId) {\n            return {\n                prevSchemaId: props.schema.id,\n                saveNeeded: false,\n                saving: false,\n                serverError: null,\n                errorTooltip: false,\n                ...SchemaAdminSettings.getStateFromConfig(props.config, props.schema, props.roles),\n            };\n        }\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.confirmNeededId) {\n            this.setState({\n                showConfirmId: this.state.confirmNeededId,\n            });\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'permissions') {\n            const settings = (this.props.schema && this.props.schema.settings) || [];\n            const rolesBinding = settings.reduce((acc, val) => {\n                if (val.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    acc[val.permissions_mapping_name] = this.state[val.key].toString();\n                }\n                return acc;\n            }, {});\n            const updatedRoles = rolesFromMapping(rolesBinding, this.props.roles);\n\n            let success = true;\n\n            await Promise.all(Object.values(updatedRoles).map(async (item) => {\n                try {\n                    await this.props.editRole(item);\n                } catch (err) {\n                    success = false;\n                    this.setState({\n                        saving: false,\n                        serverError: err.message,\n                    });\n                }\n            }));\n\n            if (!success) {\n                return;\n            }\n        }\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'config') {\n            this.doSubmit(SchemaAdminSettings.getStateFromConfig);\n        } else {\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.setNavigationBlocked(false);\n        }\n    }\n\n    getConfigFromState(config) {\n        const schema = this.props.schema;\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    this.setConfigValue(config, setting.key, null);\n                    return;\n                }\n\n                let value = this.getSettingValue(setting);\n                const previousValue = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigSave) {\n                    value = setting.onConfigSave(value, previousValue);\n                }\n\n                this.setConfigValue(config, setting.key, value);\n            });\n\n            if (schema.onConfigSave) {\n                return schema.onConfigSave(config, this.props.config);\n            }\n        }\n\n        return config;\n    }\n\n    static getStateFromConfig(config, schema, roles) {\n        let state = {};\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    try {\n                        state[setting.key] = mappingValueFromRoles(setting.permissions_mapping_name, roles) === 'true';\n                    } catch (e) {\n                        state[setting.key] = false;\n                    }\n                    return;\n                }\n\n                let value = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigLoad) {\n                    value = setting.onConfigLoad(value, config);\n                }\n\n                state[setting.key] = value == null ? setting.default : value;\n            });\n\n            if (schema.onConfigLoad) {\n                state = {...state, ...schema.onConfigLoad(config)};\n            }\n        }\n\n        return state;\n    }\n\n    getSetting(key) {\n        for (const setting of this.props.schema.settings) {\n            if (setting.key === key) {\n                return setting;\n            }\n        }\n\n        return null;\n    }\n\n    getSettingValue(setting) {\n        // Force boolean values to false when disabled.\n        if (setting.type === Constants.SettingsTypes.TYPE_BOOL) {\n            if (this.isDisabled(setting)) {\n                return false;\n            }\n        }\n        if (setting.type === Constants.SettingsTypes.TYPE_TEXT && setting.dynamic_value) {\n            return setting.dynamic_value(this.state[setting.key], this.props.config, this.state, this.props.license);\n        }\n\n        return this.state[setting.key];\n    }\n\n    renderTitle = () => {\n        if (!this.props.schema) {\n            return '';\n        }\n        if (this.props.schema.translate === false) {\n            return (\n                <AdminHeader>\n                    {this.props.schema.name || this.props.schema.id}\n                </AdminHeader>\n            );\n        }\n        return (\n            <FormattedAdminHeader\n                id={this.props.schema.name || this.props.schema.id}\n                defaultMessage={this.props.schema.name_default || this.props.schema.id}\n            />\n        );\n    };\n\n    renderBanner = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (setting.label.translate === false) {\n            return <span>{setting.label}</span>;\n        }\n\n        if (typeof setting.label === 'string') {\n            if (setting.label_markdown) {\n                return (\n                    <FormattedMarkdownMessage\n                        id={setting.label}\n                        values={setting.label_values}\n                        defaultMessage={setting.label_default}\n                    />\n                );\n            }\n            return (\n                <FormattedMessage\n                    id={setting.label}\n                    defaultMessage={setting.label_default}\n                    values={setting.label_values}\n                />\n            );\n        }\n        return setting.label;\n    }\n\n    renderHelpText = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (!setting.help_text) {\n            return null;\n        }\n\n        let helpText;\n        let isMarkdown;\n        let helpTextValues;\n        let helpTextDefault;\n        if (setting.disabled_help_text && this.isDisabled(setting)) {\n            helpText = setting.disabled_help_text;\n            isMarkdown = setting.disabled_help_text_markdown;\n            helpTextValues = setting.disabled_help_text_values;\n            helpTextDefault = setting.disabled_help_text_default;\n        } else {\n            helpText = setting.help_text;\n            isMarkdown = setting.help_text_markdown;\n            helpTextValues = setting.help_text_values;\n            helpTextDefault = setting.help_text_default;\n        }\n\n        return (\n            <SchemaText\n                isMarkdown={isMarkdown}\n                isTranslated={setting.translate}\n                text={helpText}\n                textDefault={helpTextDefault}\n                textValues={helpTextValues}\n            />\n        );\n    }\n\n    renderLabel = (setting) => {\n        if (!this.props.schema) {\n            return '';\n        }\n\n        if (setting.translate === false) {\n            return setting.label;\n        }\n        return Utils.localizeMessage(setting.label, setting.label_default);\n    }\n\n    isDisabled = (setting) => {\n        if (typeof setting.isDisabled === 'function') {\n            return setting.isDisabled(this.props.config, this.state, this.props.license);\n        }\n        return Boolean(setting.isDisabled);\n    }\n\n    isHidden = (setting) => {\n        if (typeof setting.isHidden === 'function') {\n            return setting.isHidden(this.props.config, this.state, this.props.license);\n        }\n        return Boolean(setting.isHidden);\n    }\n\n    buildButtonSetting = (setting) => {\n        const handleRequestAction = (success, error) => {\n            const successCallback = (data) => {\n                const metadata = new Map(Object.entries(data));\n                const settings = (this.props.schema && this.props.schema.settings) || [];\n                settings.forEach((tsetting) => {\n                    if (tsetting.key && tsetting.setFromMetadataField) {\n                        const inputData = metadata.get(tsetting.setFromMetadataField);\n\n                        if (tsetting.type === Constants.SettingsTypes.TYPE_TEXT) {\n                            this.setState({[tsetting.key]: inputData, [`${tsetting.key}Error`]: null});\n                        } else if (tsetting.type === Constants.SettingsTypes.TYPE_FILE_UPLOAD) {\n                            if (this.buildSettingFunctions[tsetting.type] && this.buildSettingFunctions[tsetting.type](tsetting).props.onSetData) {\n                                this.buildSettingFunctions[tsetting.type](tsetting).props.onSetData(tsetting.key, inputData);\n                            }\n                        }\n                    }\n                });\n\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n\n            var sourceUrlKey = 'ServiceSettings.SiteURL';\n            if (setting.sourceUrlKey) {\n                sourceUrlKey = setting.sourceUrlKey;\n            }\n            setting.action(successCallback, error, this.state[sourceUrlKey]);\n        };\n\n        return (\n            <RequestButton\n                id={setting.key}\n                key={this.props.schema.id + '_text_' + setting.key}\n                requestAction={handleRequestAction}\n                helpText={this.renderHelpText(setting)}\n                loadingText={Utils.localizeMessage(setting.loading, setting.loading_default)}\n                buttonText={<span>{this.renderLabel(setting)}</span>}\n                showSuccessMessage={Boolean(setting.success_message)}\n                includeDetailedError={true}\n                disabled={this.isDisabled(setting)}\n                errorMessage={{\n                    id: setting.error_message,\n                    defaultMessage: setting.error_message_default,\n                }}\n                successMessage={setting.success_message && {\n                    id: setting.success_message,\n                    defaultMessage: setting.success_message_default,\n                }}\n            />\n        );\n    }\n\n    buildTextSetting = (setting) => {\n        let inputType = 'input';\n        if (setting.type === Constants.SettingsTypes.TYPE_NUMBER) {\n            inputType = 'number';\n        } else if (setting.type === Constants.SettingsTypes.TYPE_LONG_TEXT) {\n            inputType = 'textarea';\n        }\n\n        let value = this.state[setting.key] || '';\n        if (setting.dynamic_value) {\n            value = setting.dynamic_value(value, this.props.config, this.state, this.props.license);\n        }\n\n        return (\n            <TextSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                type={inputType}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                maxLength={setting.max_length}\n            />\n        );\n    }\n\n    buildColorSetting = (setting) => {\n        return (\n            <ColorSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBoolSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildPermissionSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={(!this.isDisabled(setting) && this.state[setting.key]) || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handlePermissionChange}\n            />\n        );\n    }\n\n    buildDropdownSetting = (setting) => {\n        const enterpriseReady = this.props.config.BuildEnterpriseReady === 'true';\n        const options = [];\n        setting.options.forEach((option) => {\n            if (!option.isHidden || !option.isHidden(this.props.config, this.state, this.props.license, enterpriseReady)) {\n                options.push(option);\n            }\n        });\n\n        const values = options.map((o) => ({value: o.value, text: Utils.localizeMessage(o.display_name, o.display_name_default)}));\n        const selectedValue = this.state[setting.key] || values[0].value;\n\n        let selectedOptionForHelpText = null;\n        for (const option of options) {\n            if (option.help_text && option.value === selectedValue) {\n                selectedOptionForHelpText = option;\n                break;\n            }\n        }\n\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_dropdown_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(selectedOptionForHelpText || setting)}\n                value={selectedValue}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildLanguageSetting = (setting) => {\n        const locales = I18n.getAllLanguages();\n        const values = Object.keys(locales).map((l) => {\n            return {value: locales[l].value, text: locales[l].name, order: locales[l].order};\n        }).sort((a, b) => a.order - b.order);\n\n        if (setting.multiple) {\n            const noResultText = (\n                <FormattedMessage\n                    id={setting.no_result}\n                    defaultMessage={setting.no_result_default}\n                />\n            );\n            const notPresent = (\n                <FormattedMessage\n                    id={setting.not_present}\n                    defaultMessage={setting.not_present_default}\n                />\n            );\n            return (\n                <MultiSelectSetting\n                    key={this.props.schema.id + '_language_' + setting.key}\n                    id={setting.key}\n                    label={this.renderLabel(setting)}\n                    values={values}\n                    helpText={this.renderHelpText(setting)}\n                    selected={(this.state[setting.key] && this.state[setting.key].split(',')) || []}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                    onChange={(changedId, value) => this.handleChange(changedId, value.join(','))}\n                    noResultText={noResultText}\n                    notPresent={notPresent}\n                />\n            );\n        }\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_language_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                values={values}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0].value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildRadioSetting = (setting) => {\n        const options = setting.options || [];\n        const values = options.map((o) => ({value: o.value, text: o.display_name}));\n\n        return (\n            <RadioSetting\n                key={this.props.schema.id + '_radio_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0]}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBannerSetting = (setting) => {\n        if (this.isDisabled(setting)) {\n            return null;\n        }\n        return (\n            <div\n                className={'banner ' + setting.banner_type}\n                key={this.props.schema.id + '_bool_' + setting.key}\n            >\n                <div className='banner__content'>\n                    <span>\n                        { setting.banner_type === 'warning' ? <WarningIcon additionalClassName='banner__icon'/> : null}\n                        {this.renderBanner(setting)}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n\n    buildGeneratedSetting = (setting) => {\n        return (\n            <GeneratedSetting\n                key={this.props.schema.id + '_generated_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                regenerateHelpText={setting.regenerate_help_text}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleGeneratedChange}\n            />\n        );\n    }\n\n    handleGeneratedChange = (id, s) => {\n        this.handleChange(id, s.replace('+', '-').replace('/', '_'));\n    }\n\n    handleChange = (id, value, confirm = false, doSubmit = false, warning = false) => {\n        const saveNeeded = this.state.saveNeeded === 'permissions' ? 'both' : 'config';\n        const clientWarning = warning === false ? this.state.clientWarning : warning;\n\n        let confirmNeededId = confirm ? id : this.state.confirmNeededId;\n        if (id === this.state.confirmNeededId && !confirm) {\n            confirmNeededId = '';\n        }\n\n        this.setState({\n            saveNeeded,\n            confirmNeededId,\n            clientWarning,\n            [id]: value,\n        });\n\n        if (doSubmit) {\n            this.doSubmit(SchemaAdminSettings.getStateFromConfig);\n        }\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    handlePermissionChange = (id, value) => {\n        let saveNeeded = 'permissions';\n        if (this.state.saveNeeded === 'config') {\n            saveNeeded = 'both';\n        }\n        this.setState({\n            saveNeeded,\n            [id]: value,\n        });\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    buildUsernameSetting = (setting) => {\n        return (\n            <UserAutocompleteSetting\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default) || Utils.localizeMessage('search_bar.search', 'Search')}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildJobsTableSetting = (setting) => {\n        return (\n            <JobsTable\n                key={this.props.schema.id + '_jobstable_' + setting.key}\n                jobType={setting.job_type}\n                getExtraInfoText={setting.render_job}\n                disabled={this.isDisabled(setting)}\n                createJobButtonText={\n                    <FormattedMessage\n                        id={setting.label}\n                        defaultMessage={setting.label_default}\n                    />\n                }\n                createJobHelpText={\n                    <FormattedMarkdownMessage\n                        id={setting.help_text}\n                        defaultMessage={setting.help_text_default}\n                    />\n                }\n            />\n        );\n    }\n\n    buildFileUploadSetting = (setting) => {\n        const setData = (id, data) => {\n            const successCallback = (filename) => {\n                this.handleChange(id, filename);\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\n            };\n            const errorCallback = (error) => {\n                this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\n            };\n            setting.set_action(successCallback, errorCallback, data);\n        };\n\n        if (this.state[setting.key]) {\n            const removeFile = (id, callback) => {\n                const successCallback = () => {\n                    this.handleChange(setting.key, '');\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: null});\n                };\n                const errorCallback = (error) => {\n                    callback();\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\n                };\n                setting.remove_action(successCallback, errorCallback);\n            };\n            return (\n                <RemoveFileSetting\n                    id={this.props.schema.id}\n                    key={this.props.schema.id + '_fileupload_' + setting.key}\n                    label={this.renderLabel(setting)}\n                    helpText={\n                        <FormattedMessage\n                            id={setting.remove_help_text}\n                            defaultMessage={setting.remove_help_text_default}\n                        />\n                    }\n                    removeButtonText={Utils.localizeMessage(setting.remove_button_text, setting.remove_button_text_default)}\n                    removingText={Utils.localizeMessage(setting.removing_text, setting.removing_text_default)}\n                    fileName={this.state[setting.key]}\n                    onSubmit={removeFile}\n                    onSetData={setData}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                />\n            );\n        }\n        const uploadFile = (id, file, callback) => {\n            const successCallback = (filename) => {\n                this.handleChange(id, filename);\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\n                if (callback && typeof callback === 'function') {\n                    callback();\n                }\n            };\n            const errorCallback = (error) => {\n                if (callback && typeof callback === 'function') {\n                    callback(error.message);\n                }\n            };\n            setting.upload_action(file, successCallback, errorCallback);\n        };\n\n        return (\n            <FileUploadSetting\n                id={setting.key}\n                key={this.props.schema.id + '_fileupload_' + setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                uploadingText={Utils.localizeMessage(setting.uploading_text, setting.uploading_text_default)}\n                disabled={this.isDisabled(setting)}\n                fileType={setting.fileType}\n                onSubmit={uploadFile}\n                onSetData={setData}\n                error={this.state.idpCertificateFileError}\n                setByEnv={this.isSetByEnv(setting.key)}\n            />\n        );\n    }\n\n    buildCustomSetting = (setting) => {\n        const CustomComponent = setting.component;\n\n        const componentInstance = (\n            <CustomComponent\n                key={this.props.schema.id + '_custom_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key]}\n                disabled={this.isDisabled(setting)}\n                config={this.props.config}\n                license={this.props.license}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                registerSaveAction={this.registerSaveAction}\n                setSaveNeeded={this.setSaveNeeded}\n                unRegisterSaveAction={this.unRegisterSaveAction}\n                cancelSubmit={this.cancelSubmit}\n                showConfirm={this.state.showConfirmId === setting.key}\n            />);\n\n        // Show the plugin custom setting title\n        // consistently as other settings with the Setting component\n        if (setting.showTitle) {\n            return (\n                <Setting\n                    label={setting.label}\n                    inputId={setting.key}\n                    helpText={setting.helpText}\n                >\n                    {componentInstance}\n                </Setting>\n            );\n        }\n        return componentInstance;\n    }\n\n    unRegisterSaveAction = (saveAction) => {\n        const indexOfSaveAction = this.saveActions.indexOf(saveAction);\n        this.saveActions.splice(indexOfSaveAction, 1);\n    }\n\n    registerSaveAction = (saveAction) => {\n        this.saveActions.push(saveAction);\n    }\n\n    setSaveNeeded = () => {\n        this.setState({saveNeeded: 'config'});\n        this.props.setNavigationBlocked(true);\n    }\n\n    renderSettings = () => {\n        const schema = this.props.schema;\n\n        const settingsList = [];\n        if (schema.settings) {\n            schema.settings.forEach((setting) => {\n                if (this.buildSettingFunctions[setting.type] && !this.isHidden(setting)) {\n                    settingsList.push(this.buildSettingFunctions[setting.type](setting));\n                }\n            });\n        }\n\n        let header;\n        if (schema.header) {\n            header = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.header}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        let footer;\n        if (schema.footer) {\n            footer = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.footer}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup container={false}>\n                {header}\n                {settingsList}\n                {footer}\n            </SettingsGroup>\n        );\n    }\n\n    closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('.control-label');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({errorTooltip: isElipsis});\n    }\n\n    doSubmit = async (getStateFromConfig) => {\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {error} = await this.props.updateConfig(config);\n        if (error) {\n            this.setState({\n                serverError: error.message,\n                serverErrorId: error.id,\n            });\n        } else {\n            this.setState(getStateFromConfig(config));\n        }\n\n        if (this.handleSaved) {\n            this.handleSaved(config);\n        }\n\n        const results = [];\n        for (const saveAction of this.saveActions) {\n            results.push(saveAction());\n        }\n\n        const hasSaveActionError = await Promise.all(results).then((values) => values.some(((value) => value.error && value.error.message)));\n\n        const hasError = this.state.serverError || hasSaveActionError;\n        if (hasError) {\n            this.setState({saving: false});\n        } else {\n            this.setState({saving: false, saveNeeded: false, confirmNeededId: '', showConfirmId: '', clientWarning: ''});\n            this.props.setNavigationBlocked(false);\n        }\n    };\n\n    cancelSubmit = () => {\n        this.setState({\n            showConfirmId: '',\n        });\n    };\n\n    // Some path parts may contain periods (e.g. plugin ids), but path walking the configuration\n    // relies on splitting by periods. Use this pair of functions to allow such path parts.\n    //\n    // It is assumed that no path contains the symbol '+'.\n    static escapePathPart(pathPart) {\n        return pathPart.replace(/\\./g, '+');\n    }\n\n    static unescapePathPart(pathPart) {\n        return pathPart.replace(/\\+/g, '.');\n    }\n\n    static getConfigValue(config, path) {\n        const pathParts = path.split('.');\n\n        return pathParts.reduce((obj, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n\n            return obj[SchemaAdminSettings.unescapePathPart(pathPart)];\n        }, config);\n    }\n\n    setConfigValue(config, path, value) {\n        function setValue(obj, pathParts) {\n            const part = SchemaAdminSettings.unescapePathPart(pathParts[0]);\n\n            if (pathParts.length === 1) {\n                obj[part] = value;\n            } else {\n                if (obj[part] == null) {\n                    obj[part] = {};\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    isSetByEnv = (path) => {\n        return Boolean(SchemaAdminSettings.getConfigValue(this.props.environmentConfig, path));\n    };\n\n    hybridSchemaAndComponent = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent {...this.props}/>\n            );\n        }\n        return null;\n    }\n\n    render = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && !schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent {...this.props}/>\n            );\n        }\n\n        if (!schema) {\n            return (\n                <div className={'wrapper--fixed'}>\n                    <AdminHeader>\n                        <FormattedMessage\n                            id='error.plugin_not_found.title'\n                            defaultMessage='Plugin Not Found'\n                        />\n                    </AdminHeader>\n                    <div className='admin-console__wrapper'>\n                        <div className='admin-console__content'>\n                            <p>\n                                <FormattedMessage\n                                    id='error.plugin_not_found.desc'\n                                    defaultMessage='The plugin you are looking for does not exist.'\n                                />\n                            </p>\n                            <Link\n                                to={'plugin_management'}\n                            >\n                                <FormattedMessage\n                                    id='admin.plugin.backToPlugins'\n                                    defaultMessage='Go back to the Plugins'\n                                />\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className={'wrapper--fixed ' + this.state.customComponentWrapperClass}>\n                {this.renderTitle()}\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                            onSubmit={this.handleSubmit}\n                        >\n                            {this.renderSettings()}\n                        </form>\n                        {this.hybridSchemaAndComponent()}\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        ref='errorMessage'\n                        onMouseOver={this.openTooltip}\n                        onMouseOut={this.closeTooltip}\n                    >\n                        <FormError\n                            iconClassName='fa-exclamation-triangle'\n                            textClassName='has-warning'\n                            error={this.state.clientWarning}\n                        />\n\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        target={this.refs.errorMessage}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage, {CustomRenderer} from 'components/formatted_markdown_message';\n\nexport default class SchemaText extends React.PureComponent {\n    static propTypes = {\n        isMarkdown: PropTypes.bool,\n        isTranslated: PropTypes.bool,\n        text: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object,\n        ]).isRequired,\n        textDefault: PropTypes.string,\n        textValues: PropTypes.object,\n    };\n\n    static defaultProps = {\n        isTranslated: true,\n    };\n\n    renderTranslated = () => {\n        const {\n            isMarkdown,\n            text,\n            textDefault,\n            textValues,\n        } = this.props;\n\n        if (typeof text === 'object') {\n            return text;\n        }\n\n        if (isMarkdown) {\n            return (\n                <FormattedMarkdownMessage\n                    id={text}\n                    defaultMessage={textDefault}\n                    values={textValues}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id={text}\n                values={textValues}\n                defaultMessage={textDefault}\n            />\n        );\n    };\n\n    renderUntranslated = () => {\n        if (this.props.isMarkdown) {\n            const html = marked(this.props.text, {\n                breaks: true,\n                sanitize: true,\n                renderer: new CustomRenderer(),\n            });\n\n            return <span dangerouslySetInnerHTML={{__html: html}}/>;\n        }\n\n        return <span>{this.props.text}</span>;\n    };\n\n    render() {\n        return this.props.isTranslated ? this.renderTranslated() : this.renderUntranslated();\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getLogs} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport Logs from './logs.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        logs: Selectors.getLogs(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLogs,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nconst NEXT_BUTTON_TIMEOUT = 500;\n\nexport default class Logs extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of logs to render\n         */\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        page: PropTypes.number.isRequired,\n        perPage: PropTypes.number.isRequired,\n        nextPage: PropTypes.func.isRequired,\n        previousPage: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.logPanel = React.createRef();\n\n        this.state = {\n            nextDisabled: false,\n        };\n    }\n\n    componentDidMount() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        node.scrollTop = node.scrollHeight;\n        node.focus();\n    }\n\n    componentDidUpdate() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        node.scrollTop = node.scrollHeight;\n    }\n\n    nextPage = (e) => {\n        e.preventDefault();\n\n        this.setState({nextDisabled: true});\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT);\n\n        this.props.nextPage();\n    }\n\n    previousPage = (e) => {\n        e.preventDefault();\n\n        this.props.previousPage();\n    }\n\n    render() {\n        let content = null;\n        let nextButton;\n        let previousButton;\n\n        if (this.props.logs.length >= this.props.perPage) {\n            nextButton = (\n                <button\n                    className='btn btn-default filter-control filter-control__next pull-right'\n                    onClick={this.nextPage}\n                    disabled={this.state.nextDisabled}\n                >\n                    <FormattedMessage\n                        id='admin.logs.next'\n                        defaultMessage='Next'\n                    />\n                    <NextIcon additionalClassName='ml-2'/>\n                </button>\n            );\n        }\n\n        if (this.props.page > 0) {\n            previousButton = (\n                <button\n                    className='btn btn-default filter-control filter-control__prev'\n                    onClick={this.previousPage}\n                >\n                    <FormattedMessage\n                        id='generic_icons.previous'\n                        defaultMessage='Previous Icon'\n                    >\n                        {(title) => (\n                            <i\n                                className='fa fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='admin.logs.prev'\n                        defaultMessage='Previous'\n                    />\n                </button>\n            );\n        }\n\n        content = [];\n\n        for (let i = 0; i < this.props.logs.length; i++) {\n            const style = {\n                whiteSpace: 'nowrap',\n                fontFamily: 'monospace',\n            };\n\n            if (this.props.logs[i].indexOf('[EROR]') > 0) {\n                style.color = 'red';\n            }\n\n            content.push(<br key={'br_' + i}/>);\n            content.push(\n                <span\n                    key={'log_' + i}\n                    style={style}\n                >\n                    {this.props.logs[i]}\n                </span>,\n            );\n        }\n\n        return (\n            <div>\n                <div\n                    tabIndex='-1'\n                    ref={this.logPanel}\n                    className='log__panel'\n                >\n                    {content}\n                </div>\n                <div className='pt-3 pb-3 filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport LogList from './log_list.jsx';\n\nexport default class Logs extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of logs to render\n         */\n        logs: PropTypes.arrayOf(PropTypes.string).isRequired,\n        nextPage: PropTypes.func,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to fetch logs\n             */\n            getLogs: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingLogs: true,\n            page: 0,\n            perPage: 1000,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n            () => this.setState({loadingLogs: false}),\n        );\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.page !== prevState.page) {\n            this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n                () => this.setState({loadingLogs: false}),\n            );\n        }\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    reload = () => {\n        this.setState({loadingLogs: true});\n        this.props.actions.getLogs(this.state.page, this.state.perPage).then(\n            () => this.setState({loadingLogs: false}),\n        );\n    }\n\n    render() {\n        let content = null;\n\n        if (this.state.loadingLogs) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <LogList\n                    {...this.props}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    page={this.state.page}\n                    perPage={this.state.perPage}\n                />\n            );\n        }\n\n        return (\n            <div className='wrapper--admin'>\n                <FormattedAdminHeader\n                    id='admin.logs.title'\n                    defaultMessage='Server Logs'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.logs.bannerDesc'\n                                    defaultMessage='To look up users by User ID or Token ID, go to Reporting > Users and paste the ID into the search filter.'\n                                />\n                            </div>\n                        </div>\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                            onClick={this.reload}\n                        >\n                            <FormattedMessage\n                                id='admin.logs.reload'\n                                defaultMessage='Reload'\n                            />\n                        </button>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport * as Utils from 'utils/utils.jsx';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class SessionLengthSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        const MINIMUM_IDLE_TIMEOUT = 5;\n\n        config.ServiceSettings.ExtendSessionLengthWithActivity = this.state.extendSessionLengthWithActivity;\n        config.ServiceSettings.SessionLengthWebInDays = this.parseIntNonZero(this.state.sessionLengthWebInDays);\n        config.ServiceSettings.SessionLengthMobileInDays = this.parseIntNonZero(this.state.sessionLengthMobileInDays);\n        config.ServiceSettings.SessionLengthSSOInDays = this.parseIntNonZero(this.state.sessionLengthSSOInDays);\n        config.ServiceSettings.SessionCacheInMinutes = this.parseIntNonZero(this.state.sessionCacheInMinutes);\n        config.ServiceSettings.SessionIdleTimeoutInMinutes = this.parseIntZeroOrMin(this.state.sessionIdleTimeoutInMinutes, MINIMUM_IDLE_TIMEOUT);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            extendSessionLengthWithActivity: config.ServiceSettings.ExtendSessionLengthWithActivity,\n            sessionLengthWebInDays: config.ServiceSettings.SessionLengthWebInDays,\n            sessionLengthMobileInDays: config.ServiceSettings.SessionLengthMobileInDays,\n            sessionLengthSSOInDays: config.ServiceSettings.SessionLengthSSOInDays,\n            sessionCacheInMinutes: config.ServiceSettings.SessionCacheInMinutes,\n            sessionIdleTimeoutInMinutes: config.ServiceSettings.SessionIdleTimeoutInMinutes,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.sessionLengths.title'\n                defaultMessage='Session Lengths'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        let sessionLengthWebHelpText;\n        let sessionLengthMobileHelpText;\n        let sessionLengthSSOHelpText;\n        let sessionTimeoutSetting;\n        if (this.state.extendSessionLengthWithActivity) {\n            sessionLengthWebHelpText = (\n                <FormattedMessage\n                    id='admin.service.webSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session when using email and AD/LDAP authentication. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthMobileHelpText = (\n                <FormattedMessage\n                    id='admin.service.mobileSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session on mobile. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthSSOHelpText = (\n                <FormattedMessage\n                    id='admin.service.ssoSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session for SSO authentication, such as SAML, GitLab and OAuth 2.0. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.'\n                />\n            );\n        } else {\n            sessionLengthWebHelpText = (\n                <FormattedMessage\n                    id='admin.service.webSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthMobileHelpText = (\n                <FormattedMessage\n                    id='admin.service.mobileSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthSSOHelpText = (\n                <FormattedMessage\n                    id='admin.service.ssoSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.'\n                />\n            );\n        }\n        if (this.props.license.Compliance && !this.state.extendSessionLengthWithActivity) {\n            sessionTimeoutSetting = (\n                <TextSetting\n                    id='sessionIdleTimeoutInMinutes'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.sessionIdleTimeout'\n                            defaultMessage='Session Idle Timeout (minutes):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionIdleTimeoutEx', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.sessionIdleTimeoutDesc'\n                            defaultMessage=\"The number of minutes from the last time a user was active on the system to the expiry of the user\\'s session. Once expired, the user will need to log in to continue. Minimum is 5 minutes, and 0 is unlimited.\\n \\nApplies to the desktop app and browsers. For mobile apps, use an EMM provider to lock the app when not in use. In High Availability mode, enable IP hash load balancing for reliable timeout measurement.\"\n                        />\n                    }\n                    value={this.state.sessionIdleTimeoutInMinutes}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionIdleTimeoutInMinutes')}\n                />\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='extendSessionLengthWithActivity'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.extendSessionLengthActivity.label'\n                            defaultMessage='Extend session length with activity: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.extendSessionLengthActivity.helpText'\n                            defaultMessage='When true, sessions will be automatically extended when the user is active in their Mattermost client. Users sessions will only expire if they are not active in their Mattermost client for the entire duration of the session lengths defined in the fields below. When false, sessions will not extend with activity in Mattermost. User sessions will immediately expire at the end of the session length or idle timeouts defined below. '\n                        />\n                    }\n                    value={this.state.extendSessionLengthWithActivity}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.ExtendSessionLengthWithActivity')}\n                />\n                <TextSetting\n                    id='sessionLengthWebInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.webSessionDays'\n                            defaultMessage='Session Length AD/LDAP and Email (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthWebHelpText}\n                    value={this.state.sessionLengthWebInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthWebInDays')}\n                />\n                <TextSetting\n                    id='sessionLengthMobileInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.mobileSessionDays'\n                            defaultMessage='Session Length Mobile (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthMobileHelpText}\n                    value={this.state.sessionLengthMobileInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthMobileInDays')}\n                />\n                <TextSetting\n                    id='sessionLengthSSOInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.ssoSessionDays'\n                            defaultMessage='Session Length SSO (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthSSOHelpText}\n                    value={this.state.sessionLengthSSOInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthSSOInDays')}\n                />\n                <TextSetting\n                    id='sessionCacheInMinutes'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.sessionCache'\n                            defaultMessage='Session Cache (minutes):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionMinutesEx', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.sessionCacheDesc'\n                            defaultMessage='The number of minutes to cache a session in memory:'\n                        />\n                    }\n                    value={this.state.sessionCacheInMinutes}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionCacheInMinutes')}\n                />\n                {sessionTimeoutSetting}\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default function() {\n    return (\n        <div className='alert alert-warning'>\n            <FormattedMessage\n                id='admin.set_by_env'\n                defaultMessage='This setting has been set through an environment variable. It cannot be changed through the System Console.'\n            />\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    inputId?: string;\n    label: React.ReactNode;\n    children: React.ReactNode;\n    helpText?: React.ReactNode;\n    setByEnv?: boolean;\n}\n\nexport default class Settings extends PureComponent<Props> {\n    public render() {\n        const {\n            children,\n            setByEnv,\n            helpText,\n            inputId,\n            label,\n        } = this.props;\n\n        return (\n            <div\n                data-testid={inputId}\n                className='form-group'\n            >\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={inputId}\n                >\n                    {label}\n                </label>\n                <div className='col-sm-8'>\n                    {children}\n                    <div\n                        data-testid={inputId + 'help-text'}\n                        className='help-text'\n                    >\n                        {helpText}\n                    </div>\n                    {setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SettingsGroup extends React.PureComponent {\n    static get propTypes() {\n        return {\n            show: PropTypes.bool.isRequired,\n            header: PropTypes.node,\n            children: PropTypes.node,\n            container: PropTypes.bool,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            show: true,\n            container: true,\n        };\n    }\n\n    render() {\n        let wrapperClass = '';\n        let contentClass = '';\n\n        if (!this.props.show) {\n            return null;\n        }\n\n        if (this.props.container) {\n            wrapperClass = 'admin-console__wrapper';\n            contentClass = 'admin-console__content';\n        }\n\n        let header = null;\n        if (this.props.header) {\n            header = (\n                <h4>\n                    {this.props.header}\n                </h4>\n            );\n        }\n\n        return (\n            <div className={wrapperClass}>\n                <div className={contentClass}>\n                    {header}\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getProfiles} from 'mattermost-redux/selectors/entities/users';\nimport {updateUserActive} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {addUserToTeam} from 'mattermost-redux/actions/teams';\n\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\n\nimport SystemUserDetail from './system_user_detail.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const userId = ownProps.match.params.user_id;\n    const user = getUser(state, userId);\n    return {\n        user,\n        mfaEnabled: config.EnableMultifactorAuthentication === 'true',\n        navigationBlocked: getNavigationBlocked(state),\n        showNavigationPrompt: showNavigationPrompt(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUser,\n            getProfiles,\n            updateUserActive,\n            setNavigationBlocked,\n            deferNavigation,\n            cancelNavigation,\n            confirmNavigation,\n            addUserToTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUserDetail);","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {adminResetMfa, adminResetEmail} from 'actions/admin_actions.jsx';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport AdminButtonOutline from 'components/admin_console/admin_button_outline/admin_button_outline';\nimport AdminUserCard from 'components/admin_console/admin_user_card/admin_user_card';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ConfirmModal from 'components/confirm_modal';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\n\nimport TeamList from 'components/admin_console/system_user_detail/team_list';\nimport EmailIcon from 'components/widgets/icons/email_icon.jsx';\nimport AtIcon from 'components/widgets/icons/at_icon.jsx';\nimport SheidOutlineIcon from 'components/widgets/icons/shield_outline_icon.jsx';\n\nimport './system_user_detail.scss';\n\nexport default class SystemUserDetail extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        mfaEnabled: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            updateUserActive: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n            addUserToTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        user: {\n            email: null,\n        },\n        mfaEnabled: false,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            teams: null,\n            teamIds: null,\n            loading: false,\n            searching: false,\n            showPasswordModal: false,\n            showDeactivateMemberModal: false,\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n            user: {\n                email: this.props.user.email,\n            },\n            addTeamOpen: false,\n            refreshTeams: true,\n        };\n    }\n\n    setTeamsData = (teams) => {\n        const teamIds = teams.map((team) => team.team_id);\n        this.setState({teams});\n        this.setState({teamIds});\n        this.setState({refreshTeams: false});\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    addTeams = (teams) => {\n        const promises = [];\n        for (const team of teams) {\n            promises.push(this.props.actions.addUserToTeam(team.id, this.props.user.id));\n        }\n        Promise.all(promises).finally(this.setState({refreshTeams: true}));\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    doPasswordReset = (user) => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = () => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    doPasswordResetSubmit = () => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    handleMakeActive = (e) => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then(this.onUpdateActiveResult);\n    }\n\n    handleShowDeactivateMemberModal = (e) => {\n        e.preventDefault();\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = () => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then(this.onUpdateActiveResult);\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = ({error}) => {\n        if (error) {\n            this.setState({error});\n        }\n    }\n\n    handleDeactivateCancel = () => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    // TODO: add error handler function\n    handleResetMfa = (e) => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, null);\n    }\n\n    handleEmailChange = (e) => {\n        const emailChanged = e.target.value !== this.props.user.email;\n        this.setState({\n            user: {\n                email: e.target.value,\n            },\n            saveNeeded: emailChanged,\n        });\n        this.props.actions.setNavigationBlocked(emailChanged);\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.user.email !== this.props.user.email) {\n            if (!isEmail(this.state.user.email)) {\n                this.setState({serverError: 'Invalid Email address'});\n                return;\n            }\n            const user = Object.assign({}, this.props.user);\n            const email = this.state.user.email.trim().toLowerCase();\n            user.email = email;\n\n            this.setState({serverError: null});\n\n            adminResetEmail(\n                user,\n                () => {\n                    this.props.history.push('/admin_console/user_management/users');\n                },\n                (err) => {\n                    const serverError = err.message ? err.message : err;\n                    this.setState({serverError});\n                },\n            );\n\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.actions.setNavigationBlocked(false);\n        }\n    }\n\n    renderDeactivateMemberModal = (user) => {\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: user.username,\n                }}\n            />\n        );\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const message = (\n            <div>\n                <FormattedMessage\n                    id='deactivate_member_modal.desc'\n                    defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system. Are you sure you want to deactivate {username}?'\n                    values={{\n                        username: user.username,\n                    }}\n                />\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    renderActivateDeactivate = () => {\n        if (this.props.user.delete_at > 0) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleMakeActive}\n                    className='admin-btn-default'\n                >\n                    {Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                </AdminButtonOutline>\n            );\n        }\n        return (\n            <AdminButtonOutline\n                onClick={this.handleShowDeactivateMemberModal}\n                className='admin-btn-default'\n            >\n                {Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n            </AdminButtonOutline>\n        );\n    }\n\n    renderRemoveMFA = () => {\n        if (this.props.user.mfa_active) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleResetMfa}\n                    className='admin-btn-default'\n                >\n                    {Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\n                </AdminButtonOutline>\n            );\n        }\n        return null;\n    }\n\n    getAuthenticationText() {\n        const {user, mfaEnabled} = this.props;\n        let authLine;\n\n        if (user.auth_service) {\n            let service;\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\n                service = user.auth_service.toUpperCase();\n            } else {\n                service = Utils.toTitleCase(user.auth_service);\n            }\n            authLine = service;\n        } else {\n            authLine = Utils.localizeMessage('admin.userManagement.userDetail.email', 'Email');\n        }\n        if (mfaEnabled) {\n            if (user.mfa_active) {\n                authLine += ', ';\n                authLine += Utils.localizeMessage('admin.userManagement.userDetail.mfa', 'MFA');\n            }\n        }\n        return authLine;\n    }\n\n    render() {\n        const {user} = this.props;\n        let deactivateMemberModal;\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (!user.id) {\n            return (\n                <Redirect to={{pathname: '/admin_console/user_management/users'}}/>\n            );\n        }\n\n        if (user.id) {\n            deactivateMemberModal = this.renderDeactivateMemberModal(user);\n            if (user.delete_at > 0) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='admin.user_item.inactive'\n                        defaultMessage='Inactive'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.systemAdmin'\n                        defaultMessage='System Admin'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isGuest(user)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.guest'\n                        defaultMessage='Guest'\n                    />\n                );\n            }\n        }\n\n        return (\n            <div className='SystemUserDetail wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/users'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.systemUserDetail.title'\n                            defaultMessage='User Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminUserCard\n                            user={user}\n                            body={\n                                <React.Fragment>\n                                    <span className='SystemUserDetail__position'>{user.position}</span>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.email', 'Email')}</span>\n                                    <div>\n                                        <EmailIcon className='SystemUserDetail__field-icon'/>\n                                        <input\n                                            className='SystemUserDetail__input form-control'\n                                            type='text'\n                                            value={this.state.user.email}\n                                            onChange={this.handleEmailChange}\n                                        />\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.username', 'Username')}</span>\n                                    <div>\n                                        <AtIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{user.username}</span>\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.authenticationMethod', 'Authentication Method')}</span>\n                                    <div className='SystemUserDetail__field-text'>\n                                        <SheidOutlineIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{this.getAuthenticationText()}</span>\n                                    </div>\n\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.role', 'Role')}</span>\n                                    <p>{currentRoles}</p>\n                                </React.Fragment>\n                            }\n                            footer={\n                                <React.Fragment>\n                                    <AdminButtonOutline\n                                        onClick={this.doPasswordReset}\n                                        className='admin-btn-default'\n                                    >\n                                        {Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\n                                    </AdminButtonOutline>\n                                    {this.renderActivateDeactivate()}\n                                    {this.renderRemoveMFA()}\n                                </React.Fragment>\n                            }\n                        />\n                        <AdminPanel\n                            subtitleId={t('admin.userManagement.userDetail.teamsSubtitle')}\n                            subtitleDefault={'Teams to which this user belongs'}\n                            titleId={t('admin.userManagement.userDetail.teamsTitle')}\n                            titleDefault={'Team Membership'}\n                            button={(\n                                <div className='add-team-button'>\n                                    <button\n                                        className='btn btn-primary'\n                                        onClick={this.openAddTeam}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.userManagement.userDetail.addTeam'\n                                            defaultMessage='Add Team'\n                                        />\n                                    </button>\n                                </div>\n                            )}\n                        >\n                            <TeamList\n                                userId={this.props.user.id}\n                                userDetailCallback={this.setTeamsData}\n                                refreshTeams={this.state.refreshTeams}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        ref='errorMessage'\n                        onMouseOver={this.openTooltip}\n                        onMouseOut={this.closeTooltip}\n                    >\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        target={this.refs.errorMessage}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n                <ResetPasswordModal\n                    user={user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                {deactivateMemberModal}\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        alreadySelected={this.state.teamIds}\n                    />\n                }\n            </div>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./system_user_detail.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./abstract_list.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport './abstract_list.scss';\n\nconst PAGE_SIZE = 10;\n\ntype Props = {\n    userId: string;\n    headerLabels: Record<string, any>[];\n    data: Record<string, any>[];\n    onPageChangedCallback?: (paging: Paging) => void;\n    total: number;\n    renderRow: (item: {[x: string]: string}) => JSX.Element;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getTeamsData: (userId: string) => ActionFunc & Partial<{then: (func: () => void) => void}> | Promise<Record<string, any>>;\n        removeGroup?: () => void;\n    };\n}\n\ntype State = {\n    loading: boolean;\n    page: number;\n}\n\ntype Paging = {\n    startCount: number;\n    endCount: number;\n    total: number;\n}\n\nexport default class AbstractList extends React.PureComponent<Props, State> {\n    public static defaultProps = {\n        data: [],\n    };\n\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    public componentDidMount() {\n        this.performSearch();\n    }\n\n    private previousPage = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch();\n    }\n\n    private nextPage = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch();\n    }\n\n    private performSearch = (): void => {\n        const newState = {...this.state};\n        const userId = this.props.userId;\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getTeamsData(userId).then!(() => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging());\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    private getPaging(): Paging {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    private renderHeaderLabels = () => {\n        if (this.props.data.length > 0) {\n            return (\n                <div className='AbstractList__header'>\n                    {this.props.headerLabels.map((headerLabel, id) => (\n                        <div\n                            key={id}\n                            className='AbstractList__header-label'\n                            style={headerLabel.style}\n                        >{headerLabel.default}</div>\n                    ))}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    private renderRows = (): JSX.Element | JSX.Element[] => {\n        if (this.state.loading) {\n            return (\n                <div className='AbstractList__loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='AbstractList__empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const pageStart = this.state.page < 1 ? 0 : (this.state.page * PAGE_SIZE); // ie 0, 10, 20, etc.\n        const pageEnd = this.state.page < 1 ? PAGE_SIZE : (this.state.page + 1) * PAGE_SIZE; // ie 10, 20, 30, etc.\n        const pageData = this.props.data.slice(pageStart, pageEnd).map(this.props.renderRow); // ie 0-10, 10-20, etc.\n        return pageData;\n    }\n\n    public render = (): JSX.Element => {\n        const {startCount, endCount, total} = this.getPaging();\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='AbstractList'>\n                {this.renderHeaderLabels()}\n                <div className='AbstractList__body'>\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='AbstractList__footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={firstPage ? () => null : this.previousPage}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={lastPage ? () => null : this.nextPage}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {\n    getTeamsForUser,\n    getTeamMembersForUser,\n    removeUserFromTeam,\n    updateTeamMemberSchemeRoles,\n} from 'mattermost-redux/actions/teams';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport {GlobalState} from 'types/store';\n\nimport TeamList from './team_list';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getTeamsData: getTeamsForUser,\n            getTeamMembersForUser,\n            removeUserFromTeam,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AbstractList from './abstract_list';\nimport TeamRow from './team_row';\n\nconst headerLabels = [\n    {\n        id: t('admin.systemUserDetail.teamList.header.name'),\n        default: 'Name',\n        style: {\n            flexGrow: 1,\n            minWidth: '284px',\n            marginLeft: '16px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.type'),\n        default: 'Type',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.role'),\n        default: 'Role',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        style: {\n            width: '150px',\n        },\n    },\n];\n\ntype Props = {\n    userId: string;\n    locale: string;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getTeamsData: (userId: string) => ActionFunc;\n        getTeamMembersForUser: (userId: string) => ActionFunc;\n        removeUserFromTeam: (teamId: string, userId: string) => ActionFunc & Partial<{error: Error}>;\n        updateTeamMemberSchemeRoles: (teamId: string, userId: string, isSchemeUser: boolean, isSchemeAdmin: boolean) => ActionFunc & Partial<{error: Error}>;\n    };\n    userDetailCallback: (teamsId: Record<string, any>) => void;\n    refreshTeams: boolean;\n}\n\ntype State = {\n    teamsWithMemberships: Record<string, any>[];\n    serverError: string | null;\n}\n\nexport default class TeamList extends React.PureComponent<Props, State> {\n    public static defaultProps = {\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\n        emptyListTextDefaultMessage: 'No teams found',\n        refreshTeams: false,\n    }\n\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            teamsWithMemberships: [],\n            serverError: null,\n        };\n    }\n\n    public componentDidMount() {\n        this.getTeamsAndMemberships();\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        if (prevProps.refreshTeams !== this.props.refreshTeams) {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private getTeamsAndMemberships = async (userId = this.props.userId): Promise<void> => {\n        const teams = await this.props.actions.getTeamsData(userId);\n        const memberships = await this.props.actions.getTeamMembersForUser(userId);\n        return Promise.all([teams, memberships]).\n            then(this.mergeTeamsWithMemberships).\n            then((teamsWithMemberships) => {\n                this.setState({teamsWithMemberships});\n                this.props.userDetailCallback(teamsWithMemberships);\n            });\n    }\n\n    // check this out\n    private mergeTeamsWithMemberships = (data: Record<string, any>[]): Record<string, any>[] => {\n        const teams = data[0].data;\n        const memberships = data[1].data;\n        let teamsWithMemberships = teams.map((object: {[x: string]: string}) => {\n            const results = memberships.filter((team: {[x: string]: string}) => team.team_id === object.id);\n            const team = {...object, ...results[0]};\n            return team;\n        });\n        teamsWithMemberships = filterAndSortTeamsByDisplayName(teamsWithMemberships, this.props.locale);\n        return teamsWithMemberships;\n    }\n\n    private doRemoveUserFromTeam = async (teamId: string): Promise<void> => {\n        const {error} = await this.props.actions.removeUserFromTeam(teamId, this.props.userId);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private doMakeUserTeamAdmin = async (teamId: string) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, true);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private doMakeUserTeamMember = async (teamId: string) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, false);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    public render(): JSX.Element {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='SystemUserDetail__error has-error'>\n                    <label className='has-error control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div>{serverError}</div>\n                <AbstractList\n                    headerLabels={headerLabels}\n                    renderRow={this.renderRow}\n                    total={this.state.teamsWithMemberships.length}\n                    data={this.state.teamsWithMemberships}\n                    actions={this.props.actions}\n                    emptyListTextId={this.props.emptyListTextId}\n                    emptyListTextDefaultMessage={this.props.emptyListTextDefaultMessage}\n                    userId={this.props.userId}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private renderRow = (item: {[x: string]: string}): JSX.Element => {\n        return (\n            <TeamRow\n                key={item.id}\n                team={item}\n                doRemoveUserFromTeam={this.doRemoveUserFromTeam}\n                doMakeUserTeamAdmin={this.doMakeUserTeamAdmin}\n                doMakeUserTeamMember={this.doMakeUserTeamMember}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport EllipsisHorizontalIcon from 'components/widgets/icons/ellipsis_h_icon';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\ntype Props = {\n    team: {[x: string]: string};\n    doRemoveUserFromTeam: (teamId: string) => void;\n    doMakeUserTeamAdmin: (teamId: string) => void;\n    doMakeUserTeamMember: (teamId: string) => void;\n}\n\ntype State = {\n    serverError: string | null;\n}\n\nexport default class TeamListDropdown extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverError: null,\n        };\n    }\n\n    public render(): JSX.Element {\n        const {team} = this.props;\n        const isAdmin = team.scheme_admin;\n        const isMember = team.scheme_user && !team.scheme_admin;\n        const isGuest = team.scheme_guest;\n        const showMakeTeamAdmin = !isAdmin && !isGuest;\n        const showMakeTeamMember = !isMember && !isGuest;\n\n        return (\n            <MenuWrapper>\n                <button\n                    id={`teamListDropdown_${team.id}`}\n                    className='dropdown-toggle theme color--link style--none'\n                    type='button'\n                    aria-expanded='true'\n                >\n                    <span className='SystemUserDetail__actions-menu-icon'><EllipsisHorizontalIcon/></span>\n                </button>\n                <div>\n                    <Menu\n                        openLeft={true}\n                        openUp={false}\n                        ariaLabel={localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member')}\n                    >\n                        <Menu.ItemAction\n                            id='makeTeamAdmin'\n                            show={showMakeTeamAdmin}\n                            onClick={() => this.props.doMakeUserTeamAdmin(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeAdmin', 'Make Team Admin')}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeTeamMember}\n                            onClick={() => this.props.doMakeUserTeamMember(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeMember', 'Make Team Member')}\n                        />\n                        <Menu.ItemAction\n                            id='removeFromTeam'\n                            show={true}\n                            onClick={() => this.props.doRemoveUserFromTeam(team.id)}\n                            text={localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\n                            buttonClass='SystemUserDetail__action-remove-team'\n                        />\n                    </Menu>\n                </div>\n            </MenuWrapper>\n        );\n    }\n}\n","var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./team_row.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport './team_row.scss';\nimport TeamListDropdown from './team_list_dropdown';\n\ntype Props = {\n    team: {[x: string]: string};\n    onRowClick?: () => void;\n    doRemoveUserFromTeam: (teamId: string) => Promise<void>;\n    doMakeUserTeamAdmin: (teamId: string) => Promise<void>;\n    doMakeUserTeamMember: (teamId: string) => Promise<void>;\n}\n\nexport default class TeamRow extends React.PureComponent<Props, {}> {\n    private renderTeamType = (team: {[x: string]: string}) => {\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.groupSync'}\n                    defaultMessage={'Group sync'}\n                />\n            );\n        }\n        if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.anyoneCanJoin'}\n                    defaultMessage={'Anyone can join'}\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id={'admin.systemUserDetail.teamList.teamType.inviteOnly'}\n                defaultMessage={'Invite only'}\n            />\n        );\n    }\n    private renderTeamRole = (team: {[x: string]: string}) => {\n        if (team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.guest'}\n                    defaultMessage={'Guest'}\n                />\n            );\n        }\n        if (team.scheme_admin && !team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.admin'}\n                    defaultMessage={'Team Admin'}\n                />\n            );\n        }\n        if (team.scheme_user && !team.scheme_guest && !team.scheme_admin) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.member'}\n                    defaultMessage={'Team Member'}\n                />\n            );\n        }\n        return null;\n    }\n    public render = (): JSX.Element => {\n        const {team} = this.props;\n        const teamIconUrl = Utils.imageURLForTeam(team);\n        return (\n            <div className={'TeamRow'}>\n                <div className='TeamRow__row'>\n                    <div className='TeamRow__team-name'>\n                        <div className='col-sm-auto'>\n                            <TeamIcon\n                                size='sm'\n                                url={teamIconUrl}\n                                name={team.display_name}\n                            />\n                        </div>\n                        <div className='col-md-auto'>\n                            <b>{team.display_name}</b>\n                            {team.description && (\n                                <div className='overflow--ellipsis text-nowrap TeamRow__team-description'>\n                                    {team.description}\n                                </div>)}\n                        </div>\n\n                    </div>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamType(team)}\n                    </span>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamRole(team)}\n                    </span>\n\n                    <span className='TeamRow__actions'>\n                        <TeamListDropdown\n                            team={team}\n                            doRemoveUserFromTeam={this.props.doRemoveUserFromTeam}\n                            doMakeUserTeamAdmin={this.props.doMakeUserTeamAdmin}\n                            doMakeUserTeamMember={this.props.doMakeUserTeamMember}\n                        />\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeams, getTeamStats} from 'mattermost-redux/actions/teams';\nimport {\n    getUser,\n    getUserAccessToken,\n    getProfiles,\n    searchProfiles,\n    revokeSessionsForAllUsers,\n} from 'mattermost-redux/actions/users';\nimport {logError} from 'mattermost-redux/actions/errors';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {Stats} from 'mattermost-redux/constants';\n\nimport {loadProfilesAndTeamMembers, loadProfilesWithoutTeam} from 'actions/user_actions.jsx';\n\nimport {setSystemUsersSearch} from 'actions/views/search';\nimport {SearchUserTeamFilter} from 'utils/constants';\n\nimport SystemUsers from './system_users.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const mfaEnabled = config.EnableMultifactorAuthentication === 'true';\n    const enableUserAccessTokens = config.EnableUserAccessTokens === 'true';\n    const experimentalEnableAuthenticationTransfer = config.ExperimentalEnableAuthenticationTransfer === 'true';\n\n    const search = state.views.search.systemUsersSearch;\n    let totalUsers = 0;\n    let searchTerm = '';\n    let teamId = '';\n    let filter = '';\n    if (search) {\n        searchTerm = search.term || '';\n        teamId = search.team || '';\n        filter = search.filter || '';\n\n        if (!teamId || teamId === SearchUserTeamFilter.ALL_USERS) {\n            const stats = state.entities.admin.analytics || {[Stats.TOTAL_USERS]: 0, [Stats.TOTAL_INACTIVE_USERS]: 0};\n            totalUsers = stats[Stats.TOTAL_USERS] + stats[Stats.TOTAL_INACTIVE_USERS];\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            totalUsers = 0;\n        } else {\n            const stats = state.entities.teams.stats[teamId] || {total_member_count: 0};\n            totalUsers = stats.total_member_count;\n        }\n    }\n\n    return {\n        teams: getTeamsList(state),\n        siteName,\n        mfaEnabled,\n        totalUsers,\n        searchTerm,\n        teamId,\n        filter,\n        enableUserAccessTokens,\n        users: getUsers(state),\n        experimentalEnableAuthenticationTransfer,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getTeamStats,\n            getUser,\n            getUserAccessToken,\n            loadProfilesAndTeamMembers,\n            setSystemUsersSearch,\n            loadProfilesWithoutTeam,\n            getProfiles,\n            searchProfiles,\n            revokeSessionsForAllUsers,\n            logError,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser} from 'mattermost-redux/actions/users';\n\nimport SystemUsersList from './system_users_list.jsx';\nimport {getNonBotUsers} from './selectors.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const users = getNonBotUsers(state, ownProps.loading, ownProps.teamId, ownProps.term, ownProps.filter);\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getUser, getProfiles, getProfilesInTeam, getProfilesWithoutTeam, searchProfiles, searchProfilesInTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport {userSelectorOptionsFromFilter} from 'utils/filter_users';\n\nconst ALL_USERS = '';\nconst NO_TEAM = 'no_team';\nconst USER_ID_LENGTH = 26;\n\nexport function getUsers(state, loading, teamId, term, filter) {\n    if (loading) {\n        // Show no users while loading.\n        return [];\n    }\n    const filters = userSelectorOptionsFromFilter(filter);\n    if (term) {\n        let users = [];\n        if (teamId) {\n            users = searchProfilesInTeam(state, teamId, term, false, filters);\n        } else {\n            users = searchProfiles(state, term, false, filters);\n        }\n\n        if (users.length === 0 && term.length === USER_ID_LENGTH) {\n            const user = getUser(state, term);\n            if (user) {\n                users = [user];\n            }\n        }\n\n        return users;\n    }\n\n    if (teamId === ALL_USERS) {\n        return getProfiles(state, filters);\n    } else if (teamId === NO_TEAM) {\n        return getProfilesWithoutTeam(state, filters);\n    }\n\n    return getProfilesInTeam(state, teamId, filters);\n}\n\nexport function getNonBotUsers(state, loading, teamId, term, filter) {\n    return getUsers(state, loading, teamId, term, filter).filter((user) => {\n        return !user.is_bot;\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ManageRolesModal from 'components/admin_console/manage_roles_modal';\nimport ManageTeamsModal from 'components/admin_console/manage_teams_modal';\nimport ManageTokensModal from 'components/admin_console/manage_tokens_modal';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport ResetEmailModal from 'components/admin_console/reset_email_modal/reset_email_modal.jsx';\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list.jsx';\nimport UserListRowWithError from 'components/user_list_row_with_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport SystemUsersDropdown from '../system_users_dropdown';\n\nexport default class SystemUsersList extends React.PureComponent {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object),\n        usersPerPage: PropTypes.number,\n        total: PropTypes.number,\n        nextPage: PropTypes.func,\n        search: PropTypes.func.isRequired,\n        focusOnMount: PropTypes.bool,\n        renderFilterRow: PropTypes.func,\n\n        teamId: PropTypes.string.isRequired,\n        filter: PropTypes.string.isRequired,\n        term: PropTypes.string.isRequired,\n        onTermChange: PropTypes.func.isRequired,\n\n        /**\n         * Whether MFA is licensed and enabled.\n         */\n        mfaEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not user access tokens are enabled.\n         */\n        enableUserAccessTokens: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not the experimental authentication transfer is enabled.\n         */\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n            getUser: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n\n            filter: props.filter,\n            teamId: props.teamId,\n            showManageTeamsModal: false,\n            showManageRolesModal: false,\n            showManageTokensModal: false,\n            showPasswordModal: false,\n            showEmailModal: false,\n            user: null,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (prevState.teamId !== nextProps.teamId || prevState.filter !== nextProps.filter) {\n            return {\n                page: 0,\n                teamId: nextProps.teamId,\n                filter: nextProps.filter,\n            };\n        }\n        return null;\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n\n        this.props.nextPage(this.state.page + 1);\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    search = (term) => {\n        this.props.search(term);\n\n        if (term !== '') {\n            this.setState({page: 0});\n        }\n    }\n\n    doManageTeams = (user) => {\n        this.setState({\n            showManageTeamsModal: true,\n            user,\n        });\n    }\n\n    doManageRoles = (user) => {\n        this.setState({\n            showManageRolesModal: true,\n            user,\n        });\n    }\n\n    doManageTokens = (user) => {\n        this.setState({\n            showManageTokensModal: true,\n            user,\n        });\n    }\n\n    doManageTeamsDismiss = () => {\n        this.setState({\n            showManageTeamsModal: false,\n            user: null,\n        });\n    }\n\n    doManageRolesDismiss = () => {\n        this.setState({\n            showManageRolesModal: false,\n            user: null,\n        });\n    }\n\n    doManageTokensDismiss = () => {\n        this.setState({\n            showManageTokensModal: false,\n            user: null,\n        });\n    }\n\n    doPasswordReset = (user) => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = () => {\n        this.setState({\n            showPasswordModal: false,\n            user: null,\n        });\n    }\n\n    doPasswordResetSubmit = (user) => {\n        this.props.actions.getUser(user.id);\n\n        this.setState({\n            showPasswordModal: false,\n            user: null,\n        });\n    }\n\n    doEmailReset = (user) => {\n        this.setState({\n            showEmailModal: true,\n            user,\n        });\n    }\n\n    doEmailResetDismiss = () => {\n        this.setState({\n            showEmailModal: false,\n            user: null,\n        });\n    }\n\n    doEmailResetSubmit = (user) => {\n        this.props.actions.getUser(user.id);\n\n        this.setState({\n            showEmailModal: false,\n            user: null,\n        });\n    }\n\n    getInfoForUser(user) {\n        const info = [];\n\n        if (user.auth_service) {\n            let service;\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\n                service = user.auth_service.toUpperCase();\n            } else {\n                service = Utils.toTitleCase(user.auth_service);\n            }\n\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceNotEmail'\n                    id='admin.user_item.authServiceNotEmail'\n                    defaultMessage='**Sign-in Method:** {service}'\n                    values={{\n                        service,\n                    }}\n                />,\n            );\n        } else {\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceEmail'\n                    id='admin.user_item.authServiceEmail'\n                    defaultMessage='**Sign-in Method:** Email'\n                />,\n            );\n        }\n\n        info.push(', ');\n        const userID = user.id;\n        info.push(\n            <FormattedMarkdownMessage\n                key='admin.user_item.user_id'\n                id='admin.user_item.user_id'\n                defaultMessage='**User ID:** {userID}'\n                values={{\n                    userID,\n                }}\n            />,\n        );\n\n        if (this.props.mfaEnabled) {\n            info.push(', ');\n\n            if (user.mfa_active) {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaYes'\n                        id='admin.user_item.mfaYes'\n                        defaultMessage='**MFA**: Yes'\n                    />,\n                );\n            } else {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaNo'\n                        id='admin.user_item.mfaNo'\n                        defaultMessage='**MFA**: No'\n                    />,\n                );\n            }\n        }\n\n        return info;\n    }\n\n    renderCount(count, total, startCount, endCount, isSearch) {\n        if (total) {\n            if (isSearch) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countSearch'\n                        defaultMessage='{count, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            total,\n                        }}\n                    />\n                );\n            } else if (startCount !== 0 || endCount !== total) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countPage'\n                        defaultMessage='{startCount, number} - {endCount, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            startCount: startCount + 1,\n                            endCount,\n                            total,\n                        }}\n                    />\n                );\n            }\n\n            return (\n                <FormattedMessage\n                    id='system_users_list.count'\n                    defaultMessage='{count, number} {count, plural, one {user} other {users}}'\n                    values={{\n                        count,\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n        const extraInfo = {};\n        if (this.props.users) {\n            for (const user of this.props.users) {\n                extraInfo[user.id] = this.getInfoForUser(user);\n            }\n        }\n\n        return (\n            <div>\n                <SearchableUserList\n                    {...this.props}\n                    renderCount={this.renderCount}\n                    extraInfo={extraInfo}\n                    actions={[SystemUsersDropdown]}\n                    actionProps={{\n                        mfaEnabled: this.props.mfaEnabled,\n                        enableUserAccessTokens: this.props.enableUserAccessTokens,\n                        experimentalEnableAuthenticationTransfer: this.props.experimentalEnableAuthenticationTransfer,\n                        doPasswordReset: this.doPasswordReset,\n                        doEmailReset: this.doEmailReset,\n                        doManageTeams: this.doManageTeams,\n                        doManageRoles: this.doManageRoles,\n                        doManageTokens: this.doManageTokens,\n                    }}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    search={this.search}\n                    page={this.state.page}\n                    term={this.props.term}\n                    onTermChange={this.props.onTermChange}\n                    rowComponentType={UserListRowWithError}\n                />\n                <ManageTeamsModal\n                    user={this.state.user}\n                    show={this.state.showManageTeamsModal}\n                    onModalDismissed={this.doManageTeamsDismiss}\n                />\n                <ManageRolesModal\n                    user={this.state.user}\n                    show={this.state.showManageRolesModal}\n                    onModalDismissed={this.doManageRolesDismiss}\n                />\n                <ManageTokensModal\n                    user={this.state.user}\n                    show={this.state.showManageTokensModal}\n                    onModalDismissed={this.doManageTokensDismiss}\n                />\n                <ResetPasswordModal\n                    user={this.state.user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                <ResetEmailModal\n                    user={this.state.user}\n                    show={this.state.showEmailModal}\n                    onModalSubmit={this.doEmailResetSubmit}\n                    onModalDismissed={this.doEmailResetDismiss}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {debounce} from 'mattermost-redux/actions/helpers';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {getStandardAnalytics} from 'actions/admin_actions.jsx';\nimport {Constants, UserSearchOptions, SearchUserTeamFilter, UserFilters} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n.jsx';\nimport {getUserOptionsFromFilter, searchUserOptionsFromFilter} from 'utils/filter_users';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport ConfirmModal from 'components/confirm_modal';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\n\nimport SystemUsersList from './list';\n\nconst USER_ID_LENGTH = 26;\nconst USERS_PER_PAGE = 50;\n\nexport default class SystemUsers extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of team objects\n         */\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * Title of the app or site.\n         */\n        siteName: PropTypes.string,\n\n        /**\n         * Whether or not MFA is licensed and enabled.\n         */\n        mfaEnabled: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not user access tokens are enabled.\n         */\n        enableUserAccessTokens: PropTypes.bool.isRequired,\n\n        /**\n         * Whether or not the experimental authentication transfer is enabled.\n         */\n        experimentalEnableAuthenticationTransfer: PropTypes.bool.isRequired,\n        totalUsers: PropTypes.number.isRequired,\n        searchTerm: PropTypes.string.isRequired,\n        teamId: PropTypes.string.isRequired,\n        filter: PropTypes.string.isRequired,\n        users: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get teams\n             */\n            getTeams: PropTypes.func.isRequired,\n\n            /*\n             * Function to get statistics for a team\n             */\n            getTeamStats: PropTypes.func.isRequired,\n\n            /*\n             * Function to get a user\n             */\n            getUser: PropTypes.func.isRequired,\n\n            /*\n             * Function to get a user access token\n             */\n            getUserAccessToken: PropTypes.func.isRequired,\n            loadProfilesAndTeamMembers: PropTypes.func.isRequired,\n            loadProfilesWithoutTeam: PropTypes.func.isRequired,\n            getProfiles: PropTypes.func.isRequired,\n            setSystemUsersSearch: PropTypes.func.isRequired,\n            searchProfiles: PropTypes.func.isRequired,\n\n            /*\n             * Function to revoke all sessions in the system\n             */\n            revokeSessionsForAllUsers: PropTypes.func.isRequired,\n\n            /*\n            *  Function to log errors\n            */\n            logError: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            searching: false,\n            showRevokeAllSessionsModal: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadDataForTeam(this.props.teamId, this.props.filter);\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setSystemUsersSearch('', '', '');\n    }\n\n    loadDataForTeam = async (teamId, filter) => {\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n            getTeamStats,\n        } = this.props.actions;\n\n        if (this.props.searchTerm) {\n            this.doSearch(this.props.searchTerm, teamId, filter);\n            return;\n        }\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await Promise.all([\n                getProfiles(0, Constants.PROFILE_CHUNK_SIZE, options),\n                getStandardAnalytics(),\n            ]);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(0, Constants.PROFILE_CHUNK_SIZE, options);\n        } else {\n            await Promise.all([\n                loadProfilesAndTeamMembers(0, Constants.PROFILE_CHUNK_SIZE, teamId, options),\n                getTeamStats(teamId),\n            ]);\n        }\n\n        this.setState({loading: false});\n    }\n\n    handleTeamChange = (e) => {\n        const teamId = e.target.value;\n        this.loadDataForTeam(teamId, this.props.filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, teamId, this.props.filter);\n    }\n\n    handleFilterChange = (e) => {\n        const filter = e.target.value;\n        this.loadDataForTeam(this.props.teamId, filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, this.props.teamId, filter);\n    }\n\n    handleTermChange = (term) => {\n        this.props.actions.setSystemUsersSearch(term, this.props.teamId, this.props.filter);\n    }\n    handleRevokeAllSessions = async () => {\n        const {data} = await this.props.actions.revokeSessionsForAllUsers();\n        if (data) {\n            emitUserLoggedOutEvent();\n        } else {\n            this.props.actions.logError({type: 'critical', message: 'Can\\'t revoke all sessions'});\n        }\n    }\n    handleRevokeAllSessionsCancel = () => {\n        this.setState({showRevokeAllSessionsModal: false});\n    }\n    handleShowRevokeAllSessionsModal = () => {\n        this.setState({showRevokeAllSessionsModal: true});\n    }\n\n    nextPage = async (page) => {\n        const {teamId, filter} = this.props;\n\n        // Paging isn't supported while searching\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n        } = this.props.actions;\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await getProfiles(page + 1, USERS_PER_PAGE, options);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(page + 1, USERS_PER_PAGE, options);\n        } else {\n            await loadProfilesAndTeamMembers(page + 1, USERS_PER_PAGE, teamId, options);\n        }\n        this.setState({loading: false});\n    }\n\n    doSearch = debounce(async (term, teamId = this.props.teamId, filter = this.props.filter) => {\n        if (!term) {\n            return;\n        }\n\n        this.setState({loading: true});\n\n        const options = {\n            ...searchUserOptionsFromFilter(filter),\n            ...teamId && {team_id: teamId},\n            ...teamId === SearchUserTeamFilter.NO_TEAM && {\n                [UserSearchOptions.WITHOUT_TEAM]: true,\n            },\n            allow_inactive: true,\n        };\n\n        const {data: profiles} = await this.props.actions.searchProfiles(term, options);\n        if (profiles.length === 0 && term.length === USER_ID_LENGTH) {\n            await this.getUserByTokenOrId(term);\n        }\n\n        this.setState({loading: false});\n    }, Constants.SEARCH_TIMEOUT_MILLISECONDS);\n\n    getUserById = async (id) => {\n        if (this.props.users[id]) {\n            this.setState({loading: false});\n            return;\n        }\n\n        await this.props.actions.getUser(id);\n        this.setState({loading: false});\n    }\n\n    getUserByTokenOrId = async (id) => {\n        if (this.props.enableUserAccessTokens) {\n            const {data} = await this.props.actions.getUserAccessToken(id);\n\n            if (data) {\n                this.setState({term: data.user_id});\n                this.getUserById(data.user_id);\n                return;\n            }\n        }\n\n        this.getUserById(id);\n    }\n\n    renderRevokeAllUsersModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_modal_title'\n                defaultMessage='Revoke all sessions in the system'\n            />\n        );\n\n        const message = (\n            <div>\n                <FormattedMarkdownMessage\n                    id='admin.system_users.revoke_all_sessions_modal_message'\n                    defaultMessage='This action revokes all sessions in the system. All users will be logged out from all devices. Are you sure you want to revoke all sessions?'\n                />\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const revokeAllButton = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_button'\n                defaultMessage='Revoke All Sessions'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeAllSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={revokeAllButton}\n                onConfirm={this.handleRevokeAllSessions}\n                onCancel={this.handleRevokeAllSessionsCancel}\n            />\n        );\n    }\n\n    renderFilterRow = (doSearch) => {\n        const teams = this.props.teams.map((team) => (\n            <option\n                key={team.id}\n                value={team.id}\n            >\n                {team.display_name}\n            </option>\n        ));\n\n        return (\n            <div className='system-users__filter-row'>\n                <div className='system-users__filter'>\n                    <LocalizedInput\n                        id='searchUsers'\n                        className='form-control filter-textbox'\n                        placeholder={{id: t('filtered_user_list.search'), defaultMessage: 'Search users'}}\n                        onInput={doSearch}\n                    />\n                </div>\n                <label>\n                    <span className='system-users__team-filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.team'\n                            defaultMessage='Team:'\n                        />\n                    </span>\n                    <select\n                        className='form-control system-users__team-filter'\n                        onChange={this.handleTeamChange}\n                        value={this.props.teamId}\n                    >\n                        <option value={SearchUserTeamFilter.ALL_USERS}>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={SearchUserTeamFilter.NO_TEAM}>{Utils.localizeMessage('admin.system_users.noTeams', 'No Teams')}</option>\n                        {teams}\n                    </select>\n                </label>\n                <label>\n                    <span className='system-users__filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.userStatus'\n                            defaultMessage='User Status:'\n                        />\n                    </span>\n                    <select\n                        id='selectUserStatus'\n                        className='form-control system-users__filter'\n                        value={this.props.filter}\n                        onChange={this.handleFilterChange}\n                    >\n                        <option value=''>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={UserFilters.SYSTEM_ADMIN}>{Utils.localizeMessage('admin.system_users.system_admin', 'System Admin')}</option>\n                        <option value={UserFilters.SYSTEM_GUEST}>{Utils.localizeMessage('admin.system_users.guest', 'Guest')}</option>\n                        <option value={UserFilters.INACTIVE}>{Utils.localizeMessage('admin.system_users.inactive', 'Inactive')}</option>\n                    </select>\n                </label>\n            </div>\n        );\n    }\n\n    render() {\n        const revokeAllUsersModal = this.renderRevokeAllUsersModal();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.system_users.title'\n                    defaultMessage='{siteName} Users'\n                    values={{\n                        siteName: this.props.siteName,\n                    }}\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='more-modal__list member-list-holder'>\n                            <SystemUsersList\n                                loading={this.state.loading}\n                                renderFilterRow={this.renderFilterRow}\n                                search={this.doSearch}\n                                nextPage={this.nextPage}\n                                usersPerPage={USERS_PER_PAGE}\n                                total={this.props.totalUsers}\n                                teams={this.props.teams}\n                                teamId={this.props.teamId}\n                                filter={this.props.filter}\n                                term={this.props.searchTerm}\n                                onTermChange={this.handleTermChange}\n                                mfaEnabled={this.props.mfaEnabled}\n                                enableUserAccessTokens={this.props.enableUserAccessTokens}\n                                experimentalEnableAuthenticationTransfer={this.props.experimentalEnableAuthenticationTransfer}\n                            />\n                        </div>\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            {revokeAllUsersModal}\n                            <div className='pt-3 pb-3'>\n                                <button\n                                    id='revoke-all-users'\n                                    className='btn btn-default'\n                                    onClick={() => this.handleShowRevokeAllSessionsModal()}\n                                >\n                                    <FormattedMessage\n                                        id='admin.system_users.revokeAllSessions'\n                                        defaultMessage='Revoke All Sessions'\n                                    />\n                                </button>\n                            </div>\n                        </SystemPermissionGate>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {updateUserActive, revokeAllSessionsForUser, promoteGuestToUser, demoteUserToGuest} from 'mattermost-redux/actions/users';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {loadBots} from 'mattermost-redux/actions/bots';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport {GlobalState} from 'types/store';\n\nimport SystemUsersDropdown from './system_users_dropdown';\n\ntype Actions = {\n    updateUserActive: (id: string, active: boolean) => Promise<{error: ServerError}>;\n    revokeAllSessionsForUser: (id: string) => Promise<{error: ServerError; data: any}>;\n    promoteGuestToUser: (id: string) => Promise<{error: ServerError}>;\n    demoteUserToGuest: (id: string) => Promise<{error: ServerError}>;\n    loadBots: (page?: number, size?: number) => Promise<{}>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const bots = getBotAccounts(state);\n    const license = getLicense(state);\n    return {\n        isLicensed: license && license.IsLicensed === 'true',\n        config: Selectors.getConfig(state),\n        currentUser: getCurrentUser(state),\n        bots,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateUserActive,\n            revokeAllSessionsForUser,\n            promoteGuestToUser,\n            demoteUserToGuest,\n            loadBots,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {Bot} from 'mattermost-redux/types/bots';\n\nimport {adminResetMfa} from 'actions/admin_actions.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport {getSiteURL} from 'utils/url';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport ConfirmModal from 'components/confirm_modal';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nconst ROWS_FROM_BOTTOM_TO_OPEN_UP = 3;\nconst TOTAL_USERS_TO_OPEN_UP = 5;\n\ntype Props = {\n    user: UserProfile & {mfa_active: boolean};\n    currentUser: UserProfile;\n    mfaEnabled: boolean;\n    enableUserAccessTokens: boolean;\n    experimentalEnableAuthenticationTransfer: boolean;\n    index: number;\n    totalUsers: number;\n    config: any;\n    bots: Dictionary<Bot>;\n    isLicensed: boolean;\n    actions: {\n        updateUserActive: (id: string, active: boolean) => Promise<{error: ServerError}>;\n        revokeAllSessionsForUser: (id: string) => Promise<{error: ServerError; data: any}>;\n        promoteGuestToUser: (id: string) => Promise<{error: ServerError}>;\n        demoteUserToGuest: (id: string) => Promise<{error: ServerError}>;\n        loadBots: (page?: number, size?: number) => Promise<{}>;\n    };\n    doPasswordReset: (user: UserProfile) => void;\n    doEmailReset: (user: UserProfile) => void;\n    doManageTeams: (user: UserProfile) => void;\n    doManageRoles: (user: UserProfile) => void;\n    doManageTokens: (user: UserProfile) => void;\n    onError: (error: ServerError | {id: string}) => void;\n}\n\ntype State = {\n    showDeactivateMemberModal: boolean;\n    showRevokeSessionsModal: boolean;\n    showPromoteToUserModal: boolean;\n    showDemoteToGuestModal: boolean;\n    user: UserProfile | null;\n    role: string | null;\n}\n\nexport default class SystemUsersDropdown extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showDeactivateMemberModal: false,\n            showRevokeSessionsModal: false,\n            showPromoteToUserModal: false,\n            showDemoteToGuestModal: false,\n            user: null,\n            role: null,\n        };\n    }\n\n    handleMakeActive = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then(this.onUpdateActiveResult);\n    }\n\n    handleManageTeams = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageTeams(this.props.user);\n    }\n\n    handleManageRoles = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageRoles(this.props.user);\n    }\n\n    handleManageTokens = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageTokens(this.props.user);\n    }\n\n    handleResetPassword = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.doPasswordReset(this.props.user);\n    }\n\n    handleResetEmail = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.doEmailReset(this.props.user);\n    }\n\n    handleResetMfa = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, this.props.onError);\n    }\n\n    handleShowDeactivateMemberModal = async (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            await this.props.actions.loadBots(\n                Constants.Integrations.START_PAGE_NUM,\n                parseInt(Constants.Integrations.PAGE_SIZE, 10),\n            );\n        }\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = () => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then(this.onUpdateActiveResult);\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = ({error}: {error: ServerError}) => {\n        if (error) {\n            this.props.onError({id: error.server_error_id, ...error});\n        }\n    }\n\n    handleDeactivateCancel = () => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    renderDeactivateMemberModal = () => {\n        const user = this.props.user;\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const defaultMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc'\n                defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system.\\n'\n                values={{\n                    username: user.username,\n                }}\n            />);\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const confirmationMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc.confirm'\n                defaultMessage='Are you sure you want to deactivate {username}?'\n                values={{\n                    username: user.username,\n                }}\n            />);\n        let messageForUsersWithBotAccounts;\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            for (const bot of Object.values(this.props.bots)) {\n                if ((bot.owner_id === user.id) && this.state.showDeactivateMemberModal && (bot.delete_at === 0)) {\n                    messageForUsersWithBotAccounts = (\n                        <FormattedMarkdownMessage\n                            id='deactivate_member_modal.desc.for_users_with_bot_accounts'\n                            defaultMessage='This action deactivates {username}.\\n \\n * They will be logged out and not have access to any teams or channels on this system.\\n * Bot accounts they manage will be disabled along with their integrations. To enable them again, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). [Learn more about bot accounts](!https://mattermost.com/pl/default-bot-accounts).\\n \\n \\n'\n                            values={{\n                                username: user.username,\n                                siteURL: getSiteURL(),\n                            }}\n                        />);\n                    break;\n                }\n            }\n        }\n\n        const message = (\n            <div>\n                {messageForUsersWithBotAccounts || defaultMessage}\n                {confirmationMessage}\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    shouldDisableBotsWhenOwnerIsDeactivated() {\n        return this.props.config &&\n            this.props.config.ServiceSettings &&\n            this.props.config.ServiceSettings.DisableBotsWhenOwnerIsDeactivated;\n    }\n\n    handleShowRevokeSessionsModal = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.setState({showRevokeSessionsModal: true});\n    }\n\n    handleRevokeSessions = async () => {\n        const me = this.props.currentUser;\n\n        const {data, error} = await this.props.actions.revokeAllSessionsForUser(this.props.user.id);\n        if (data && this.props.user.id === me.id) {\n            emitUserLoggedOutEvent();\n        } else if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handleRevokeSessionsCancel = () => {\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handlePromoteToUser = () => {\n        this.setState({showPromoteToUserModal: true});\n    }\n\n    handlePromoteToUserConfirm = async () => {\n        const {error} = await this.props.actions.promoteGuestToUser(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handlePromoteToUserCancel = () => {\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handleDemoteToGuest = () => {\n        this.setState({showDemoteToGuestModal: true});\n    }\n\n    handleDemoteToGuestConfirm = async () => {\n        const {error} = await this.props.actions.demoteUserToGuest(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    handleDemoteToGuestCancel = () => {\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    renderPromoteToUserModal = () => {\n        const title = (\n            <FormattedMessage\n                id='promote_to_user_modal.title'\n                defaultMessage='Promote guest {username} to user'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='promote_to_user_modal.desc'\n                defaultMessage='This action promotes the guest {username} to a member. It will allow the user to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to promote guest {username} to user?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const promoteUserButton = (\n            <FormattedMessage\n                id='promote_to_user_modal.promote'\n                defaultMessage='Promote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showPromoteToUserModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={promoteUserButton}\n                onConfirm={this.handlePromoteToUserConfirm}\n                onCancel={this.handlePromoteToUserCancel}\n            />\n        );\n    }\n\n    renderDemoteToGuestModal = () => {\n        const title = (\n            <FormattedMessage\n                id='demote_to_user_modal.title'\n                defaultMessage='Demote User {username} to Guest'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='demote_to_user_modal.desc'\n                defaultMessage={'This action demotes the user {username} to a guest. It will restrict the user\\'s ability to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to demote user {username} to guest?'}\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const demoteGuestButton = (\n            <FormattedMessage\n                id='demote_to_user_modal.demote'\n                defaultMessage='Demote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDemoteToGuestModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={demoteGuestButton}\n                onConfirm={this.handleDemoteToGuestConfirm}\n                onCancel={this.handleDemoteToGuestCancel}\n            />\n        );\n    }\n\n    renderRevokeSessionsModal = () => {\n        const title = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.title'\n                defaultMessage='Revoke Sessions for {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.desc'\n                defaultMessage='This action revokes all sessions for {username}. They will be logged out from all devices. Are you sure you want to revoke all sessions for {username}?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const revokeUserButtonButton = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.revoke'\n                defaultMessage='Revoke'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={revokeUserButtonButton}\n                onConfirm={this.handleRevokeSessions}\n                onCancel={this.handleRevokeSessionsCancel}\n            />\n        );\n    }\n\n    renderAccessToken = () => {\n        const userAccessTokensEnabled = this.props.enableUserAccessTokens;\n        if (!userAccessTokensEnabled) {\n            return null;\n        }\n\n        const user = this.props.user;\n        const hasPostAllRole = UserUtils.hasPostAllRole(user.roles);\n        const hasPostAllPublicRole = UserUtils.hasPostAllPublicRole(user.roles);\n        const hasUserAccessTokenRole = UserUtils.hasUserAccessTokenRole(user.roles);\n        const isSystemAdmin = UserUtils.isSystemAdmin(user.roles);\n\n        let messageId = '';\n        if (hasUserAccessTokenRole || isSystemAdmin) {\n            if (hasPostAllRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAll');\n            } else if (hasPostAllPublicRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAllPublic');\n            } else {\n                messageId = t('admin.user_item.userAccessTokenYes');\n            }\n        }\n\n        if (!messageId) {\n            return null;\n        }\n\n        return (\n            <div className='light mt-1'>\n                <FormattedMessage\n                    key='admin.user_item.userAccessToken'\n                    id={messageId}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        const {currentUser, user, isLicensed} = this.props;\n        const isGuest = Utils.isGuest(user);\n        if (!user) {\n            return <div/>;\n        }\n\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (isGuest) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.guest'\n                    defaultMessage='Guest'\n                />\n            );\n        }\n\n        if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.systemAdmin'\n                    defaultMessage='System Admin'\n                />\n            );\n        }\n\n        let showMakeActive = false;\n        let showMakeNotActive = !Utils.isSystemAdmin(user.roles);\n        let showManageTeams = true;\n        let showRevokeSessions = true;\n        const showMfaReset = this.props.mfaEnabled && Boolean(user.mfa_active);\n\n        if (user.delete_at > 0) {\n            currentRoles = (\n                <FormattedMessage\n                    id='admin.user_item.inactive'\n                    defaultMessage='Inactive'\n                />\n            );\n            showMakeActive = true;\n            showMakeNotActive = false;\n            showManageTeams = false;\n            showRevokeSessions = false;\n        }\n\n        let disableActivationToggle = false;\n        if (user.auth_service === Constants.LDAP_SERVICE) {\n            disableActivationToggle = true;\n        }\n\n        const deactivateMemberModal = this.renderDeactivateMemberModal();\n        const revokeSessionsModal = this.renderRevokeSessionsModal();\n        const promoteToUserModal = this.renderPromoteToUserModal();\n        const demoteToGuestModal = this.renderDemoteToGuestModal();\n\n        const {index, totalUsers} = this.props;\n        return (\n            <React.Fragment>\n                {deactivateMemberModal}\n                {revokeSessionsModal}\n                {promoteToUserModal}\n                {demoteToGuestModal}\n                <MenuWrapper>\n                    <div className='text-right'>\n                        <a>\n                            <span>{currentRoles} </span>\n                            <span className='caret'/>\n                        </a>\n                        {this.renderAccessToken()}\n                    </div>\n                    <Menu\n                        openLeft={true}\n                        openUp={totalUsers > TOTAL_USERS_TO_OPEN_UP && totalUsers - index <= ROWS_FROM_BOTTOM_TO_OPEN_UP}\n                        ariaLabel={Utils.localizeMessage('admin.user_item.menuAriaLabel', 'User Actions Menu')}\n                    >\n                        <Menu.ItemAction\n                            show={showMakeActive}\n                            onClick={this.handleMakeActive}\n                            text={Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeNotActive}\n                            onClick={this.handleShowDeactivateMemberModal}\n                            text={Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest}\n                            onClick={this.handleManageRoles}\n                            text={Utils.localizeMessage('admin.user_item.manageRoles', 'Manage Roles')}\n                        />\n                        <Menu.ItemAction\n                            show={showManageTeams}\n                            onClick={this.handleManageTeams}\n                            text={Utils.localizeMessage('admin.user_item.manageTeams', 'Manage Teams')}\n                        />\n                        <Menu.ItemAction\n                            show={this.props.enableUserAccessTokens}\n                            onClick={this.handleManageTokens}\n                            text={Utils.localizeMessage('admin.user_item.manageTokens', 'Manage Tokens')}\n                        />\n                        <Menu.ItemAction\n                            show={showMfaReset}\n                            onClick={this.handleResetMfa}\n                            text={Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\n                        />\n                        <Menu.ItemAction\n                            show={Boolean(user.auth_service) && this.props.experimentalEnableAuthenticationTransfer}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.switchToEmail', 'Switch to Email/Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service && user.id !== currentUser.id}\n                            onClick={this.handleResetEmail}\n                            text={Utils.localizeMessage('admin.user_item.resetEmail', 'Update Email')}\n                        />\n                        <Menu.ItemAction\n                            show={isGuest}\n                            onClick={this.handlePromoteToUser}\n                            text={Utils.localizeMessage('admin.user_item.promoteToUser', 'Promote to User')}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest && user.id !== currentUser.id && isLicensed}\n                            onClick={this.handleDemoteToGuest}\n                            text={Utils.localizeMessage('admin.user_item.demoteToGuest', 'Demote to Guest')}\n                        />\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            <Menu.ItemAction\n                                show={showRevokeSessions}\n                                onClick={this.handleShowRevokeSessionsModal}\n                                text={Utils.localizeMessage('admin.user_item.revokeSessions', 'Revoke Sessions')}\n                            />\n                        </SystemPermissionGate>\n                    </Menu>\n                </MenuWrapper>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nexport const PAGE_SIZE = 10;\n\nexport default class AbstractList extends React.PureComponent {\n    static propTypes = {\n        data: PropTypes.arrayOf(PropTypes.object),\n        onPageChangedCallback: PropTypes.func,\n        total: PropTypes.number.isRequired,\n        header: PropTypes.node.isRequired,\n        renderRow: PropTypes.func.isRequired,\n        emptyListTextId: PropTypes.string.isRequired,\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getData: PropTypes.func.isRequired,\n            removeGroup: PropTypes.func,\n        }).isRequired,\n        noPadding: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        data: [],\n        noPadding: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.performSearch(this.state.page);\n    }\n\n    previousPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    nextPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    renderHeader = () => {\n        if (this.props.data.length > 0) {\n            return this.props.header;\n        }\n        return null;\n    }\n\n    renderRows = () => {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const offset = this.state.page * PAGE_SIZE;\n        return this.props.data.slice(offset, offset + PAGE_SIZE).map(this.props.renderRow);\n    }\n\n    performSearch = (page) => {\n        const newState = {...this.state};\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getData(page, PAGE_SIZE).then((response) => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging(), response);\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    getPaging() {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    render = () => {\n        const {startCount, endCount, total} = this.getPaging();\n        const {noPadding} = this.props;\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div\n                className={classNames(\n                    'groups-list',\n                    'groups-list-no-padding',\n                    {\n                        'groups-list-less-padding': noPadding,\n                    },\n                )}\n            >\n                {this.renderHeader()}\n                <div\n                    id='groups-list--body'\n                    className='groups-list--body'\n                >\n                    {this.renderRows()}\n                </div>\n                {total > 0 && <div className='groups-list--footer'>\n                    <div className='counter'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.list.paginatorCount'\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                            values={{\n                                startCount,\n                                endCount,\n                                total,\n                            }}\n                        />\n                    </div>\n                    <button\n                        className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                        onClick={firstPage ? null : this.previousPage}\n                        disabled={firstPage}\n                    >\n                        <PreviousIcon/>\n                    </button>\n                    <button\n                        className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                        onClick={lastPage ? null : this.nextPage}\n                        disabled={lastPage}\n                        data-testid='page-link-next'\n                    >\n                        <NextIcon/>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport ChannelsList from 'components/admin_console/team_channel_settings/channel/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nexport class ChannelsSettings extends React.PureComponent {\n    static propTypes = {\n        siteName: PropTypes.string.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            startCount: 0,\n            endCount: 1,\n            total: 0,\n        };\n    }\n\n    onPageChangedCallback = ({startCount, endCount, total}) => {\n        this.setState({startCount, endCount, total});\n    }\n\n    render = () => {\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.channel_settings.groupsPageTitle'\n                        defaultMessage='{siteName} Channels'\n                        values={{siteName: this.props.siteName}}\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminPanel\n                            id='channels'\n                            titleId={t('admin.channel_settings.title')}\n                            titleDefault='Channels'\n                            subtitleId={t('admin.channel_settings.description')}\n                            subtitleDefault={'Manage channel settings.'}\n                            subtitleValues={{...this.state}}\n                        >\n                            <ChannelsList onPageChangedCallback={this.onPageChangedCallback}/>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport {Groups, Permissions} from 'mattermost-redux/constants';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Scheme} from 'mattermost-redux/types/schemes';\nimport {ChannelModerationRoles} from 'mattermost-redux/types/roles';\nimport {SyncablePatch, Group} from 'mattermost-redux/types/groups';\nimport {Channel, ChannelModeration as ChannelPermissions, ChannelModerationPatch} from 'mattermost-redux/types/channels';\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormError from 'components/form_error';\nimport Constants from 'utils/constants';\nimport {browserHistory} from 'utils/browser_history';\n\nimport {NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\nimport ConvertConfirmModal from '../../convert_confirm_modal';\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport ConvertAndRemoveConfirmModal from '../../convert_and_remove_confirm_modal';\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {ChannelModes} from './channel_modes';\nimport {ChannelGroups} from './channel_groups';\nimport {ChannelProfile} from './channel_profile';\nimport ChannelModeration from './channel_moderation';\nimport ChannelMembers from './channel_members';\n\ninterface ChannelDetailsProps {\n    channelID: string;\n    channel: Channel;\n    team: Partial<Team>;\n    groups: Group[];\n    totalGroups: number;\n    channelPermissions?: Array<ChannelPermissions>;\n    allGroups: {[gid: string]: Group}; // hashmap of groups\n    teamScheme?: Scheme;\n    guestAccountsEnabled: boolean;\n    actions: {\n        getGroups: (channelID: string, q?: string, page?: number, perPage?: number) => Promise<Partial<Group>[]>;\n        linkGroupSyncable: (groupID: string, syncableID: string, syncableType: string, patch: Partial<SyncablePatch>) => ActionFunc|ActionResult;\n        unlinkGroupSyncable: (groupID: string, syncableID: string, syncableType: string) => ActionFunc;\n        membersMinusGroupMembers: (channelID: string, groupIDs: Array<string>, page?: number, perPage?: number) => ActionFunc|ActionResult;\n        setNavigationBlocked: (blocked: boolean) => any;\n        getChannel: (channelId: string) => ActionFunc;\n        getTeam: (teamId: string) => Promise<ActionResult>;\n        getChannelModerations: (channelId: string) => Promise<Array<ChannelPermissions>>;\n        patchChannel: (channelId: string, patch: Channel) => ActionFunc;\n        updateChannelPrivacy: (channelId: string, privacy: string) => Promise<ActionResult>;\n        patchGroupSyncable: (groupID: string, syncableID: string, syncableType: string, patch: Partial<SyncablePatch>) => ActionFunc;\n        patchChannelModerations: (channelID: string, patch: Array<ChannelModerationPatch>) => any;\n        loadScheme: (schemeID: string) => Promise<ActionResult>;\n        addChannelMember: (channelId: string, userId: string, postRootId?: string) => Promise<ActionResult>;\n        removeChannelMember: (channelId: string, userId: string) => Promise<ActionResult>;\n        updateChannelMemberSchemeRoles: (channelId: string, userId: string, isSchemeUser: boolean, isSchemeAdmin: boolean) => Promise<ActionResult>;\n    };\n}\n\ninterface ChannelDetailsState {\n    isSynced: boolean;\n    isPublic: boolean;\n    isDefault: boolean;\n    totalGroups: number;\n    groups: Group[];\n    usersToRemoveCount: number;\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    rolesToUpdate: {\n        [userId: string]: {\n            schemeUser: boolean;\n            schemeAdmin: boolean;\n        };\n    };\n    saveNeeded: boolean;\n    serverError: JSX.Element | null;\n    isPrivacyChanging: boolean;\n    saving: boolean;\n    showConvertConfirmModal: boolean;\n    showRemoveConfirmModal: boolean;\n    showConvertAndRemoveConfirmModal: boolean;\n    channelPermissions?: Array<ChannelPermissions>;\n    teamScheme?: Scheme;\n}\n\nexport default class ChannelDetails extends React.PureComponent<ChannelDetailsProps, ChannelDetailsState> {\n    constructor(props: ChannelDetailsProps) {\n        super(props);\n        this.state = {\n            isSynced: Boolean(props.channel.group_constrained),\n            isPublic: props.channel.type === Constants.OPEN_CHANNEL,\n            isDefault: props.channel.name === Constants.DEFAULT_CHANNEL,\n            isPrivacyChanging: false,\n            saving: false,\n            totalGroups: props.totalGroups,\n            showConvertConfirmModal: false,\n            showRemoveConfirmModal: false,\n            showConvertAndRemoveConfirmModal: false,\n            usersToRemoveCount: 0,\n            usersToRemove: {},\n            usersToAdd: {},\n            rolesToUpdate: {},\n            groups: props.groups,\n            saveNeeded: false,\n            serverError: null,\n            channelPermissions: props.channelPermissions,\n            teamScheme: props.teamScheme,\n        };\n    }\n    componentDidUpdate(prevProps: ChannelDetailsProps) {\n        const {channel, totalGroups, actions} = this.props;\n        if (channel.id !== prevProps.channel.id || totalGroups !== prevProps.totalGroups) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                isSynced: Boolean(channel.group_constrained),\n                isPublic: channel.type === Constants.OPEN_CHANNEL,\n                isDefault: channel.name === Constants.DEFAULT_CHANNEL,\n            });\n        }\n\n        // If we don't have the team and channel on mount, we need to request the team after we load the channel\n        if (!prevProps.team.id && !prevProps.channel.team_id && channel.team_id) {\n            actions.getTeam(channel.team_id).\n                then(async (data: any) => {\n                    if (data.data && data.data.scheme_id) {\n                        await actions.loadScheme(data.data.scheme_id);\n                    }\n                }).\n                then(() => this.setState({teamScheme: this.props.teamScheme}));\n        }\n    }\n\n    async componentDidMount() {\n        const {channelID, channel, actions} = this.props;\n        const actionsToAwait = [];\n        if (channelID) {\n            actionsToAwait.push(actions.getGroups(channelID).\n                then(() => actions.getChannel(channelID)).\n                then(() => this.setState({groups: this.props.groups})),\n            );\n            actionsToAwait.push(actions.getChannelModerations(channelID).then(() => this.restrictChannelMentions()));\n        }\n\n        if (channel.team_id) {\n            actionsToAwait.push(actions.getTeam(channel.team_id).\n                then(async (data: any) => {\n                    if (data.data && data.data.scheme_id) {\n                        await actions.loadScheme(data.data.scheme_id);\n                    }\n                }).\n                then(() => this.setState({teamScheme: this.props.teamScheme})),\n            );\n        }\n\n        await Promise.all(actionsToAwait);\n    }\n\n    private restrictChannelMentions() {\n        // Disabling use_channel_mentions on every role that create_post is either disabled or has a value of false\n        let channelPermissions = this.props.channelPermissions;\n        const currentCreatePostRoles: any = channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST)?.roles;\n        for (const channelRole of Object.keys(currentCreatePostRoles)) {\n            channelPermissions = channelPermissions!.map((permission) => {\n                if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS && (!currentCreatePostRoles[channelRole].value || !currentCreatePostRoles[channelRole].enabled)) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: false,\n                                enabled: false,\n                            },\n                        },\n                    };\n                }\n                return permission;\n            });\n        }\n        this.setState({channelPermissions});\n    }\n\n    private setToggles = (isSynced: boolean, isPublic: boolean) => {\n        const {channel} = this.props;\n        const isOriginallyPublic = channel.type === Constants.OPEN_CHANNEL;\n        this.setState(\n            {\n                saveNeeded: true,\n                isSynced,\n                isPublic,\n                isPrivacyChanging: isPublic !== isOriginallyPublic,\n            },\n            () => this.processGroupsChange(this.state.groups),\n        );\n        this.props.actions.setNavigationBlocked(true);\n    };\n\n    async processGroupsChange(groups: Group[]) {\n        const {actions, channelID} = this.props;\n        actions.setNavigationBlocked(true);\n        let serverError = null;\n        let usersToRemoveCount = 0;\n        if (this.state.isSynced) {\n            try {\n                if (groups.length === 0) {\n                    serverError = (\n                        <NeedGroupsError\n                            warning={true}\n                            isChannel={true}\n                        />\n                    );\n                } else {\n                    if (!channelID) {\n                        return;\n                    }\n\n                    const result = await actions.membersMinusGroupMembers(channelID, groups.map((g) => g.id));\n                    if ('data' in result) {\n                        usersToRemoveCount = result.data.total_count;\n                        if (usersToRemoveCount > 0) {\n                            serverError = (\n                                <UsersWillBeRemovedError\n                                    total={usersToRemoveCount}\n                                    users={result.data.users}\n                                />\n                            );\n                        }\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemoveCount, saveNeeded: true, serverError});\n    }\n    private handleGroupRemoved = (gid: string) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n        this.processGroupsChange(groups);\n    };\n\n    private setNewGroupRole = (gid: string) => {\n        const groups = cloneDeep(this.state.groups).map((g) => {\n            if (g.id === gid) {\n                g.scheme_admin = !g.scheme_admin;\n            }\n            return g;\n        });\n        this.processGroupsChange(groups);\n    }\n\n    private channelPermissionsChanged = (name: string, channelRole: ChannelModerationRoles) => {\n        const currentValueIndex = this.state.channelPermissions!.findIndex((element) => element.name === name);\n        const currentValue = this.state.channelPermissions![currentValueIndex].roles[channelRole]!.value;\n        const newValue = !currentValue;\n        let channelPermissions = [...this.state.channelPermissions!];\n\n        if (name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST) {\n            const originalObj = this.props.channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS)?.roles![channelRole];\n            channelPermissions = channelPermissions.map((permission) => {\n                if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS && !newValue) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: false,\n                                enabled: false,\n                            },\n                        },\n                    };\n                } else if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: originalObj?.value,\n                                enabled: originalObj?.enabled,\n                            },\n                        },\n                    };\n                }\n                return permission;\n            });\n        }\n        channelPermissions[currentValueIndex] = {\n            ...channelPermissions![currentValueIndex],\n            roles: {\n                ...channelPermissions![currentValueIndex].roles,\n                [channelRole]: {\n                    ...channelPermissions![currentValueIndex].roles[channelRole],\n                    value: newValue,\n                },\n            },\n        };\n        this.setState({channelPermissions, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    private handleGroupChange = (groupIDs: string[]) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid: string) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n        this.processGroupsChange(groups);\n    };\n    private hideConvertConfirmModal = () => {\n        this.setState({showConvertConfirmModal: false});\n    };\n    private hideRemoveConfirmModal = () => {\n        this.setState({showRemoveConfirmModal: false});\n    };\n    private hideConvertAndRemoveConfirmModal = () => {\n        this.setState({showConvertAndRemoveConfirmModal: false});\n    };\n    private onSave = () => {\n        const {channel} = this.props;\n        const {isSynced, usersToRemoveCount} = this.state;\n        let {isPublic, isPrivacyChanging} = this.state;\n        const isOriginallyPublic = channel.type === Constants.OPEN_CHANNEL;\n        if (isSynced) {\n            isPublic = false;\n            isPrivacyChanging = isOriginallyPublic;\n            this.setState({\n                isPublic,\n                isPrivacyChanging,\n            });\n        }\n        if (isPrivacyChanging && usersToRemoveCount > 0) {\n            this.setState({showConvertAndRemoveConfirmModal: true});\n            return;\n        }\n        if (isPrivacyChanging && usersToRemoveCount === 0) {\n            this.setState({showConvertConfirmModal: true});\n            return;\n        }\n        if (!isPrivacyChanging && usersToRemoveCount > 0) {\n            this.setState({showRemoveConfirmModal: true});\n            return;\n        }\n        this.handleSubmit();\n    };\n    private handleSubmit = async () => {\n        this.setState({showConvertConfirmModal: false, showRemoveConfirmModal: false, showConvertAndRemoveConfirmModal: false, saving: true});\n        const {groups, isSynced, isPublic, isPrivacyChanging, channelPermissions, usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        let serverError = null;\n        let saveNeeded = false;\n        const {groups: origGroups, channelID, actions, channel} = this.props;\n        if (this.state.groups.length === 0 && isSynced) {\n            serverError = <NeedGroupsError isChannel={true}/>;\n            saveNeeded = true;\n            this.setState({serverError, saving: false, saveNeeded});\n            actions.setNavigationBlocked(saveNeeded);\n            return;\n        }\n\n        const promises = [];\n        if (isPrivacyChanging) {\n            const convert = actions.updateChannelPrivacy(channel.id, isPublic ? Constants.OPEN_CHANNEL : Constants.PRIVATE_CHANNEL);\n            promises.push(\n                convert.then((res) => {\n                    if ('error' in res) {\n                        return res;\n                    }\n                    return actions.patchChannel(channel.id, {\n                        ...channel,\n                        group_constrained: isSynced,\n                    });\n                }),\n            );\n        } else {\n            promises.push(\n                actions.patchChannel(channel.id, {\n                    ...channel,\n                    group_constrained: isSynced,\n                }),\n            );\n        }\n\n        const patchChannelSyncable = groups.\n            filter((g) => {\n                return origGroups.some((group) => group.id === g.id && group.scheme_admin !== g.scheme_admin);\n            }).\n            map((g) => actions.patchGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL, {scheme_admin: g.scheme_admin}));\n        const unlink = origGroups.\n            filter((g) => {\n                return !groups.some((group) => group.id === g.id);\n            }).\n            map((g) => actions.unlinkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL));\n        const link = groups.\n            filter((g) => {\n                return !origGroups.some((group) => group.id === g.id);\n            }).\n            map((g) => actions.linkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true, scheme_admin: g.scheme_admin}));\n        const result = await Promise.all([...promises, ...patchChannelSyncable, ...unlink, ...link]);\n        const resultWithError = result.find((r) => 'error' in r);\n        if (resultWithError && 'error' in resultWithError) {\n            serverError = <FormError error={resultWithError.error.message}/>;\n        } else {\n            const actionsToAwait: any[] = [actions.getGroups(channelID)];\n            if (isPrivacyChanging) {\n                // If the privacy is changing update the manage_members value for the channel moderation widget\n                actionsToAwait.push(\n                    actions.getChannelModerations(channelID).then(() => {\n                        const manageMembersIndex = channelPermissions!.findIndex((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS);\n                        if (channelPermissions) {\n                            const updatedManageMembers = this.props.channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS);\n                            channelPermissions[manageMembersIndex] = updatedManageMembers || channelPermissions[manageMembersIndex];\n                        }\n                        this.setState({channelPermissions});\n                    }),\n                );\n            }\n            await Promise.all(actionsToAwait);\n        }\n\n        const patchChannelPermissionsArray: Array<ChannelModerationPatch> = channelPermissions!.map((p) => {\n            return {\n                name: p.name,\n                roles: {\n                    ...(p.roles.members && p.roles.members.enabled && {members: p.roles.members!.value}),\n                    ...(p.roles.guests && p.roles.guests.enabled && {guests: p.roles.guests!.value}),\n                },\n            };\n        });\n\n        const patchChannelModerationsResult = await actions.patchChannelModerations(channelID, patchChannelPermissionsArray);\n        if (patchChannelModerationsResult.error) {\n            serverError = <FormError error={patchChannelModerationsResult.error.message}/>;\n        }\n        this.restrictChannelMentions();\n\n        let privacyChanging = isPrivacyChanging;\n        if (serverError == null) {\n            privacyChanging = false;\n        }\n\n        const usersToAddList = Object.values(usersToAdd);\n        const usersToRemoveList = Object.values(usersToRemove);\n        const userRolesToUpdate = Object.keys(rolesToUpdate);\n        const usersToUpdate = usersToAddList.length > 0 || usersToRemoveList.length > 0 || userRolesToUpdate.length > 0;\n        if (usersToUpdate && !isSynced) {\n            const userActions: any[] = [];\n            const {addChannelMember, removeChannelMember, updateChannelMemberSchemeRoles} = this.props.actions;\n            usersToAddList.forEach((user) => {\n                userActions.push(addChannelMember(channelID, user.id));\n            });\n            usersToRemoveList.forEach((user) => {\n                userActions.push(removeChannelMember(channelID, user.id));\n            });\n\n            let userResult = await Promise.all(userActions);\n            let userResultWithError = userResult.find((r) => 'error' in r);\n            if (userResultWithError && 'error' in userResultWithError) {\n                serverError = <FormError error={userResultWithError.error.message}/>;\n            } else {\n                const roleActions: any[] = [];\n                userRolesToUpdate.forEach((userId) => {\n                    const {schemeUser, schemeAdmin} = rolesToUpdate[userId];\n                    roleActions.push(updateChannelMemberSchemeRoles(channelID, userId, schemeUser, schemeAdmin));\n                });\n                userResult = await Promise.all(roleActions);\n                userResultWithError = userResult.find((r) => 'error' in r);\n                if (userResultWithError && 'error' in userResultWithError) {\n                    serverError = <FormError error={userResultWithError.error.message}/>;\n                }\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded, isPrivacyChanging: privacyChanging, usersToRemoveCount: 0, rolesToUpdate: {}, usersToAdd: {}, usersToRemove: {}}, () => {\n            actions.setNavigationBlocked(saveNeeded);\n            if (!saveNeeded) {\n                browserHistory.push('/admin_console/user_management/channels');\n            }\n        });\n    };\n\n    private addRolesToUpdate = (userId: string, schemeUser: boolean, schemeAdmin: boolean) => {\n        const {rolesToUpdate} = this.state;\n        rolesToUpdate[userId] = {schemeUser, schemeAdmin};\n        this.setState({rolesToUpdate: {...rolesToUpdate}, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n    private addUserToRemove = (user: UserProfile) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        if (usersToAdd[user.id]?.id === user.id) {\n            delete usersToAdd[user.id];\n        } else if (usersToRemove[user.id]?.id !== user.id) {\n            usersToRemoveCount += 1;\n            usersToRemove[user.id] = user;\n        }\n        delete rolesToUpdate[user.id];\n        this.setState({usersToRemove: {...usersToRemove}, usersToAdd: {...usersToAdd}, rolesToUpdate: {...rolesToUpdate}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n    private addUsersToAdd = (users: UserProfile[]) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove} = this.state;\n        users.forEach((user) => {\n            if (usersToRemove[user.id]?.id === user.id) {\n                delete usersToRemove[user.id];\n                usersToRemoveCount -= 1;\n            } else {\n                usersToAdd[user.id] = user;\n            }\n        });\n        this.setState({usersToAdd: {...usersToAdd}, usersToRemove: {...usersToRemove}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    public render = (): JSX.Element => {\n        const {\n            totalGroups,\n            saving,\n            saveNeeded,\n            serverError,\n            isSynced,\n            isPublic,\n            isDefault,\n            groups,\n            showConvertConfirmModal,\n            showRemoveConfirmModal,\n            showConvertAndRemoveConfirmModal,\n            usersToRemoveCount,\n            channelPermissions,\n            teamScheme,\n            usersToRemove,\n            usersToAdd,\n        } = this.state;\n        const {channel, team} = this.props;\n        const missingGroup = (og: {id: string}) => !groups.find((g: Group) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/channels'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_detail.channel_configuration'\n                            defaultMessage='Channel Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <ChannelProfile\n                            channel={channel}\n                            team={team}\n                        />\n\n                        <ConvertConfirmModal\n                            show={showConvertConfirmModal}\n                            onCancel={this.hideConvertConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            displayName={channel.display_name || ''}\n                            toPublic={isPublic}\n                        />\n\n                        <RemoveConfirmModal\n                            show={showRemoveConfirmModal}\n                            onCancel={this.hideRemoveConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            inChannel={true}\n                            amount={usersToRemoveCount}\n                        />\n\n                        <ConvertAndRemoveConfirmModal\n                            show={showConvertAndRemoveConfirmModal}\n                            onCancel={this.hideConvertAndRemoveConfirmModal}\n                            onConfirm={this.handleSubmit}\n                            displayName={channel.display_name || ''}\n                            toPublic={isPublic}\n                            removeAmount={usersToRemoveCount}\n                        />\n\n                        <ChannelModes\n                            isPublic={isPublic}\n                            isSynced={isSynced}\n                            isDefault={isDefault}\n                            onToggle={this.setToggles}\n                        />\n\n                        <ChannelModeration\n                            channelPermissions={channelPermissions}\n                            onChannelPermissionsChanged={this.channelPermissionsChanged}\n                            teamSchemeID={teamScheme?.id}\n                            teamSchemeDisplayName={teamScheme?.['display_name']}\n                            guestAccountsEnabled={this.props.guestAccountsEnabled}\n                        />\n\n                        <ChannelGroups\n                            synced={isSynced}\n                            channel={channel}\n                            totalGroups={totalGroups}\n                            groups={groups}\n                            removedGroups={removedGroups}\n                            onAddCallback={this.handleGroupChange}\n                            onGroupRemoved={this.handleGroupRemoved}\n                            setNewGroupRole={this.setNewGroupRole}\n                        />\n\n                        {!isSynced &&\n                            <ChannelMembers\n                                onRemoveCallback={this.addUserToRemove}\n                                onAddCallback={this.addUsersToAdd}\n                                usersToRemove={usersToRemove}\n                                usersToAdd={usersToAdd}\n                                updateRole={this.addRolesToUpdate}\n                                channelId={this.props.channelID}\n                            />\n                        }\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    saveNeeded={saveNeeded}\n                    onClick={this.onSave}\n                    serverError={serverError}\n                    cancelLink='/admin_console/user_management/channels'\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Group} from 'mattermost-redux/types/groups';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport AddGroupsToChannelModal from 'components/add_groups_to_channel_modal';\nimport GroupList from '../../group';\n\ninterface ChannelGroupsProps {\n    synced: boolean;\n    channel: Partial<Channel>;\n    onAddCallback: (groupIDs: string[]) => void;\n    totalGroups: number;\n    groups: Partial<Group>[];\n    removedGroups: object[];\n    onGroupRemoved: (gid: string) => void;\n    setNewGroupRole: (gid: string) => void;\n}\n\nexport const ChannelGroups: React.SFC<ChannelGroupsProps> = (props: ChannelGroupsProps): JSX.Element => {\n    const {onGroupRemoved, onAddCallback, totalGroups, groups, removedGroups, channel, synced, setNewGroupRole} = props;\n    return (\n        <AdminPanel\n            id='channel_groups'\n            titleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsTitle') : t('admin.channel_settings.channel_detail.groupsTitle')}\n            titleDefault={synced ? 'Synced Groups' : 'Groups'}\n            subtitleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsDescription') : t('admin.channel_settings.channel_detail.groupsDescription')}\n            subtitleDefault={synced ? 'Add and remove channel members based on their group membership.' : 'Select groups to be added to this channel.'}\n            button={\n                <ToggleModalButton\n                    id='addGroupsToChannelToggle'\n                    className='btn btn-primary'\n                    dialogType={AddGroupsToChannelModal}\n                    dialogProps={{\n                        channel,\n                        onAddCallback,\n                        skipCommit: true,\n                        includeGroups: removedGroups,\n                        excludeGroups: groups,\n                    }}\n                >\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_details.add_group'\n                        defaultMessage='Add Group'\n                    />\n                </ToggleModalButton>}\n        >\n            {channel.id && (\n                <GroupList\n                    channel={channel}\n                    groups={groups}\n                    totalGroups={totalGroups}\n                    onGroupRemoved={onGroupRemoved}\n                    setNewGroupRole={setNewGroupRole}\n                    isModeSync={synced}\n                    type='channel'\n                />\n            )}\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Channel, ChannelMembership} from 'mattermost-redux/types/channels';\n\nimport {t} from 'utils/i18n';\nimport Constants from 'utils/constants';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport UserGrid from 'components/admin_console/user_grid/user_grid';\nimport {BaseMembership} from 'components/admin_console/user_grid/user_grid_role_dropdown';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport ToggleModalButton from 'components/toggle_modal_button';\n\ntype Props = {\n    channelId: string;\n    channel: Channel;\n\n    users: UserProfile[];\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    channelMembers: Dictionary<ChannelMembership>;\n    totalCount: number;\n\n    loading?: boolean;\n\n    onAddCallback: (users: UserProfile[]) => void;\n    onRemoveCallback: (user: UserProfile) => void;\n    updateRole: (userId: string, schemeUser: boolean, schemeAdmin: boolean) => void;\n\n    searchTerm: string;\n\n    actions: {\n        getChannelStats: (channelId: string) => Promise<{\n            data: boolean;\n        }>;\n        loadProfilesAndReloadChannelMembers: (page: number, perPage: number, channelId?: string, sort?: string, options?: {}) => Promise<{\n            data: boolean;\n        }>;\n        searchProfilesAndChannelMembers: (term: string, options?: {}) => Promise<{\n            data: boolean;\n        }>;\n        setModalSearchTerm: (term: string) => Promise<{\n            data: boolean;\n        }>;\n    };\n}\n\ntype State = {\n    loading: boolean;\n}\n\nconst PROFILE_CHUNK_SIZE = 10;\n\nexport default class ChannelMembers extends React.PureComponent<Props, State> {\n    private searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    public componentDidMount() {\n        const {channelId} = this.props;\n        const {loadProfilesAndReloadChannelMembers, getChannelStats, setModalSearchTerm} = this.props.actions;\n        Promise.all([\n            setModalSearchTerm(''),\n            getChannelStats(channelId),\n            loadProfilesAndReloadChannelMembers(0, PROFILE_CHUNK_SIZE * 2, channelId),\n        ]).then(() => this.setStateLoading(false));\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            this.setStateLoading(true);\n            clearTimeout(this.searchTimeoutId);\n            const searchTerm = this.props.searchTerm;\n\n            if (searchTerm === '') {\n                this.searchTimeoutId = 0;\n                this.setStateLoading(false);\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    await prevProps.actions.searchProfilesAndChannelMembers(searchTerm, {in_channel_id: this.props.channelId});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n                    this.setStateLoading(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    private setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    private loadPage = async (page: number) => {\n        const {loadProfilesAndReloadChannelMembers} = this.props.actions;\n        const {channelId} = this.props;\n        await loadProfilesAndReloadChannelMembers(page + 1, PROFILE_CHUNK_SIZE, channelId);\n    }\n\n    private removeUser = (user: UserProfile) => {\n        this.props.onRemoveCallback(user);\n    }\n\n    private onAddCallback = (users: UserProfile[]) => {\n        this.props.onAddCallback(users);\n    }\n\n    private search = async (term: string) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        this.props.updateRole(membership.user_id, membership.scheme_user, membership.scheme_admin);\n    }\n\n    render = () => {\n        const {users, channel, channelId, usersToAdd, usersToRemove, channelMembers, totalCount, searchTerm} = this.props;\n        return (\n            <AdminPanel\n                id='channelMembers'\n                titleId={t('admin.channel_settings.channel_detail.membersTitle')}\n                titleDefault='Members'\n                subtitleId={t('admin.channel_settings.channel_detail.membersDescription')}\n                subtitleDefault='A list of users who are currently in the channel right now'\n                button={\n                    <ToggleModalButton\n                        id='addChannelMembers'\n                        className='btn btn-primary'\n                        dialogType={ChannelInviteModal}\n                        dialogProps={{\n                            channel,\n                            channelId,\n                            teamId: channel?.team_id, // eslint-disable-line camelcase, @typescript-eslint/camelcase\n                            onAddCallback: this.onAddCallback,\n                            skipCommit: true,\n                            excludeUsers: usersToAdd,\n                            includeUsers: usersToRemove,\n                        }}\n                    >\n                        <FormattedMessage\n                            id='admin.team_settings.team_details.add_members'\n                            defaultMessage='Add Members'\n                        />\n                    </ToggleModalButton>\n                }\n            >\n                <UserGrid\n                    loading={this.state.loading || Boolean(this.props.loading)}\n                    users={users}\n                    loadPage={this.loadPage}\n                    removeUser={this.removeUser}\n                    totalCount={totalCount}\n                    memberships={channelMembers}\n                    updateMembership={this.updateMembership}\n                    search={this.search}\n                    includeUsers={usersToAdd}\n                    excludeUsers={usersToRemove}\n                    term={searchTerm}\n                    scope={'channel'}\n                />\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport {filterProfilesMatchingTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {ChannelStats} from 'mattermost-redux/types/channels';\n\nimport {getChannelStats} from 'mattermost-redux/actions/channels';\n\nimport {getChannelMembersInChannels, getAllChannelStats, getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {searchProfilesInChannel, makeGetProfilesInChannel, filterProfiles} from 'mattermost-redux/selectors/entities/users';\n\nimport {loadProfilesAndReloadChannelMembers, searchProfilesAndChannelMembers} from 'actions/user_actions';\nimport {setModalSearchTerm} from 'actions/views/search';\nimport {GlobalState} from 'types/store';\n\nimport ChannelMembers from './channel_members';\n\ntype Props = {\n    channelId: string;\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n};\n\ntype Actions = {\n    getChannelStats: (channelId: string) => Promise<{\n        data: boolean;\n    }>;\n    loadProfilesAndReloadChannelMembers: (page: number, perPage: number, channelId?: string, sort?: string, options?: {}) => Promise<{\n        data: boolean;\n    }>;\n    searchProfilesAndChannelMembers: (term: string, options?: {}) => Promise<{\n        data: boolean;\n    }>;\n    setModalSearchTerm: (term: string) => Promise<{\n        data: boolean;\n    }>;\n};\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profiles = filterProfilesMatchingTerm(Object.keys(users).map((key) => users[key]), term);\n    const filteredProfilesMap = filterProfiles(profileListToMap(profiles), {});\n\n    return filteredProfilesMap;\n}\n\nfunction makeMapStateToProps() {\n    const doGetProfilesInChannel = makeGetProfilesInChannel();\n\n    return function mapStateToProps(state: GlobalState, props: Props) {\n        const {channelId, usersToRemove} = props;\n        let {usersToAdd} = props;\n\n        const channelMembers = getChannelMembersInChannels(state)[channelId] || {};\n\n        const channel = getChannel(state, channelId) || {channel_id: channelId};\n\n        const stats: ChannelStats = getAllChannelStats(state)[channelId] || {\n            member_count: 0,\n            channel_id: channelId,\n            pinnedpost_count: 0,\n        };\n\n        const searchTerm = state.views.search.modalSearch;\n        let users = [];\n        if (searchTerm) {\n            users = searchProfilesInChannel(state, channelId, searchTerm);\n            usersToAdd = searchUsersToAdd(usersToAdd, searchTerm);\n        } else {\n            users = doGetProfilesInChannel(state, channelId, false);\n        }\n\n        return {\n            channelId,\n            channel,\n            users,\n            channelMembers,\n            usersToAdd,\n            usersToRemove,\n            totalCount: stats.member_count,\n            searchTerm,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getChannelStats,\n            loadProfilesAndReloadChannelMembers,\n            searchProfilesAndChannelMembers,\n            setModalSearchTerm,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ChannelMembers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, defineMessages} from 'react-intl';\n\nimport {isNil} from 'lodash';\nimport classNames from 'classnames';\nimport {ChannelModeration as ChannelPermissions} from 'mattermost-redux/types/channels';\nimport {Permissions, Roles} from 'mattermost-redux/constants';\nimport {ChannelModerationRoles} from 'mattermost-redux/types/roles';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\n\nconst PERIOD_TO_SLASH_REGEX = /\\./g;\n\nconst formattedMessages: any = defineMessages({\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.createPosts'),\n            defaultMessage: 'Create Posts',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.createPostsDesc'),\n            defaultMessage: 'The ability for members and guests to create posts in the channel.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.createPostsDescMembers'),\n            defaultMessage: 'The ability for members to create posts in the channel.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledGuest'),\n            defaultMessage: 'Create posts for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledMember'),\n            defaultMessage: 'Create posts for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledBoth'),\n            defaultMessage: 'Create posts for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_REACTIONS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.postReactions'),\n            defaultMessage: 'Post Reactions',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.postReactionsDesc'),\n            defaultMessage: 'The ability for members and guests to post reactions.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.postReactionsDescMembers'),\n            defaultMessage: 'The ability for members to post reactions.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledGuest'),\n            defaultMessage: 'Post reactions for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledMember'),\n            defaultMessage: 'Post reactions for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledBoth'),\n            defaultMessage: 'Post reactions for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers'),\n            defaultMessage: 'Manage Members',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.manageMembersDesc'),\n            defaultMessage: 'The ability for members to add and remove people.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledGuest'),\n            defaultMessage: 'Manage members for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledMember'),\n            defaultMessage: 'Manage members for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledBoth'),\n            defaultMessage: 'Manage members for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions'),\n            defaultMessage: 'Channel Mentions',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.channelMentionsDesc'),\n            defaultMessage: 'The ability for members and guests to use @all, @here and @channel.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.channelMentionsDescMembers'),\n            defaultMessage: 'The ability for members to use @all, @here and @channel.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledGuest'),\n            defaultMessage: 'Channel mentions for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledMember'),\n            defaultMessage: 'Channel mentions for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledBoth'),\n            defaultMessage: 'Channel mentions for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n        },\n        disabledGuestsDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledGuestsDueToCreatePosts'),\n            defaultMessage: 'Guests can not use channel mentions without the ability to create posts.',\n        },\n        disabledMembersDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledMemberDueToCreatePosts'),\n            defaultMessage: 'Members can not use channel mentions without the ability to create posts.',\n        },\n        disabledBothDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledBothDueToCreatePosts'),\n            defaultMessage: 'Guests and members can not use channel mentions without the ability to create posts.',\n        },\n    },\n\n    title: {\n        id: t('admin.channel_settings.channel_moderation.title'),\n        defaultMessage: 'Channel Moderation (Beta)',\n    },\n    subtitle: {\n        id: t('admin.channel_settings.channel_moderation.subtitle'),\n        defaultMessage: 'Manage the actions available to channel members and guests.',\n    },\n    subtitleMembers: {\n        id: t('admin.channel_settings.channel_moderation.subtitleMembers'),\n        defaultMessage: 'Manage the actions available to channel members.',\n    },\n    permissions: {\n        id: t('admin.channel_settings.channel_moderation.permissions'),\n        defaultMessage: 'Permissions',\n    },\n    guests: {\n        id: t('admin.channel_settings.channel_moderation.guests'),\n        defaultMessage: 'Guests',\n    },\n    members: {\n        id: t('admin.channel_settings.channel_moderation.members'),\n        defaultMessage: 'Members',\n    },\n});\n\ninterface Props {\n    channelPermissions?: Array<ChannelPermissions>;\n    onChannelPermissionsChanged: (name: string, channelRole: ChannelModerationRoles) => void;\n    teamSchemeID?: string;\n    teamSchemeDisplayName?: string;\n    guestAccountsEnabled: boolean;\n}\n\ninterface RowProps {\n    name: string;\n    guests?: boolean;\n    members: boolean;\n    guestsDisabled?: boolean;\n    membersDisabled: boolean;\n    onClick: (name: string, channelRole: ChannelModerationRoles) => void;\n    errorMessages?: any;\n    guestAccountsEnabled: boolean;\n}\n\nexport const ChannelModerationTableRow: React.FunctionComponent<RowProps> = (props: RowProps): JSX.Element => {\n    let descriptionId = formattedMessages[props.name].description.id;\n    let descriptionDefaultMessage = formattedMessages[props.name].description.defaultMessage;\n    if (!props.guestAccountsEnabled && formattedMessages[props.name].descriptionMembers) {\n        descriptionId = formattedMessages[props.name].descriptionMembers.id;\n        descriptionDefaultMessage = formattedMessages[props.name].descriptionMembers.defaultMessage;\n    }\n    return (\n        <tr>\n            <td>\n                <label\n                    data-testid={formattedMessages[props.name].title.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                >\n                    <FormattedMessage\n                        id={formattedMessages[props.name].title.id}\n                        defaultMessage={formattedMessages[props.name].title.defaultMessage}\n                    />\n                </label>\n                <div\n                    data-testid={formattedMessages[props.name].description.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                >\n                    <FormattedMessage\n                        id={descriptionId}\n                        defaultMessage={descriptionDefaultMessage}\n                    />\n                </div>\n                {props.errorMessages}\n            </td>\n            {props.guestAccountsEnabled &&\n                <td>\n                    {!isNil(props.guests) &&\n                        <button\n                            data-testid={`${props.name}-${Roles.GUESTS}`}\n                            className={classNames(\n                                'checkbox',\n                                {\n                                    checked: props.guests && !props.guestsDisabled,\n                                    disabled: props.guestsDisabled,\n                                },\n                            )}\n                            onClick={() => props.onClick(props.name, Roles.GUESTS as ChannelModerationRoles)}\n                            disabled={props.guestsDisabled}\n                        >\n                            {props.guests && !props.guestsDisabled && <CheckboxCheckedIcon/>}\n                        </button>\n                    }\n                </td>\n            }\n            <td>\n                {!isNil(props.members) &&\n                    <button\n                        data-testid={`${props.name}-${Roles.MEMBERS}`}\n                        className={classNames(\n                            'checkbox',\n                            {\n                                checked: props.members && !props.membersDisabled,\n                                disabled: props.membersDisabled,\n                            },\n                        )}\n                        onClick={() => props.onClick(props.name, Roles.MEMBERS as ChannelModerationRoles)}\n                        disabled={props.membersDisabled}\n                    >\n                        {props.members && !props.membersDisabled && <CheckboxCheckedIcon/>}\n                    </button>\n                }\n            </td>\n        </tr>\n    );\n};\n\nexport default class ChannelModeration extends React.PureComponent<Props> {\n    private errorMessagesToDisplay = (entry: ChannelPermissions): Array<any> => {\n        const errorMessages: Array<any> = [];\n        const isGuestsDisabled = !isNil(entry.roles.guests?.enabled) && !entry.roles.guests?.enabled && this.props.guestAccountsEnabled;\n        const isMembersDisabled = !entry.roles.members.enabled;\n        let createPostsKey = '';\n        if (entry.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS) {\n            const createPostsObject = this.props.channelPermissions && this.props.channelPermissions!.find((permission) => permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST);\n            if (!createPostsObject!.roles.guests!.value && this.props.guestAccountsEnabled && !createPostsObject!.roles.members!.value) {\n                errorMessages.push(\n                    <div\n                        data-testid={formattedMessages[entry.name].disabledBothDueToCreatePosts.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                        key={formattedMessages[entry.name].disabledBothDueToCreatePosts.id}\n                    >\n                        <FormattedMessage\n                            id={formattedMessages[entry.name].disabledBothDueToCreatePosts.id}\n                            defaultMessage={formattedMessages[entry.name].disabledBothDueToCreatePosts.defaultMessage}\n                        />\n                    </div>,\n                );\n                return errorMessages;\n            } else if (!createPostsObject!.roles.guests!.value && this.props.guestAccountsEnabled) {\n                createPostsKey = 'disabledGuestsDueToCreatePosts';\n            } else if (!createPostsObject!.roles.members!.value) {\n                createPostsKey = 'disabledMembersDueToCreatePosts';\n            }\n\n            if (createPostsKey !== '') {\n                errorMessages.push(\n                    <div\n                        data-testid={formattedMessages[entry.name][createPostsKey].id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                        key={formattedMessages[entry.name][createPostsKey].id}\n                    >\n                        <FormattedMessage\n                            id={formattedMessages[entry.name][createPostsKey].id}\n                            defaultMessage={formattedMessages[entry.name][createPostsKey].defaultMessage}\n                        />\n                    </div>,\n                );\n            }\n        }\n\n        let disabledKey;\n        if (isGuestsDisabled && isMembersDisabled && errorMessages.length <= 0) {\n            disabledKey = 'disabledBoth';\n        } else if (isGuestsDisabled && createPostsKey !== 'disabledGuestsDueToCreatePosts') {\n            disabledKey = 'disabledGuests';\n        } else if (isMembersDisabled && createPostsKey !== 'disabledMembersDueToCreatePosts') {\n            disabledKey = 'disabledMembers';\n        }\n        if (disabledKey) {\n            let schemeName = 'System Scheme';\n            let schemeLink = 'system_scheme';\n            if (this.props.teamSchemeID) {\n                schemeName = this.props.teamSchemeDisplayName + ' Team Scheme';\n                schemeLink = `team_override_scheme/${this.props.teamSchemeID}`;\n            }\n            errorMessages.push(\n                <div\n                    data-testid={formattedMessages[entry.name][disabledKey].id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                    key={formattedMessages[entry.name][disabledKey].id}\n                >\n                    <FormattedMarkdownMessage\n                        id={formattedMessages[entry.name][disabledKey].id}\n                        defaultMessage={formattedMessages[entry.name][disabledKey].defaultMessage}\n                        values={{\n                            scheme_name: schemeName,\n                            scheme_link: schemeLink,\n                        }}\n                    />\n                </div>,\n            );\n        }\n        return errorMessages;\n    }\n\n    render = (): JSX.Element => {\n        const {channelPermissions, guestAccountsEnabled, onChannelPermissionsChanged} = this.props;\n        return (\n            <AdminPanel\n                id='channel_moderation'\n                titleId={formattedMessages.title.id}\n                titleDefault={formattedMessages.title.defaultMessage}\n                subtitleId={guestAccountsEnabled ? formattedMessages.subtitle.id : formattedMessages.subtitleMembers.id}\n                subtitleDefault={guestAccountsEnabled ? formattedMessages.subtitle.defaultMessage : formattedMessages.subtitleMembers.defaultMessage}\n            >\n                <div className='channel-moderation'>\n                    <div className='channel-moderation--body'>\n\n                        <table\n                            id='channel_moderation_table'\n                            className='channel-moderation--table'\n                        >\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <FormattedMessage\n                                            id={formattedMessages.permissions.id}\n                                            defaultMessage={formattedMessages.permissions.defaultMessage}\n                                        />\n                                    </th>\n                                    {guestAccountsEnabled &&\n                                        <th>\n                                            <FormattedMessage\n                                                id={formattedMessages.guests.id}\n                                                defaultMessage={formattedMessages.guests.defaultMessage}\n                                            />\n                                        </th>\n                                    }\n                                    <th>\n                                        <FormattedMessage\n                                            id={formattedMessages.members.id}\n                                            defaultMessage={formattedMessages.members.defaultMessage}\n                                        />\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {channelPermissions?.map((entry) => {\n                                    return (\n                                        <ChannelModerationTableRow\n                                            key={entry.name}\n                                            name={entry.name}\n                                            guests={entry.roles.guests?.value}\n                                            guestsDisabled={!entry.roles.guests?.enabled}\n                                            members={entry.roles.members.value}\n                                            membersDisabled={!entry.roles.members.enabled}\n                                            onClick={onChannelPermissionsChanged}\n                                            errorMessages={this.errorMessagesToDisplay(entry)}\n                                            guestAccountsEnabled={guestAccountsEnabled}\n                                        />\n                                    );\n                                })}\n\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LineSwitch from '../../line_switch';\n\ninterface Props {\n    isPublic: boolean;\n    isSynced: boolean;\n    isDefault: boolean;\n    onToggle: (isSynced: boolean, isPublic: boolean) => void;\n}\n\nconst SyncGroupsToggle: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {isPublic, isSynced, isDefault, onToggle} = props;\n    return (\n        <LineSwitch\n            id='syncGroupSwitch'\n            disabled={isDefault}\n            toggled={isSynced}\n            last={isSynced}\n            onToggle={() => {\n                if (isDefault) {\n                    return;\n                }\n                onToggle(!isSynced, isPublic);\n            }}\n            title={(\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.syncGroupMembers'\n                    defaultMessage='Sync Group Members'\n                />\n            )}\n            subTitle={(\n                <FormattedMarkdownMessage\n                    id='admin.channel_settings.channel_details.syncGroupMembersDescr'\n                    defaultMessage='When enabled, adding and removing users from groups will add or remove them from this channel. The only way of inviting members to this channel is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n                />\n            )}\n        />\n    );\n};\n\nconst AllowAllToggle: React.SFC<Props> = (props: Props): JSX.Element | null => {\n    const {isPublic, isSynced, isDefault, onToggle} = props;\n    if (isSynced) {\n        return null;\n    }\n    return (\n        <LineSwitch\n            id='allow-all-toggle'\n            disabled={isDefault}\n            toggled={isPublic}\n            last={true}\n            onToggle={() => {\n                if (isDefault) {\n                    return;\n                }\n                onToggle(isSynced, !isPublic);\n            }}\n            title={(\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isPublic'\n                    defaultMessage='Public channel or private channel'\n                />\n            )}\n            subTitle={isDefault ? (\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isDefaultDescr'\n                    defaultMessage='This default channel cannot be converted into a private channel.'\n                />\n            ) :\n                (\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_details.isPublicDescr'\n                        defaultMessage='If `public` the channel is discoverable and any user can join, or if `private` invitations are required. Toggle to convert public channels to private. When Group Sync is enabled, private channels cannot be converted to public.'\n                    />\n                )\n            }\n            onText={(\n                <FormattedMessage\n                    id='channel_toggle_button.public'\n                    defaultMessage='Public'\n                />\n            )}\n            offText={(\n                <FormattedMessage\n                    id='channel_toggle_button.private'\n                    defaultMessage='Private'\n                />\n            )}\n        />\n    );\n};\n\nexport const ChannelModes: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {isPublic, isSynced, isDefault, onToggle} = props;\n    return (\n        <AdminPanel\n            id='channel_manage'\n            titleId={t('admin.channel_settings.channel_detail.manageTitle')}\n            titleDefault='Channel Management'\n            subtitleId={t('admin.channel_settings.channel_detail.manageDescription')}\n            subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n        >\n            <div className='group-teams-and-channels'>\n                <div className='group-teams-and-channels--body'>\n                    <SyncGroupsToggle\n                        isPublic={isPublic}\n                        isSynced={isSynced}\n                        isDefault={isDefault}\n                        onToggle={onToggle}\n                    />\n                    <AllowAllToggle\n                        isPublic={isPublic}\n                        isSynced={isSynced}\n                        isDefault={isDefault}\n                        onToggle={onToggle}\n                    />\n                </div>\n            </div>\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Channel} from 'mattermost-redux/types/channels';\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\ninterface ChannelProfileProps {\n    channel: Partial<Channel>;\n    team: Partial<Team>;\n}\n\nexport const ChannelProfile: React.SFC<ChannelProfileProps> = (props: ChannelProfileProps): JSX.Element => {\n    const {team, channel} = props;\n    return (\n        <AdminPanel\n            id='channel_profile'\n            titleId={t('admin.channel_settings.channel_detail.profileTitle')}\n            titleDefault='Channel Profile'\n            subtitleId={t('admin.channel_settings.channel_detail.profileDescription')}\n            subtitleDefault='Summary of the channel, including the channel name.'\n        >\n            <div className='group-teams-and-channels'>\n                <div className='group-teams-and-channels--body channel-desc-col'>\n                    <div className='channel-name'>\n                        <FormattedMarkdownMessage\n                            id='admin.channel_settings.channel_detail.channelName'\n                            defaultMessage='**Name**'\n                        />\n                        <br/>\n                        {channel.display_name}\n                    </div>\n                    <div className='channel-team'>\n                        <FormattedMarkdownMessage\n                            id='admin.channel_settings.channel_detail.channelTeam'\n                            defaultMessage='**Team**'\n                        />\n                        <br/>\n                        {team.display_name}\n                    </div>\n                </div>\n            </div>\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getChannel, getChannelModerations} from 'mattermost-redux/selectors/entities/channels';\nimport {getAllGroups, getGroupsAssociatedToChannel} from 'mattermost-redux/selectors/entities/groups';\nimport {getScheme} from 'mattermost-redux/selectors/entities/schemes';\nimport {getScheme as loadScheme} from 'mattermost-redux/actions/schemes';\nimport {\n    getChannel as fetchChannel,\n    membersMinusGroupMembers,\n    patchChannel,\n    updateChannelPrivacy,\n    getChannelModerations as fetchChannelModerations,\n    patchChannelModerations,\n    addChannelMember,\n    removeChannelMember,\n    updateChannelMemberSchemeRoles,\n} from 'mattermost-redux/actions/channels';\nimport {getTeam as fetchTeam} from 'mattermost-redux/actions/teams';\n\nimport {\n    getGroupsAssociatedToChannel as fetchAssociatedGroups,\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n    patchGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\n\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport ChannelDetails from './channel_details';\n\nfunction mapStateToProps(state, props) {\n    const config = getConfig(state);\n    const guestAccountsEnabled = config.EnableGuestAccounts === 'true';\n    const channelID = props.match.params.channel_id;\n    const channel = getChannel(state, channelID) || {};\n    const team = getTeam(state, channel.team_id) || {};\n    const groups = getGroupsAssociatedToChannel(state, channelID);\n    const allGroups = getAllGroups(state, channel.team_id);\n    const totalGroups = groups.length;\n    const channelPermissions = getChannelModerations(state, channelID);\n    const teamScheme = getScheme(state, team.scheme_id);\n    return {\n        channel,\n        team,\n        allGroups,\n        totalGroups,\n        groups,\n        channelID,\n        channelPermissions,\n        teamScheme,\n        guestAccountsEnabled,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadScheme,\n            patchChannelModerations,\n            getChannelModerations: fetchChannelModerations,\n            getChannel: fetchChannel,\n            getTeam: fetchTeam,\n            getGroups: fetchAssociatedGroups,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            patchChannel,\n            setNavigationBlocked,\n            updateChannelPrivacy,\n            patchGroupSyncable,\n            addChannelMember,\n            removeChannelMember,\n            updateChannelMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {connect} from 'react-redux';\n\nimport {ChannelsSettings} from './channel_settings';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelsSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {ChannelWithTeamData} from 'mattermost-redux/types/channels';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants} from 'utils/constants';\n\nimport AbstractList, {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport SearchIcon from 'components/widgets/icons/search_icon';\n\nimport ChannelRow from './channel_row';\n\ninterface ChannelListProps {\n    actions: {\n        searchAllChannels: (term: string, notAssociatedToGroup?: string, excludeDefaultChannels?: boolean, page?: number, perPage?: number) => ActionFunc | ActionResult;\n        getData: (page: number, perPage: number, notAssociatedToGroup? : string, excludeDefaultChannels?: boolean) => ActionFunc | ActionResult | Promise<ChannelWithTeamData[]>;\n    };\n    data?: {id: string; display_name: string}[];\n    total?: number;\n    removeGroup?: () => void;\n    onPageChangedCallback?: () => void;\n    emptyListTextId?: string;\n    emptyListTextDefaultMessage?: string;\n}\n\ninterface ChannelListState {\n    searchString: string;\n    channels: ChannelWithTeamData[];\n    searchTotalCount: number;\n    pageResetKey: number;\n    searchMode: boolean;\n}\n\nexport default class ChannelList extends React.PureComponent<ChannelListProps, ChannelListState> {\n    constructor(props: ChannelListProps) {\n        super(props);\n        this.state = {\n            searchString: '',\n            channels: [],\n            searchTotalCount: 0,\n            pageResetKey: 0,\n            searchMode: false,\n        };\n    }\n\n    searchBar = () => {\n        return (\n            <div className='groups-list--global-actions'>\n                <div className='group-list-search'>\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onKeyUp={this.handleChannelSearchKeyUp}\n                        onChange={this.searchBarChangeHandler}\n                        value={this.state.searchString}\n                        data-testid='search-input'\n                    />\n                    <SearchIcon\n                        id='searchIcon'\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <i\n                        className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                        onClick={this.resetSearch}\n                        data-testid='clear-search'\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private searchBarChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const {searchString} = this.state;\n        if (searchString.length !== 0 && e.target.value.length === 0) {\n            this.resetSearch();\n            return;\n        }\n        this.setState({searchString: e.target.value});\n    };\n\n    private handleChannelSearchKeyUp = async (e: React.KeyboardEvent) => {\n        const {key} = e;\n        const {searchString} = this.state;\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            if (searchString.length > 1) {\n                const response = await this.props.actions.searchAllChannels(searchString, '', false, 0, PAGE_SIZE);\n                if ('data' in response) {\n                    this.setState({searchMode: true, channels: response.data.channels, searchTotalCount: response.data.total_count, pageResetKey: Date.now()});\n                }\n            }\n        }\n    };\n    private getDataBySearch = async (page: number, perPage: number): Promise<ChannelWithTeamData[]> => {\n        const response = await this.props.actions.searchAllChannels(this.state.searchString, '', false, page, perPage);\n        const channels = new Array(page * perPage); // Pad the array with empty entries because AbstractList expects to slice the results based on the pagination offset.\n        if ('data' in response) {\n            return channels.concat(response.data.channels);\n        }\n        return [];\n    };\n\n    private resetSearch = () => {\n        this.setState({searchString: '', channels: [], searchMode: false, searchTotalCount: 0, pageResetKey: Date.now()});\n    };\n\n    header() {\n        return (\n            <div className='groups-list--header'>\n                <div className='group-name adjusted'>\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_list.nameHeader'\n                        defaultMessage='Name'\n                    />\n                </div>\n                <div className='group-content'>\n                    <div className='group-description'>\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_list.teamHeader'\n                            defaultMessage='Team'\n                        />\n                    </div>\n                    <div className='group-description adjusted'>\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_list.managementHeader'\n                            defaultMessage='Management'\n                        />\n                    </div>\n                    <div className='group-actions'/>\n                </div>\n            </div>\n        );\n    }\n\n    onPageChangedCallback = (pagination: {startCount: number; endCount: number; total: number}, channels: ChannelWithTeamData[]) => {\n        if (this.state.searchMode) {\n            this.setState({channels});\n        }\n    };\n\n    render(): JSX.Element {\n        const absProps = {...this.props};\n        if (this.state.searchMode) {\n            absProps.actions.getData = this.getDataBySearch;\n        }\n        return (\n            <div className='groups-list groups-list-no-padding'>\n                {this.searchBar()}\n                <AbstractList\n                    header={this.header()}\n                    renderRow={this.renderRow}\n                    noPadding={true}\n                    {...absProps}\n                    key={this.state.pageResetKey}\n                    onPageChangedCallback={this.onPageChangedCallback}\n                    data={this.state.searchMode ? this.state.channels : this.props.data}\n                    total={this.state.searchMode ? this.state.searchTotalCount : this.props.total}\n                />\n            </div>\n        );\n    }\n\n    private renderRow = (item: ChannelWithTeamData) => {\n        return (\n            <ChannelRow\n                key={item.id}\n                channel={item}\n                onRowClick={this.onChannelClick}\n            />\n        );\n    };\n\n    private onChannelClick = (id: string) => {\n        browserHistory.push(`/admin_console/user_management/channels/${id}`);\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {ChannelWithTeamData} from 'mattermost-redux/types/channels';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\ninterface Props {\n    channel: ChannelWithTeamData;\n    onRowClick: (id: string) => void;\n}\n\nexport default class ChannelRow extends React.PureComponent<Props> {\n    private handleRowClick = () => {\n        const {channel, onRowClick} = this.props;\n        onRowClick(channel.id);\n    };\n\n    render(): JSX.Element {\n        const {channel} = this.props;\n        return (\n            <div\n                className='group'\n                onClick={this.handleRowClick}\n            >\n                <div className='group-row'>\n                    <span\n                        className='group-name overflow--ellipsis row-content'\n                        data-testid='channel-display-name'\n                    >\n                        {channel.type === Constants.PRIVATE_CHANNEL ? (\n                            <LockIcon className='channel-icon channel-icon__lock'/>\n                        ) : (\n                            <GlobeIcon className='channel-icon channel-icon__globe'/>\n                        )}\n                        {channel.display_name}\n                    </span>\n                    <span className='group-description row-content'>\n                        {channel.team_display_name}\n                    </span>\n                    <span className='group-description adjusted row-content'>\n                        <FormattedMessage\n                            id={`admin.channel_settings.channel_row.managementMethod.${channel.group_constrained ? 'group' : 'manual'}`}\n                            defaultMessage={channel.group_constrained ? 'Group Sync' : 'Manual Invites'}\n                        />\n                    </span>\n                    <span\n                        className='group-actions'\n                        data-testid={`${channel.display_name}edit`}\n                    >\n                        <Link to={`/admin_console/user_management/channels/${channel.id}`} >\n                            <FormattedMessage\n                                id='admin.channel_settings.channel_row.configure'\n                                defaultMessage='Edit'\n                            />\n                        </Link>\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getAllChannelsWithCount as getData, searchAllChannels} from 'mattermost-redux/actions/channels';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {GenericAction} from 'mattermost-redux/types/actions';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {t} from 'utils/i18n';\nimport {GlobalState} from 'types/store';\nimport {Constants} from 'utils/constants';\n\nimport List from './channel_list';\n\ntype Props = {\n    channel: Partial<Channel>;\n};\n\nconst compareByDisplayName = (a: {display_name: string}, b: {display_name: string}) => a.display_name.localeCompare(b.display_name);\n\nconst getSortedListOfChannels = createSelector(\n    getAllChannels,\n    (teams) => Object.values(teams).\n        filter((c) => (c.type === Constants.OPEN_CHANNEL || c.type === Constants.PRIVATE_CHANNEL) && c.delete_at === 0).\n        sort(compareByDisplayName),\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        data: getSortedListOfChannels(state),\n        total: state.entities.channels.totalCount,\n        emptyListTextId: t('admin.channel_settings.channel_list.no_channels_found'),\n        emptyListTextDefaultMessage: 'No channels found',\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getData,\n            searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class ConvertAndRemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        removeAmount: PropTypes.number.isRequired,\n    }\n\n    render() {\n        const {show, onConfirm, onCancel, displayName, toPublic, removeAmount} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const convertMessageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const toPrivateTitle = 'Convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const toPrivateConfirmMsg = 'Yes, convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName, amount: removeAmount}}\n            />\n        );\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMarkdownMessage\n                        id={convertMessageId}\n                        defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                        values={{displayName}}\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.removeConfirmModal.messageChannel'\n                        defaultMessage='{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this channel. Are you sure you wish to remove these users?'\n                        values={{amount: removeAmount}}\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n                values={{amount: removeAmount}}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertAndRemoveConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class ConvertConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        const {displayName, toPublic} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const messageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert {displayName} to a public channel?';\n        const toPrivateTitle = 'Convert {displayName} to a private channel?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert to public channel';\n        const toPrivateConfirmMsg = 'Yes, convert to private channel';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName}}\n            />\n        );\n\n        const message = (\n            <FormattedMarkdownMessage\n                id={messageId}\n                defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                values={{displayName}}\n            />\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as PropTypes from 'prop-types';\n\nimport FormError from 'components/form_error';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport UsersToBeRemovedModal from './users_to_be_removed_modal';\n\nexport const NeedGroupsError = ({warning, isChannel = false}) => {\n    let error = (\n        <FormattedMessage\n            id='admin.team_channel_settings.need_groups'\n            defaultMessage='You must add at least one group to manage this team by sync group members.'\n        />\n    );\n\n    if (isChannel) {\n        error = (\n            <FormattedMessage\n                id='admin.team_channel_settings.need_groups_channel'\n                defaultMessage='You must add at least one group to manage this channel by sync group members.'\n            />\n        );\n    }\n\n    return (\n        <FormError\n            iconClassName={`fa-exclamation-${warning ? 'circle' : 'triangle'}`}\n            textClassName={`has-${warning ? 'warning' : 'error'}`}\n            error={error}\n        />\n    );\n};\n\nexport const NeedDomainsError = () => (\n    <FormError\n        error={(\n            <FormattedMessage\n                id='admin.team_channel_settings.need_domains'\n                defaultMessage='Please specify allowed email domains.'\n            />)}\n    />\n);\n\nNeedGroupsError.propTypes = {\n    warning: PropTypes.bool,\n    isChannel: PropTypes.bool,\n};\n\nexport class UsersWillBeRemovedError extends React.PureComponent {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n        total: PropTypes.number.isRequired,\n    }\n\n    render() {\n        const {total, users} = this.props;\n        return (\n            <FormError\n                iconClassName='fa-exclamation-triangle'\n                textClassName='has-warning'\n                error={(\n                    <span>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.users_will_be_removed'\n                            defaultMessage='{amount, number} {amount, plural, one {User} other {Users}} will be removed from this team. They are not in groups linked to this team.'\n                            values={{amount: total}}\n                        />\n                        <ToggleModalButton\n                            className='btn btn-link'\n                            dialogType={UsersToBeRemovedModal}\n                            dialogProps={{total, users}}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.view_removed_users'\n                                defaultMessage='View These Users'\n                            />\n                        </ToggleModalButton>\n                    </span>\n                )}\n            />\n\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Group} from 'mattermost-redux/types/groups';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\n\nimport GroupRow from './group_row';\n\nconst Header = () => {\n    return (\n        <div className='groups-list--header'>\n            <div className='group-name group-name-adjusted'>\n                <FormattedMessage\n                    id='admin.team_channel_settings.group_list.nameHeader'\n                    defaultMessage='Group Name'\n                />\n            </div>\n            <div className='group-content'>\n                <div className='group-description group-description-adjusted'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.group_list.membersHeader'\n                        defaultMessage='Member Count'\n                    />\n                </div>\n                <div className='group-description group-description-adjusted'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.group_list.rolesHeader'\n                        defaultMessage='Roles'\n                    />\n                </div>\n                <div className='group-actions'/>\n            </div>\n        </div>\n    );\n};\n\ninterface Props {\n    data?: Partial<Group>[];\n    onPageChangedCallback?: () => void;\n    total: number;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getData: () => void;\n    };\n    removeGroup: (gid: string) => void;\n    setNewGroupRole: (gid: string) => void;\n    type: string;\n    channel?: Partial<Channel>;\n}\n\nexport default class GroupList extends React.PureComponent<Props> {\n    renderRow = (item: Group) => {\n        return (\n            <GroupRow\n                key={item.id}\n                group={item}\n                removeGroup={this.props.removeGroup}\n                setNewGroupRole={this.props.setNewGroupRole}\n                type={this.props.type}\n            />\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <AbstractList\n                header={<Header/>}\n                renderRow={this.renderRow}\n                {...this.props}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Group} from 'mattermost-redux/types/groups';\nimport {FormattedMessage} from 'react-intl';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\nimport {localizeMessage} from 'utils/utils.jsx';\n\ninterface GroupRowProps {\n    group: Partial<Group>;\n    removeGroup: (gid: string) => void;\n    key?: string;\n    setNewGroupRole: (gid: string) => void;\n    type: string;\n}\n\nexport default class GroupRow extends React.PureComponent<GroupRowProps> {\n    removeGroup = () => {\n        this.props.removeGroup(this.props.group.id!);\n    };\n\n    setNewGroupRole = () => {\n        this.props.setNewGroupRole(this.props.group.id!);\n    };\n\n    displayCurrentRole = () => {\n        const {group, type} = this.props;\n        const channelAdmin = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.channelAdmin'\n                defaultMessage='Channel Admin'\n            />\n        );\n        const teamAdmin = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.teamAdmin'\n                defaultMessage='Team Admin'\n            />\n        );\n        const member = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (group.scheme_admin && type === 'channel') {\n            return channelAdmin;\n        } else if (group.scheme_admin && type === 'team') {\n            return teamAdmin;\n        }\n        return member;\n    }\n\n    displayRoleToBe = () => {\n        const {group, type} = this.props;\n        if (!group.scheme_admin && type === 'channel') {\n            return localizeMessage('admin.team_channel_settings.group_row.channelAdmin', 'Channel Admin');\n        } else if (!group.scheme_admin && type === 'team') {\n            return localizeMessage('admin.team_channel_settings.group_row.teamAdmin', 'Team Admin');\n        }\n        return localizeMessage('admin.team_channel_settings.group_row.member', 'Member');\n    }\n\n    render = () => {\n        const {group} = this.props;\n        return (\n            <div\n                id='group'\n                className='group'\n            >\n                <div\n                    id='group-row'\n                    className='group-row'\n                >\n                    <span className='group-name row-content'>\n                        {group.display_name || group.name}\n                    </span>\n                    <span className='group-description row-content'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.group_row.members'\n                            defaultMessage='{memberCount, number} {memberCount, plural, one {member} other {members}}'\n                            values={{memberCount: group.member_count}}\n                        />\n                    </span>\n                    <div className='group-description row-content roles'>\n                        <MenuWrapper>\n                            <div>\n                                <a\n                                    data-testid='current-role'\n                                >\n                                    <span>{this.displayCurrentRole()}</span>\n                                    <span className='caret'/>\n                                </a>\n                            </div>\n                            <Menu\n                                id='role-to-be-menu'\n                                openLeft={true}\n                                openUp={false}\n                                ariaLabel={localizeMessage('admin.team_channel_settings.group_row.memberRole', 'Member Role')}\n                            >\n                                <Menu.ItemAction\n                                    id='role-to-be'\n                                    onClick={this.setNewGroupRole}\n                                    text={this.displayRoleToBe()}\n                                />\n                            </Menu>\n                        </MenuWrapper>\n                    </div>\n                    <span\n                        id='group-actions'\n                        className='group-actions'\n                    >\n                        <a\n                            href='#'\n                            onClick={this.removeGroup}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.group_row.remove'\n                                defaultMessage='Remove'\n                            />\n                        </a>\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport GroupUsersRow from './group_users_row';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 10;\n\ninterface AdminGroupUsersProps {\n    members: Partial<UserProfile>& {last_picture_update?: number}[];\n    total: number;\n}\n\ninterface AdminGroupUsersState {\n    page: number;\n}\n\nexport default class AdminGroupUsers extends React.PureComponent<AdminGroupUsersProps, AdminGroupUsersState> {\n    state: AdminGroupUsersState = {\n        page: 0,\n    }\n\n    previousPage = async () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page});\n    };\n\n    nextPage = async () => {\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= this.props.total ? this.state.page : this.state.page + 1;\n        this.setState({page});\n    };\n\n    renderRow = (member: Partial<UserProfile> & {last_picture_update?: number}) => (\n        <GroupUsersRow\n            key={member.id}\n            user={member}\n            displayName={member.first_name + ' ' + member.last_name}\n            lastPictureUpdate={member.last_picture_update || 0}\n        />\n    );\n    renderRows = () => {\n        const offset = this.state.page * GROUP_MEMBERS_PAGE_SIZE;\n        return this.props.members.slice(offset, offset + GROUP_MEMBERS_PAGE_SIZE).map(this.renderRow);\n    };\n    renderPagination = () => {\n        const {page} = this.state;\n        const startCount = (page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = page === 0;\n        return (\n            <div className='groups-list--footer'>\n                <div className='counter'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.list.paginatorCount'\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                        values={{\n                            startCount,\n                            endCount,\n                            total,\n                        }}\n                    />\n                </div>\n                <button\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                    onClick={this.previousPage}\n                    disabled={firstPage}\n                >\n                    <PreviousIcon/>\n                </button>\n                <button\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                    onClick={this.nextPage}\n                    disabled={lastPage}\n                >\n                    <NextIcon/>\n                </button>\n            </div>\n        );\n    };\n    render = () => {\n        return (\n            <div className='groups-list groups-list-less-padding'>\n                <div className='groups-list--header'>\n                    <div className='group-name'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.user_list.nameHeader'\n                            defaultMessage='Name'\n                        />\n                    </div>\n                    <div className='group-content'>\n                        <div className='group-description group-users--header-padded'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.user_list.roleHeader'\n                                defaultMessage='Role'\n                            />\n                        </div>\n                        <div className='group-description group-users--header-padded'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.user_list.groupsHeader'\n                                defaultMessage='Groups'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='groups-list--body'>\n                    {this.renderRows()}\n                </div>\n\n                {this.renderPagination()}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {Tooltip} from 'react-bootstrap';\n\nimport {Group} from 'mattermost-redux/types/groups';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\nimport OverlayTrigger from 'components/overlay_trigger';\nimport Avatar from 'components/widgets/users/avatar';\n\ntype ProfileWithGroups = Partial<UserProfile & {\n    groups: Partial<Group>[];\n}>;\n\ninterface AdminGroupUsersRowProps {\n    displayName: string;\n    user: ProfileWithGroups;\n    lastPictureUpdate: number;\n}\nexport default class AdminGroupUsersRow extends React.PureComponent<AdminGroupUsersRowProps, {}> {\n    renderRolesColumn = (member: ProfileWithGroups) => {\n        return member.roles!.split(' ').map((role) =>\n            Utils.localizeMessage('admin.permissions.roles.' + role + '.name', role),\n        ).join(', ');\n    };\n\n    renderGroupsColumn = (member: ProfileWithGroups) => {\n        const groups = member.groups || [];\n        if ((groups).length === 1) {\n            return groups[0].display_name;\n        }\n        return (\n            <OverlayTrigger\n                placement='top'\n                overlay={<Tooltip id='groupsTooltip'>{groups.map((g) => g.display_name).join(', ')}</Tooltip>}\n            >\n                <a href='#'>\n                    <FormattedMessage\n                        id={t('team_channel_settings.group.group_user_row.numberOfGroups')}\n                        defaultMessage={'{amount, number} {amount, plural, one {Group} other {Groups}}'}\n                        values={{amount: groups.length}}\n                    />\n                </a>\n            </OverlayTrigger>\n        );\n    };\n\n    render = () => {\n        const {user, lastPictureUpdate, displayName} = this.props;\n        return (\n            <div className='group'>\n                <div\n                    className='group-row roc'\n                    style={{padding: '30px 0px'}}\n                >\n                    <div className='group-name col-sm-8'>\n                        <div className='col-sm-2'>\n                            <Avatar\n                                username={user.username}\n                                url={Client4.getProfilePictureUrl(user.id!, lastPictureUpdate)}\n                                size='lg'\n                            />\n                        </div>\n                        <div className='col-sm-10'>\n                            <div className='row'>\n                                {/* eslint-disable react/jsx-no-literals */}\n                                <b>{'@' + user.username}&nbsp;</b>\n                                {'-'}&nbsp;{displayName}\n                            </div>\n                            <div className='row email-group-row'>{user.email}</div>\n                        </div>\n                    </div>\n                    <span className='col-sm-2 group-user-removal-column group-description'>{this.renderRolesColumn(user)}</span>\n                    <span className='col-sm-2 group-user-removal-column group-description group-description-link'>\n                        {this.renderGroupsColumn(user)}\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {t} from 'utils/i18n';\n\nimport List from './group_list';\n\nfunction mapStateToProps(state, {groups, totalGroups, isModeSync, onGroupRemoved, setNewGroupRole}) {\n    return {\n        data: groups,\n        removeGroup: onGroupRemoved,\n        setNewGroupRole,\n        emptyListTextId: isModeSync ? t('admin.team_channel_settings.group_list.no-synced-groups') : t('admin.team_channel_settings.group_list.no-groups'),\n        emptyListTextDefaultMessage: isModeSync ? 'At least one group must be specified' : 'No groups specified yet',\n        total: totalGroups,\n    };\n}\n\nfunction mapDispatchToProps() {\n    return {\n        actions: {\n            getData: () => Promise.resolve(),\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Toggle from 'components/toggle';\n\nexport default class LineSwitch extends React.PureComponent {\n    static propTypes = {\n        title: PropTypes.node.isRequired,\n        last: PropTypes.bool,\n        toggled: PropTypes.bool.isRequired,\n        disabled: PropTypes.bool,\n        singleLine: PropTypes.bool,\n        subTitle: PropTypes.node.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        children: PropTypes.node,\n        offText: PropTypes.node,\n        onText: PropTypes.node,\n        id: PropTypes.string,\n    };\n\n    render() {\n        const {title, subTitle, singleLine, toggled, onToggle, children, offText, onText, disabled, last, id} = this.props;\n        return (<div>\n            <div className='line-switch d-flex flex-sm-column flex-md-row align-items-sm-start align-items-center justify-content-md-between'>\n                <label className='line-switch__label'>{title}</label>\n                <div\n                    data-testid={id}\n                    className='line-switch__toggle'\n                >\n                    <Toggle\n                        disabled={disabled}\n                        onToggle={onToggle}\n                        toggled={toggled}\n                        onText={onText}\n                        offText={offText}\n                    />\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-sm-10'>\n                    <div className={`help-text-small help-text-no-padding ${singleLine ? 'help-text-single-line' : ''}`}>{subTitle}</div>\n                </div>\n            </div>\n            {children}\n            {!last && <div className='section-separator'><hr className='separator__hr'/></div>}\n        </div>);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class RemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Indicates if the message is for removal from channel or team\n         */\n        inChannel: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        amount: PropTypes.number.isRequired,\n\n    }\n\n    render() {\n        const {amount, inChannel} = this.props;\n        const title = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.title'\n                defaultMessage='Save and remove {amount, number} {amount, plural, one {user} other {users}}?'\n                values={{amount}}\n            />\n        );\n\n        const messageId = inChannel ? t('admin.team_channel_settings.removeConfirmModal.messageChannel') : t('admin.team_channel_settings.removeConfirmModal.messageTeam');\n        const messageChannel = '{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this channel. Are you sure you wish to remove {amount, plural, one {this user} other {these users}}?';\n        const messageTeam = '{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this team. Are you sure you wish to remove {amount, plural, one {this user} other {these users}}?';\n\n        const message = (\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={inChannel ? messageChannel : messageTeam}\n                values={{amount}}\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.remove'\n                defaultMessage='Save and remove {amount, plural, one {user} other {users}}'\n                values={{amount}}\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport SaveButton from 'components/save_button';\nimport {localizeMessage} from 'utils/utils';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nexport default function SaveChangesPanel({saveNeeded, onClick, saving, serverError, cancelLink}) {\n    return (\n        <div className='admin-console-save'>\n            <SaveButton\n                saving={saving}\n                disabled={!saveNeeded}\n                onClick={onClick}\n                savingMessage={localizeMessage('admin.team_channel_settings.saving', 'Saving Config...')}\n            />\n            <BlockableLink\n                className='cancel-button'\n                to={cancelLink}\n            >\n                <FormattedMessage\n                    id='admin.team_channel_settings.cancel'\n                    defaultMessage='Cancel'\n                />\n            </BlockableLink>\n\n            <div className='error-message'>\n                {serverError}\n            </div>\n        </div>\n    );\n}\n\nSaveChangesPanel.propTypes = {\n    saving: PropTypes.bool.isRequired,\n    saveNeeded: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    cancelLink: PropTypes.string.isRequired,\n    serverError: PropTypes.node,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\n\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getTeam as fetchTeam, membersMinusGroupMembers, patchTeam, removeUserFromTeam, updateTeamMemberSchemeRoles, addUserToTeam} from 'mattermost-redux/actions/teams';\nimport {getAllGroups, getGroupsAssociatedToTeam} from 'mattermost-redux/selectors/entities/groups';\n\nimport {\n    getGroupsAssociatedToTeam as fetchAssociatedGroups,\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n    patchGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport TeamDetails from './team_details';\n\nfunction mapStateToProps(state, props) {\n    const teamID = props.match.params.team_id;\n    const team = getTeam(state, teamID);\n    const groups = getGroupsAssociatedToTeam(state, teamID);\n    const allGroups = getAllGroups(state, teamID);\n    const totalGroups = groups.length;\n    return {\n        team,\n        groups,\n        totalGroups,\n        allGroups,\n        teamID,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeam: fetchTeam,\n            getGroups: fetchAssociatedGroups,\n            patchTeam,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            setNavigationBlocked,\n            patchGroupSyncable,\n            removeUserFromTeam,\n            addUserToTeam,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport {Groups} from 'mattermost-redux/constants';\n\nimport {browserHistory} from 'utils/browser_history';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nimport FormError from 'components/form_error';\n\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport {NeedDomainsError, NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\n\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {TeamProfile} from './team_profile';\nimport {TeamModes} from './team_modes';\nimport {TeamGroups} from './team_groups';\nimport TeamMembers from './team_members/index';\n\nexport default class TeamDetails extends React.PureComponent {\n    static propTypes = {\n        teamID: PropTypes.string.isRequired,\n        team: PropTypes.object.isRequired,\n        totalGroups: PropTypes.number.isRequired,\n        groups: PropTypes.arrayOf(PropTypes.object),\n        allGroups: PropTypes.object.isRequired,\n        actions: PropTypes.shape({\n            setNavigationBlocked: PropTypes.func.isRequired,\n            getTeam: PropTypes.func.isRequired,\n            linkGroupSyncable: PropTypes.func.isRequired,\n            unlinkGroupSyncable: PropTypes.func.isRequired,\n            membersMinusGroupMembers: PropTypes.func.isRequired,\n            getGroups: PropTypes.func.isRequired,\n            patchTeam: PropTypes.func.isRequired,\n            patchGroupSyncable: PropTypes.func.isRequired,\n            addUserToTeam: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        team: {display_name: '', id: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        const team = props.team;\n        this.state = {\n            groups: props.groups,\n            syncChecked: Boolean(team.group_constrained),\n            allAllowedChecked: team.allow_open_invite,\n            allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n            allowedDomains: team.allowed_domains || '',\n            saving: false,\n            showRemoveConfirmation: false,\n            usersToRemoveCount: 0,\n            usersToRemove: {},\n            usersToAdd: {},\n            rolesToUpdate: {},\n            totalGroups: props.totalGroups,\n            saveNeeded: false,\n            serverError: null,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const {totalGroups, team} = this.props;\n        if (prevProps.team.id !== team.id || totalGroups !== prevProps.totalGroups) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                syncChecked: Boolean(team.group_constrained),\n                allAllowedChecked: team.allow_open_invite,\n                allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n                allowedDomains: team.allowed_domains || '',\n            });\n        }\n    }\n\n    componentDidMount() {\n        const {teamID, actions} = this.props;\n        actions.getTeam(teamID).\n            then(() => actions.getGroups(teamID)).\n            then(() => this.setState({groups: this.props.groups}));\n    }\n\n    setNewGroupRole = (gid) => {\n        const groups = cloneDeep(this.state.groups).map((g) => {\n            if (g.id === gid) {\n                g.scheme_admin = !g.scheme_admin;\n            }\n            return g;\n        });\n        this.processGroupsChange(groups);\n    }\n\n    handleSubmit = async () => {\n        this.setState({showRemoveConfirmation: false, saving: true});\n        const {groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n\n        let serverError = null;\n        let saveNeeded = false;\n\n        const {team, groups: origGroups, teamID, actions} = this.props;\n        if (allowedDomainsChecked && allowedDomains.trim().length === 0) {\n            saveNeeded = true;\n            serverError = <NeedDomainsError/>;\n        } else if (this.state.groups.length === 0 && syncChecked) {\n            serverError = <NeedGroupsError/>;\n            saveNeeded = true;\n        } else {\n            const patchTeamPromise = actions.patchTeam({\n                ...team,\n                group_constrained: syncChecked,\n                allowed_domains: allowedDomainsChecked ? allowedDomains : '',\n                allow_open_invite: allAllowedChecked,\n            });\n            const patchTeamSyncable = groups.\n                filter((g) => {\n                    return origGroups.some((group) => group.id === g.id && group.scheme_admin !== g.scheme_admin);\n                }).\n                map((g) => actions.patchGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM, {scheme_admin: g.scheme_admin}));\n            const unlink = origGroups.\n                filter((g) => {\n                    return !groups.some((group) => group.id === g.id);\n                }).\n                map((g) => actions.unlinkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM));\n            const link = groups.\n                filter((g) => {\n                    return !origGroups.some((group) => group.id === g.id);\n                }).\n                map((g) => actions.linkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true, scheme_admin: g.scheme_admin}));\n            const result = await Promise.all([patchTeamPromise, ...patchTeamSyncable, ...unlink, ...link]);\n            const resultWithError = result.find((r) => r.error);\n            if (resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                await actions.getGroups(teamID);\n            }\n        }\n\n        const usersToAddList = Object.values(usersToAdd);\n        const usersToRemoveList = Object.values(usersToRemove);\n        const userRolesToUpdate = Object.keys(rolesToUpdate);\n        const usersToUpdate = usersToAddList.length > 0 || usersToRemoveList.length > 0 || userRolesToUpdate.length > 0;\n        if (usersToUpdate && !syncChecked) {\n            const userActions = [];\n            const {addUserToTeam, removeUserFromTeam, updateTeamMemberSchemeRoles} = this.props.actions;\n            usersToAddList.forEach((user) => {\n                userActions.push(addUserToTeam(teamID, user.id));\n            });\n            usersToRemoveList.forEach((user) => {\n                userActions.push(removeUserFromTeam(teamID, user.id));\n            });\n\n            let result = await Promise.all(userActions);\n            let resultWithError = result.find((r) => r.error);\n            if (resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                const roleActions = [];\n                userRolesToUpdate.forEach((userId) => {\n                    const {schemeUser, schemeAdmin} = rolesToUpdate[userId];\n                    roleActions.push(updateTeamMemberSchemeRoles(teamID, userId, schemeUser, schemeAdmin));\n                });\n                result = await Promise.all(roleActions);\n                resultWithError = result.find((r) => r.error);\n                if (resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n            }\n        }\n\n        this.setState({usersToRemoveCount: 0, rolesToUpdate: {}, usersToAdd: {}, usersToRemove: {}, serverError, saving: false, saveNeeded}, () => {\n            actions.setNavigationBlocked(saveNeeded);\n            if (!saveNeeded) {\n                browserHistory.push('/admin_console/user_management/teams');\n            }\n        });\n    }\n\n    setToggles = (syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains) => {\n        this.setState({\n            saveNeeded: true,\n            syncChecked,\n            allAllowedChecked: !syncChecked && allAllowedChecked,\n            allowedDomainsChecked: !syncChecked && allowedDomainsChecked,\n            allowedDomains,\n        }, () => this.processGroupsChange(this.state.groups));\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    async processGroupsChange(groups) {\n        const {teamID, actions} = this.props;\n        actions.setNavigationBlocked(true);\n\n        let serverError = null;\n        let usersToRemoveCount = 0;\n        if (this.state.syncChecked) {\n            try {\n                if (groups.length === 0) {\n                    serverError = <NeedGroupsError warning={true}/>;\n                } else {\n                    const result = await actions.membersMinusGroupMembers(teamID, groups.map((g) => g.id));\n                    usersToRemoveCount = result.data.total_count;\n                    if (usersToRemoveCount > 0) {\n                        serverError = (\n                            <UsersWillBeRemovedError\n                                total={usersToRemoveCount}\n                                users={result.data.users}\n                            />\n                        );\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemoveCount, saveNeeded: true, serverError});\n    }\n\n    addUsersToAdd = (users) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove} = this.state;\n        users.forEach((user) => {\n            if (usersToRemove[user.id]?.id === user.id) {\n                delete usersToRemove[user.id];\n                usersToRemoveCount -= 1;\n            } else {\n                usersToAdd[user.id] = user;\n            }\n        });\n        this.setState({usersToAdd: {...usersToAdd}, usersToRemove: {...usersToRemove}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addUserToRemove = (user) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        if (usersToAdd[user.id]?.id === user.id) {\n            delete usersToAdd[user.id];\n        } else if (usersToRemove[user.id]?.id !== user.id) {\n            usersToRemoveCount += 1;\n            usersToRemove[user.id] = user;\n        }\n        delete rolesToUpdate[user.id];\n        this.setState({usersToRemove: {...usersToRemove}, usersToAdd: {...usersToAdd}, rolesToUpdate: {...rolesToUpdate}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addRolesToUpdate = (userId, schemeUser, schemeAdmin) => {\n        const {rolesToUpdate} = this.state;\n        rolesToUpdate[userId] = {schemeUser, schemeAdmin};\n        this.setState({rolesToUpdate: {...rolesToUpdate}, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleGroupRemoved = (gid) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n        this.processGroupsChange(groups);\n    }\n\n    handleGroupChange = (groupIDs) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n        this.processGroupsChange(groups);\n    }\n\n    hideRemoveUsersModal = () => {\n        this.setState({showRemoveConfirmation: false});\n    }\n    showRemoveUsersModal = () => {\n        if (this.state.usersToRemoveCount > 0) {\n            this.setState({showRemoveConfirmation: true});\n        } else {\n            this.handleSubmit();\n        }\n    }\n\n    render = () => {\n        const {team} = this.props;\n        const {totalGroups, saving, saveNeeded, serverError, groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, showRemoveConfirmation, usersToRemoveCount} = this.state;\n        const missingGroup = (og) => !groups.find((g) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/teams'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.team_settings.team_detail.group_configuration'\n                            defaultMessage='Team Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <RemoveConfirmModal\n                            amount={usersToRemoveCount}\n                            inChannel={false}\n                            show={showRemoveConfirmation}\n                            onCancel={this.hideRemoveUsersModal}\n                            onConfirm={this.handleSubmit}\n                        />\n                        <TeamProfile\n                            team={team}\n                        />\n\n                        <TeamModes\n                            allAllowedChecked={allAllowedChecked}\n                            allowedDomainsChecked={allowedDomainsChecked}\n                            allowedDomains={allowedDomains}\n                            syncChecked={syncChecked}\n                            onToggle={this.setToggles}\n                        />\n\n                        <TeamGroups\n                            syncChecked={syncChecked}\n                            team={team}\n                            groups={groups}\n                            removedGroups={removedGroups}\n                            totalGroups={totalGroups}\n                            onAddCallback={this.handleGroupChange}\n                            onGroupRemoved={this.handleGroupRemoved}\n                            setNewGroupRole={this.setNewGroupRole}\n                        />\n\n                        {!syncChecked &&\n                            <TeamMembers\n                                onRemoveCallback={this.addUserToRemove}\n                                onAddCallback={this.addUsersToAdd}\n                                usersToRemove={this.state.usersToRemove}\n                                usersToAdd={this.state.usersToAdd}\n                                updateRole={this.addRolesToUpdate}\n                                teamId={this.props.teamID}\n                            />\n                        }\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/teams'\n                    saveNeeded={saveNeeded}\n                    onClick={this.showRemoveUsersModal}\n                    serverError={serverError}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport AddGroupsToTeamModal from 'components/add_groups_to_team_modal';\n\nimport GroupList from '../../group';\n\nexport const TeamGroups = ({onGroupRemoved, syncChecked, team, onAddCallback, totalGroups, groups, removedGroups, setNewGroupRole}) => (\n    <AdminPanel\n        id='team_groups'\n        titleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsTitle') : t('admin.team_settings.team_detail.groupsTitle')}\n        titleDefault={syncChecked ? 'Synced Groups' : 'Groups'}\n        subtitleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsDescription') : t('admin.team_settings.team_detail.groupsDescription')}\n        subtitleDefault={syncChecked ? 'Add and remove team members based on their group membership.' : 'Group members will be added to the team.'}\n        button={\n            <ToggleModalButton\n                id='addGroupsToTeamToggle'\n                className='btn btn-primary'\n                dialogType={AddGroupsToTeamModal}\n                dialogProps={{\n                    team,\n                    onAddCallback,\n                    skipCommit: true,\n                    excludeGroups: groups,\n                    includeGroups: removedGroups,\n                }}\n            >\n                <FormattedMessage\n                    id='admin.team_settings.team_details.add_group'\n                    defaultMessage='Add Group'\n                />\n            </ToggleModalButton>}\n    >\n        <GroupList\n            team={team}\n            isModeSync={syncChecked}\n            groups={groups}\n            totalGroups={totalGroups}\n            onGroupRemoved={onGroupRemoved}\n            setNewGroupRole={setNewGroupRole}\n            type='team'\n        />\n    </AdminPanel>);\n\nTeamGroups.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    team: PropTypes.object.isRequired,\n    totalGroups: PropTypes.number.isRequired,\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onAddCallback: PropTypes.func.isRequired,\n    onGroupRemoved: PropTypes.func.isRequired,\n    setNewGroupRole: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {filterProfilesMatchingTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\n\nimport {getMembersInTeams, getTeamStats, getTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getProfilesInTeam, searchProfilesInTeam, filterProfiles} from 'mattermost-redux/selectors/entities/users';\n\nimport {GlobalState} from 'types/store';\nimport {loadProfilesAndReloadTeamMembers, searchProfilesAndTeamMembers} from 'actions/user_actions.jsx';\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport TeamMembers from './team_members';\n\ntype Props = {\n    teamId: string;\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n};\n\ntype Actions = {\n    getTeamStats: (teamId: string) => Promise<{\n        data: boolean;\n    }>;\n    loadProfilesAndReloadTeamMembers: (page: number, perPage: number, teamId?: string, options?: {}) => Promise<{\n        data: boolean;\n    }>;\n    searchProfilesAndTeamMembers: (term: string, options?: {}) => Promise<{\n        data: boolean;\n    }>;\n    setModalSearchTerm: (term: string) => Promise<{\n        data: boolean;\n    }>;\n};\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profiles = filterProfilesMatchingTerm(Object.keys(users).map((key) => users[key]), term);\n    const filteredProfilesMap = filterProfiles(profileListToMap(profiles), {});\n\n    return filteredProfilesMap;\n}\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const {teamId, usersToRemove} = props;\n    let {usersToAdd} = props;\n\n    const teamMembers = getMembersInTeams(state)[teamId] || {};\n    const team = getTeam(state, teamId) || {};\n    const stats = getTeamStats(state)[teamId] || {total_member_count: 0};\n\n    const searchTerm = state.views.search.modalSearch;\n    let users = [];\n    if (searchTerm) {\n        users = searchProfilesInTeam(state, teamId, searchTerm, false);\n        usersToAdd = searchUsersToAdd(usersToAdd, searchTerm);\n    } else {\n        users = getProfilesInTeam(state, teamId);\n    }\n\n    return {\n        teamId,\n        team,\n        users,\n        teamMembers,\n        usersToAdd,\n        usersToRemove,\n        totalCount: stats.total_member_count,\n        searchTerm,\n    };\n}\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getTeamStats: loadTeamStats,\n            loadProfilesAndReloadTeamMembers,\n            searchProfilesAndTeamMembers,\n            setModalSearchTerm,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamMembers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership, Team} from 'mattermost-redux/types/teams';\n\nimport {t} from 'utils/i18n';\nimport Constants from 'utils/constants';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport UserGrid from 'components/admin_console/user_grid/user_grid';\nimport {BaseMembership} from 'components/admin_console/user_grid/user_grid_role_dropdown';\nimport AddUsersToTeamModal from 'components/add_users_to_team_modal';\nimport ToggleModalButton from 'components/toggle_modal_button';\n\ntype Props = {\n    teamId: string;\n    team: Team;\n    users: UserProfile[];\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    teamMembers: Dictionary<TeamMembership>;\n\n    totalCount: number;\n    searchTerm: string;\n    loading?: boolean;\n\n    onAddCallback: (users: UserProfile[]) => void;\n    onRemoveCallback: (user: UserProfile) => void;\n    updateRole: (userId: string, schemeUser: boolean, schemeAdmin: boolean) => void;\n\n    actions: {\n        getTeamStats: (teamId: string) => Promise<{\n            data: boolean;\n        }>;\n        loadProfilesAndReloadTeamMembers: (page: number, perPage: number, teamId?: string, options?: {}) => Promise<{\n            data: boolean;\n        }>;\n        searchProfilesAndTeamMembers: (term: string, options?: {}) => Promise<{\n            data: boolean;\n        }>;\n        setModalSearchTerm: (term: string) => Promise<{\n            data: boolean;\n        }>;\n    };\n}\n\ntype State = {\n    loading: boolean;\n}\n\nconst PROFILE_CHUNK_SIZE = 10;\n\nexport default class TeamMembers extends React.PureComponent<Props, State> {\n    private searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    public componentDidMount() {\n        const {teamId} = this.props;\n        const {loadProfilesAndReloadTeamMembers, getTeamStats, setModalSearchTerm} = this.props.actions;\n        Promise.all([\n            setModalSearchTerm(''),\n            getTeamStats(teamId),\n            loadProfilesAndReloadTeamMembers(0, PROFILE_CHUNK_SIZE * 2, teamId),\n        ]).then(() => this.setStateLoading(false));\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            this.setStateLoading(true);\n            clearTimeout(this.searchTimeoutId);\n            const searchTerm = this.props.searchTerm;\n\n            if (searchTerm === '') {\n                this.searchTimeoutId = 0;\n                this.setStateLoading(false);\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    await prevProps.actions.searchProfilesAndTeamMembers(searchTerm, {team_id: this.props.teamId});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n                    this.setStateLoading(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    private setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    private loadPage = async (page: number) => {\n        const {loadProfilesAndReloadTeamMembers} = this.props.actions;\n        const {teamId} = this.props;\n        await loadProfilesAndReloadTeamMembers(page + 1, PROFILE_CHUNK_SIZE, teamId);\n    }\n\n    private removeUser = (user: UserProfile) => {\n        this.props.onRemoveCallback(user);\n    }\n\n    private onAddCallback = (users: UserProfile[]) => {\n        this.props.onAddCallback(users);\n    }\n\n    private search = async (term: string) => {\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        this.props.updateRole(membership.user_id, membership.scheme_user, membership.scheme_admin);\n    }\n\n    public render = () => {\n        const {users, team, usersToAdd, usersToRemove, teamMembers, totalCount, searchTerm} = this.props;\n        return (\n            <AdminPanel\n                id='teamMembers'\n                titleId={t('admin.team_settings.team_detail.membersTitle')}\n                titleDefault='Members'\n                subtitleId={t('admin.team_settings.team_detail.membersDescription')}\n                subtitleDefault='A list of users who are currently in the team right now'\n                button={\n                    <ToggleModalButton\n                        id='addTeamMembers'\n                        className='btn btn-primary'\n                        dialogType={AddUsersToTeamModal}\n                        dialogProps={{\n                            team,\n                            onAddCallback: this.onAddCallback,\n                            skipCommit: true,\n                            excludeUsers: usersToAdd,\n                            includeUsers: usersToRemove,\n                            filterExcludeGuests: true,\n                        }}\n                    >\n                        <FormattedMessage\n                            id='admin.team_settings.team_details.add_members'\n                            defaultMessage='Add Members'\n                        />\n                    </ToggleModalButton>\n                }\n            >\n                <UserGrid\n                    loading={this.state.loading || Boolean(this.props.loading)}\n                    users={users}\n                    loadPage={this.loadPage}\n                    removeUser={this.removeUser}\n                    totalCount={totalCount}\n                    memberships={teamMembers}\n                    updateMembership={this.updateMembership}\n                    search={this.search}\n                    term={searchTerm}\n                    includeUsers={usersToAdd}\n                    excludeUsers={usersToRemove}\n                    scope={'team'}\n                />\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport LineSwitch from '../../line_switch.jsx';\n\nconst SyncGroupsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) => (\n    <LineSwitch\n        id='syncGroupSwitch'\n        toggled={syncChecked}\n        last={syncChecked}\n        onToggle={() => onToggle(!syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n        title={(\n            <FormattedMessage\n                id='admin.team_settings.team_details.syncGroupMembers'\n                defaultMessage='Sync Group Members'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.team_settings.team_details.syncGroupMembersDescr'\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this team. The only way of inviting members to this team is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n            />\n        )}\n    />);\n\nSyncGroupsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nconst AllowAllToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\n    !syncChecked && (\n        <LineSwitch\n            toggled={allAllowedChecked}\n            singleLine={true}\n            onToggle={() => onToggle(syncChecked, !allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoin'\n                    defaultMessage='Anyone can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoinDescr'\n                    defaultMessage='This team can be discovered allowing anyone with an account to join this team.'\n                />\n            )}\n        />);\n\nAllowAllToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nconst AllowedDomainsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle}) =>\n    !syncChecked && (\n        <LineSwitch\n            toggled={allowedDomainsChecked}\n            last={true}\n            onToggle={() => onToggle(syncChecked, allAllowedChecked, !allowedDomainsChecked, allowedDomains)}\n            singleLine={true}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomains'\n                    defaultMessage='Only specific email domains can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomainsDescr'\n                    defaultMessage='Users can only join the team if their email matches one of the specified domains'\n                />\n            )}\n        >\n            <div className='help-text csvDomains'>\n                <FormattedMessage\n                    id='admin.team_settings.team_details.csvDomains'\n                    defaultMessage='Comma Separated Email Domain List'\n                />\n            </div>\n            <input\n                type='text'\n                value={allowedDomains}\n                placeholder='mattermost.org'\n                className='form-control'\n                onChange={(e) => onToggle(syncChecked, allAllowedChecked, allowedDomainsChecked, e.currentTarget.value)}\n            />\n        </LineSwitch>);\n\nAllowedDomainsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n};\n\nexport const TeamModes = ({allAllowedChecked, syncChecked, allowedDomains, allowedDomainsChecked, onToggle}) => (\n    <AdminPanel\n        id='team_manage'\n        titleId={t('admin.team_settings.team_detail.manageTitle')}\n        titleDefault='Team Management'\n        subtitleId={t('admin.team_settings.team_detail.manageDescription')}\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n    >\n        <div className='group-teams-and-channels'>\n            <div className='group-teams-and-channels--body'>\n                <SyncGroupsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n                <AllowAllToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n                <AllowedDomainsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                />\n            </div>\n        </div>\n    </AdminPanel>);\n\nTeamModes.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport * as Utils from 'utils/utils';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nexport function TeamProfile({team}) {\n    const teamIconUrl = Utils.imageURLForTeam(team);\n\n    return (\n        <AdminPanel\n            id='team_profile'\n            titleId={t('admin.team_settings.team_detail.profileTitle')}\n            titleDefault='Team Profile'\n            subtitleId={t('admin.team_settings.team_detail.profileDescription')}\n            subtitleDefault='Summary of the team, including team name and description.'\n        >\n\n            <div className='group-teams-and-channels'>\n\n                <div className='group-teams-and-channels--body'>\n                    <div className='row'>\n                        <div className='col-sm-2 large-team-image-col'>\n                            <TeamIcon\n                                name={team.display_name}\n                                size='lg'\n                                url={teamIconUrl}\n                            />\n                        </div>\n                        <div className='col-sm-10 team-desc-col'>\n                            <div className='row row-bottom-padding'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamName'\n                                    defaultMessage='**Team Name**:'\n                                />\n                                <br/>\n                                {team.display_name}\n                            </div>\n                            <div className='row'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamDescription'\n                                    defaultMessage='**Team Description**:'\n                                />\n                                <br/>\n                                {team.description || <span className='greyed-out'>{Utils.localizeMessage('admin.team_settings.team_detail.profileNoDescription', 'No team description added.')}</span>}\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </AdminPanel>\n    );\n}\n\nTeamProfile.propTypes = {\n    team: PropTypes.object.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {connect} from 'react-redux';\n\nimport {TeamsSettings} from './team_settings';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(TeamsSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getTeams as fetchTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {t} from 'utils/i18n';\n\nimport TeamList from './team_list.jsx';\n\nconst getSortedListOfTeams = createSelector(\n    getTeams,\n    (teams) => Object.values(teams).sort((a, b) => a.display_name.localeCompare(b.display_name)),\n);\n\nfunction mapStateToProps(state) {\n    return {\n        data: getSortedListOfTeams(state),\n        total: state.entities.teams.totalCount || 0,\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\n        emptyListTextDefaultMessage: 'No teams found',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getData: (page, pageSize) => fetchTeams(page, pageSize, true),\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {Constants} from 'utils/constants';\n\nimport TeamRow from 'components/admin_console/team_channel_settings/team/list/team_row.jsx';\nimport AbstractList, {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport {browserHistory} from 'utils/browser_history';\n\nimport SearchIcon from 'components/widgets/icons/search_icon';\n\nexport default class TeamList extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            searchTeams: PropTypes.func.isRequired,\n            getData: PropTypes.func.isRequired,\n        }).isRequired,\n        data: PropTypes.array,\n        total: PropTypes.number,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchString: '',\n            teams: [],\n            searchTotalCount: 0,\n            pageResetKey: 0,\n        };\n    }\n\n    header() {\n        return (\n            <div className='groups-list--header'>\n                <div className='group-name adjusted'>\n                    <FormattedMessage\n                        id='admin.team_settings.team_list.nameHeader'\n                        defaultMessage='Name'\n                    />\n                </div>\n                <div className='group-content'>\n                    <div className='group-description adjusted'>\n                        <FormattedMessage\n                            id='admin.team_settings.team_list.mappingHeader'\n                            defaultMessage='Management'\n                        />\n                    </div>\n                    <div className='group-actions'/>\n                </div>\n            </div>\n        );\n    }\n\n    searchBar = () => {\n        return (\n            <div className='groups-list--global-actions'>\n                <div className='group-list-search'>\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onKeyUp={this.handleTeamSearchKeyUp}\n                        onChange={this.searchBarChangeHandler}\n                        value={this.state.searchString}\n                        data-testid='search-input'\n                    />\n                    <SearchIcon\n                        id='searchIcon'\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <i\n                        className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                        onClick={this.resetSearch}\n                        data-testid='clear-search'\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    searchBarChangeHandler = (e) => {\n        const {searchString} = this.state;\n        if (searchString.length !== 0 && e.target.value.length === 0) {\n            this.resetSearch();\n            return;\n        }\n        this.setState({searchString: e.target.value});\n    }\n\n    handleTeamSearchKeyUp = async (e) => {\n        const {key} = e;\n        const {searchString} = this.state;\n\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            if (searchString.length > 1) {\n                const response = await this.props.actions.searchTeams(searchString, 0, PAGE_SIZE);\n                this.setState({searchMode: true, teams: response.data.teams, searchTotalCount: response.data.total_count, pageResetKey: Date.now()});\n            }\n        }\n    }\n\n    getDataBySearch = async (page, perPage) => {\n        if (this.state.searchString.length > 1) {\n            const response = await this.props.actions.searchTeams(this.state.searchString, page, perPage);\n            const teams = new Array(page * perPage); // Pad the array with empty entries because AbstractList expects to slice the results based on the pagination offset.\n            return teams.concat(response.data.teams);\n        }\n        return [];\n    }\n\n    resetSearch = () => {\n        this.setState({searchString: '', teams: [], searchMode: false, searchTotalCount: 0, pageResetKey: Date.now()});\n    }\n\n    onPageChangedCallback = (pagination, teams) => {\n        if (this.state.searchMode) {\n            this.setState({teams});\n        }\n    }\n\n    render() {\n        const absProps = cloneDeep(this.props);\n        if (this.state.searchMode) {\n            absProps.actions.getData = this.getDataBySearch;\n        }\n        return (\n            <div className='groups-list groups-list-no-padding'>\n                {this.searchBar()}\n                <AbstractList\n                    header={this.header()}\n                    renderRow={this.renderRow}\n                    noPadding={true}\n                    {...absProps}\n                    key={this.state.pageResetKey}\n                    onPageChangedCallback={this.onPageChangedCallback}\n                    data={this.state.searchMode ? this.state.teams : this.props.data}\n                    total={this.state.searchMode ? this.state.searchTotalCount : this.props.total}\n                />\n            </div>\n        );\n    }\n\n    renderRow = (item) => {\n        return (\n            <TeamRow\n                key={item.id}\n                team={item}\n                onRowClick={this.onTeamClick}\n            />\n        );\n    }\n\n    onTeamClick = (id) => {\n        browserHistory.push(`/admin_console/user_management/teams/${id}`);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nexport default class TeamRow extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onRowClick: PropTypes.func.isRequired,\n    };\n\n    handleRowClick = () => {\n        const {team, onRowClick} = this.props;\n        onRowClick(team.id);\n    }\n\n    renderManagementMethodText = () => {\n        const {team} = this.props;\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.groupSync'\n                    defaultMessage='Group Sync'\n                />\n            );\n        } else if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.anyoneCanJoin'\n                    defaultMessage='Anyone Can Join'\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id='admin.team_settings.team_row.managementMethod.inviteOnly'\n                defaultMessage='Invite Only'\n            />\n        );\n    }\n\n    render = () => {\n        const {team} = this.props;\n        const teamIconUrl = Utils.imageURLForTeam(team);\n        return (\n            <div\n                className='group'\n                onClick={this.handleRowClick}\n            >\n                <div className='group-row group-row-large'>\n                    <div className='group-name adjusted center-row row-content'>\n                        <TeamIcon\n                            size='sm'\n                            url={teamIconUrl}\n                            name={team.display_name}\n                        />\n                        <div>\n                            <b data-testid='team-display-name'>{team.display_name}</b>\n                            {team.description && (\n                                <div className='overflow--ellipsis text-nowrap team-descr-list-column'>\n                                    {team.description}\n                                </div>)}\n\n                        </div>\n\n                    </div>\n                    <div className='group-content'>\n                        <span className='group-description adjusted row-content'>\n                            {this.renderManagementMethodText()}\n                        </span>\n                        <span\n                            data-testid={`${team.display_name}edit`}\n                            className='group-actions'\n                        >\n                            <Link to={`/admin_console/user_management/teams/${team.id}`}>\n                                <FormattedMessage\n                                    id='admin.team_settings.team_row.configure'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\nimport TeamList from 'components/admin_console/team_channel_settings/team/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nexport function TeamsSettings(props) {\n    return (\n        <div className='wrapper--fixed'>\n            <div className='admin-console__header'>\n                <FormattedMessage\n                    id='admin.team_settings.groupsPageTitle'\n                    defaultMessage='{siteName} Teams'\n                    values={{siteName: props.siteName}}\n                />\n            </div>\n\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <AdminPanel\n                        id='teams'\n                        titleId={t('admin.team_settings.title')}\n                        titleDefault='Teams'\n                        subtitleId={t('admin.team_settings.description')}\n                        subtitleDefault='Manage team settings.'\n                    >\n                        <TeamList/>\n                    </AdminPanel>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nTeamsSettings.propTypes = {\n    siteName: PropTypes.string.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport GroupsUsers from './group/group_users';\n\nexport default class UsersToBeRemovedModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Number of users to be removed\n         */\n        total: PropTypes.number.isRequired,\n\n        /*\n         * users to be removed\n         */\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        onHide: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            show: true,\n        };\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    render() {\n        const {users, total} = this.props;\n        const title = (\n            <FormattedMarkdownMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.title'\n                defaultMessage='**{total, number} {total, plural, one {User} other {Users}}** To Be Removed'\n                values={{total}}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.message'\n                defaultMessage='The members listed below are not in any of the groups currently linked to this team. Because this team is set to be managed by group sync they will all be removed once saved.'\n            />\n        );\n\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.close'\n                defaultMessage='Close'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal settings-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                id='confirmModal'\n                role='dialog'\n                aria-labelledby='confirmModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='confirmModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='group-users-to-remove-modal-description'>{message}</div>\n                    <GroupsUsers\n                        members={users}\n                        total={total}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        autoFocus={true}\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleHide}\n                        id='closeModalButton'\n                    >\n                        {button}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport TextSetting, {WidgetTextSettingProps} from 'components/widgets/settings/text_setting';\n\nimport SetByEnv from './set_by_env';\n\ninterface Props extends WidgetTextSettingProps {\n    setByEnv: boolean;\n}\n\nconst AdminTextSetting: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {setByEnv, disabled, ...sharedProps} = props;\n    const isTextDisabled = disabled || setByEnv;\n\n    return (\n        <TextSetting\n            {...sharedProps}\n            labelClassName='col-sm-4'\n            inputClassName='col-sm-8'\n            disabled={isTextDisabled}\n            footer={setByEnv ? <SetByEnv/> : null}\n        />\n    );\n};\n\nexport default AdminTextSetting;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {bindActionCreators} from 'redux';\n\nimport {autocompleteUsers} from 'actions/user_actions';\n\nimport UserAutocompleteSetting from './user_autocomplete_setting';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            autocompleteUsers,\n        }, dispatch),\n    };\n}\nexport default connect(null, mapDispatchToProps)(UserAutocompleteSetting);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport GenericUserProvider from 'components/suggestion/generic_user_provider.jsx';\nimport Setting from 'components/admin_console/setting';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\n\nexport default class UserAutocompleteSetting extends React.PureComponent {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            placeholder: PropTypes.string,\n            helpText: PropTypes.node,\n            value: PropTypes.string,\n            onChange: PropTypes.func,\n            disabled: PropTypes.bool,\n            actions: PropTypes.shape({\n                autocompleteUsers: PropTypes.func.isRequired,\n            }),\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.userSuggestionProviders = [new GenericUserProvider(props.actions.autocompleteUsers)];\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    handleUserSelected = (user) => {\n        this.props.onChange(this.props.id, user.username);\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div\n                    className='admin-setting-user__dropdown'\n                >\n                    <SuggestionBox\n                        id={'admin_user_setting_' + this.props.id}\n                        className='form-control'\n                        placeholder={this.props.placeholder}\n                        value={this.props.value}\n                        onChange={this.handleChange}\n                        onItemSelected={this.handleUserSelected}\n                        listComponent={SuggestionList}\n                        listStyle='bottom'\n                        providers={this.userSuggestionProviders}\n                        disabled={this.props.disabled}\n                        requiredCharacters={0}\n                        openOnFocus={true}\n                    />\n                </div>\n            </Setting>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./user_grid.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\n\nimport Badge from 'components/widgets/badges/badge';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\n\nimport UserGridName from './user_grid_name';\nimport UserGridRemove from './user_grid_remove';\nimport UserGridRoleDropdown, {BaseMembership} from './user_grid_role_dropdown';\n\nimport './user_grid.scss';\n\ntype Props = {\n    users: UserProfile[];\n    scope: 'team' | 'channel';\n    memberships: { [userId: string]: BaseMembership | TeamMembership | ChannelMembership };\n\n    excludeUsers: { [userId: string]: UserProfile };\n    includeUsers: { [userId: string]: UserProfile };\n\n    loadPage: (page: number) => void;\n    search: (term: string) => void;\n    removeUser: (user: UserProfile) => void;\n    updateMembership: (membership: BaseMembership) => void;\n\n    totalCount: number;\n    loading: boolean;\n    term: string;\n}\n\ntype State = {\n    loading: boolean;\n    page: number;\n    membershipsToUpdate: { [userId: string]: BaseMembership | TeamMembership | ChannelMembership };\n}\n\nconst USERS_PER_PAGE = 10;\nconst ROW_HEIGHT = 80;\n\nexport default class UserGrid extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            page: 0,\n            membershipsToUpdate: {},\n        };\n    }\n\n    private loadPage = (page: number) => {\n        this.setState({loading: true});\n        this.props.loadPage(page);\n        this.setState({page, loading: false});\n    }\n\n    private nextPage = () => {\n        this.loadPage(this.state.page + 1);\n    }\n\n    private previousPage = () => {\n        this.loadPage(this.state.page - 1);\n    }\n\n    private search = async (term: string) => {\n        this.props.search(term);\n        this.setState({page: 0});\n    }\n\n    private getVisibleTotalCount = (): number => {\n        const {includeUsers, excludeUsers, totalCount} = this.props;\n        const includeUsersCount = Object.keys(includeUsers).length;\n        const excludeUsersCount = Object.keys(excludeUsers).length;\n        return totalCount + (includeUsersCount - excludeUsersCount);\n    }\n\n    public getPaginationProps = (): {startCount: number; endCount: number; total: number} => {\n        const {includeUsers, excludeUsers, term} = this.props;\n        const {page} = this.state;\n\n        let total: number;\n        let endCount = 0;\n        const startCount = (page * USERS_PER_PAGE) + 1;\n\n        if (term === '') {\n            total = this.getVisibleTotalCount();\n        } else {\n            total = this.props.users.length + Object.keys(includeUsers).length;\n            this.props.users.forEach((u) => {\n                if (excludeUsers[u.id]) {\n                    total -= 1;\n                }\n            });\n        }\n\n        endCount = (page + 1) * USERS_PER_PAGE;\n        endCount = endCount > total ? total : endCount;\n\n        return {startCount, endCount, total};\n    }\n\n    private removeUser = (user: UserProfile) => {\n        const {excludeUsers} = this.props;\n        if (excludeUsers[user.id] === user) {\n            return;\n        }\n\n        let {page} = this.state;\n        const {endCount} = this.getPaginationProps();\n\n        this.props.removeUser(user);\n        if (endCount > this.getVisibleTotalCount() && (endCount % USERS_PER_PAGE) === 1 && page > 0) {\n            page--;\n        }\n\n        this.setState({page});\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        const {membershipsToUpdate} = this.state;\n        const {memberships} = this.props;\n        const userId = membership.user_id;\n        membershipsToUpdate[userId] = {\n            ...memberships[userId],\n            ...membership,\n        };\n\n        this.props.updateMembership(membership);\n        this.setState({membershipsToUpdate}, this.forceUpdate);\n    }\n\n    private newMembership = (user: UserProfile): BaseMembership => {\n        return {\n            user_id: user.id,\n            scheme_admin: false,\n            scheme_user: !user.roles.includes('guest'),\n        };\n    }\n\n    private getRows = (): Row[] => {\n        const {page, membershipsToUpdate} = this.state;\n        const {memberships, users, excludeUsers, includeUsers, totalCount, term, scope} = this.props;\n        const {startCount, endCount} = this.getPaginationProps();\n\n        let usersToDisplay = users;\n        const includeUsersList = Object.values(includeUsers);\n\n        // Remove users to remove and add users to add\n        usersToDisplay = usersToDisplay.filter((user) => !excludeUsers[user.id]);\n        usersToDisplay = [...includeUsersList, ...usersToDisplay];\n        usersToDisplay = usersToDisplay.slice(startCount - 1, endCount);\n\n        // Dont load more elements if searching\n        if (term === '' && usersToDisplay.length < USERS_PER_PAGE && users.length < totalCount) {\n            const numberOfUsersRemoved = Object.keys(excludeUsers).length;\n            const pagesOfUsersRemoved = Math.floor(numberOfUsersRemoved / USERS_PER_PAGE);\n            const pageToLoad = page + pagesOfUsersRemoved + 1;\n\n            // Directly call action to load more users from parent component to load more users into the state\n            this.props.loadPage(pageToLoad);\n        }\n\n        return usersToDisplay.map((user) => {\n            const membership = membershipsToUpdate[user.id] || memberships[user.id] || this.newMembership(user);\n            return {\n                id: user.id,\n                name: (\n                    <UserGridName\n                        user={user}\n                    />\n                ),\n                new: (\n                    <Badge\n                        className='NewUserBadge'\n                        show={Boolean(includeUsers[user.id])}\n                    >\n                        <FormattedMessage\n                            id='admin.user_grid.new'\n                            defaultMessage='New'\n                        />\n                    </Badge>\n                ),\n                role: (\n                    <UserGridRoleDropdown\n                        user={user}\n                        membership={membership}\n                        handleUpdateMembership={this.updateMembership}\n                        scope={scope}\n                    />\n                ),\n                remove: (\n                    <UserGridRemove\n                        user={user}\n                        removeUser={this.removeUser}\n                    />\n                ),\n            };\n        });\n    }\n\n    private getColumns = (): Column[] => {\n        const name: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.name'\n                defaultMessage='Name'\n            />\n        );\n        const role: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.role'\n                defaultMessage='Role'\n            />\n        );\n\n        return [\n            {\n                name,\n                field: 'name',\n                width: 3,\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'new',\n                fixed: true,\n            },\n            {\n                name: role,\n                field: 'role',\n\n                // Requires overflow visible in order to render dropdown\n                overflow: 'visible',\n            },\n            {\n                name: '',\n                field: 'remove',\n                textAlign: 'right',\n                fixed: true,\n            },\n        ];\n    }\n\n    public render = (): JSX.Element => {\n        const rows: Row[] = this.getRows();\n        const columns: Column[] = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n\n        const placeholderEmpty: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.notFound'\n                defaultMessage='No users found'\n            />\n        );\n\n        const rowsContainerStyles = {\n            minHeight: `${rows.length * ROW_HEIGHT}px`,\n        };\n\n        return (\n            <DataGrid\n                columns={columns}\n                rows={rows}\n                loading={this.state.loading || this.props.loading}\n                page={this.state.page}\n                nextPage={this.nextPage}\n                previousPage={this.previousPage}\n                startCount={startCount}\n                endCount={endCount}\n                total={total}\n                search={this.search}\n                term={this.props.term || ''}\n                placeholderEmpty={placeholderEmpty}\n                rowsContainerStyles={rowsContainerStyles}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport ProfilePicture from 'components/profile_picture';\n\ntype Props = {\n    user: UserProfile;\n}\n\nexport default class UserGridName extends React.Component<Props> {\n    public render = (): JSX.Element => {\n        const {user} = this.props;\n\n        return (\n            <div className='UserGrid_nameRow'>\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                    status={status}\n                    size='md'\n                />\n\n                <div className='UserGrid_name'>\n                    <span>\n                        {`${user.username} - ${user.first_name} ${user.last_name}`}\n                    </span>\n                    <span className='ug-email'>\n                        {user.email}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    user: UserProfile;\n    removeUser: (user: UserProfile) => void;\n}\n\nexport default class UserGridRemove extends React.Component<Props> {\n    public render = (): JSX.Element => {\n        const {user} = this.props;\n        return (\n            <div className='UserGrid_removeRow'>\n                <a\n                    onClick={() => this.props.removeUser(user)}\n                    href='#'\n                    role='button'\n                >\n                    <FormattedMessage\n                        id='admin.user_grid.remove'\n                        defaultMessage='Remove'\n                    />\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nimport DropdownIcon from 'components/widgets/icons/fa_dropdown_icon';\n\nexport type BaseMembership = {\n    user_id: string;\n    scheme_user: boolean;\n    scheme_admin: boolean;\n}\n\ntype Props = {\n    user: UserProfile;\n    membership?: BaseMembership | TeamMembership | ChannelMembership;\n    scope: 'team' | 'channel';\n    handleUpdateMembership: (membership: BaseMembership) => void;\n}\n\nexport type Role = 'system_admin' | 'team_admin' | 'team_user' | 'channel_admin' | 'channel_user' | 'guest';\n\nexport default class UserGridRoleDropdown extends React.Component<Props> {\n    private getDropDownOptions = () => {\n        if (this.props.scope === 'team') {\n            return {\n                makeAdmin: Utils.localizeMessage('team_members_dropdown.makeAdmin', 'Make Team Admin'),\n                makeMember: Utils.localizeMessage('team_members_dropdown.makeMember', 'Make Team Member'),\n            };\n        }\n\n        return {\n            makeAdmin: Utils.localizeMessage('channel_members_dropdown.make_channel_admin', 'Make Channel Admin'),\n            makeMember: Utils.localizeMessage('channel_members_dropdown.make_channel_member', 'Make Channel Member'),\n        };\n    }\n\n    private getCurrentRole = (): Role => {\n        const {user, membership, scope} = this.props;\n\n        if (user.roles.includes('system_admin')) {\n            return 'system_admin';\n        } else if (membership) {\n            if (scope === 'team') {\n                if (membership.scheme_admin) {\n                    return 'team_admin';\n                } else if (membership.scheme_user) {\n                    return 'team_user';\n                }\n            }\n\n            if (scope === 'channel') {\n                if (membership.scheme_admin) {\n                    return 'channel_admin';\n                } else if (membership.scheme_user) {\n                    return 'channel_user';\n                }\n            }\n        }\n\n        return 'guest';\n    }\n\n    private getLocalizedRole = (role: Role) => {\n        switch (role) {\n        case 'system_admin':\n            return Utils.localizeMessage('admin.user_grid.system_admin', 'System Admin');\n        case 'team_admin':\n            return Utils.localizeMessage('admin.user_grid.team_admin', 'Team Admin');\n        case 'team_user':\n            return Utils.localizeMessage('admin.user_grid.team_member', 'Team Member');\n        case 'channel_admin':\n            return Utils.localizeMessage('admin.user_grid.channel_admin', 'Channel Admin');\n        case 'channel_user':\n            return Utils.localizeMessage('admin.user_grid.channel_member', 'Channel Member');\n        default:\n            return Utils.localizeMessage('admin.user_grid.guest', 'Guest');\n        }\n    }\n\n    private handleMakeAdmin = () => {\n        this.props.handleUpdateMembership({\n            user_id: this.props.user.id,\n            scheme_admin: true,\n            scheme_user: true,\n        });\n    }\n\n    private handleMakeUser = () => {\n        this.props.handleUpdateMembership({\n            user_id: this.props.user.id,\n            scheme_admin: false,\n            scheme_user: true,\n        });\n    }\n\n    private getAriaLabel = () => {\n        const {scope} = this.props;\n        if (scope === 'team') {\n            return Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member');\n        }\n        return Utils.localizeMessage('channel_members_dropdown.menuAriaLabel', 'Change the role of channel member');\n    }\n\n    public render = (): JSX.Element | null => {\n        if (!this.props.membership) {\n            return null;\n        }\n\n        const {user} = this.props;\n\n        const {makeAdmin, makeMember} = this.getDropDownOptions();\n        const currentRole = this.getCurrentRole();\n        const localizedRole = this.getLocalizedRole(currentRole);\n        const ariaLabel = this.getAriaLabel();\n\n        const dropdownEnabled = !['system_admin', 'guest'].includes(currentRole);\n        const showMakeAdmin = ['channel_user', 'team_user'].includes(currentRole);\n        const showMakeMember = ['channel_admin', 'team_admin'].includes(currentRole);\n\n        if (!dropdownEnabled) {\n            return localizedRole;\n        }\n\n        return (\n            <MenuWrapper>\n                <button\n                    id={`userGridRoleDropdown_${user.username}`}\n                    className='dropdown-toggle theme color--link style--none'\n                    type='button'\n                    aria-expanded='true'\n                >\n                    <span>{localizedRole} </span>\n                    <DropdownIcon/>\n                </button>\n                <Menu ariaLabel={ariaLabel}>\n                    <Menu.ItemAction\n                        show={showMakeAdmin}\n                        onClick={this.handleMakeAdmin}\n                        text={makeAdmin}\n                    />\n                    <Menu.ItemAction\n                        show={showMakeMember}\n                        onClick={this.handleMakeUser}\n                        text={makeMember}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport Chart from 'chart.js';\n\nimport * as Utils from 'utils/utils.jsx';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: object;\n}\n\nexport default class DoughnutChart extends React.PureComponent<Props> {\n    public chart: Chart | null = null;\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        if (!Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            this.initChart(true);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart && this.refs.canvas) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.refs.canvas) {\n            return;\n        }\n        const el = ReactDOM.findDOMNode(this.refs.canvas) as HTMLCanvasElement;\n        const ctx = el.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'doughnut', data: dataCopy, options: {}});\n        if (update && this.chart) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else {\n            content = (\n                <canvas\n                    ref='canvas'\n                    width={this.props.width}\n                    height={this.props.height}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport function formatChannelDoughtnutData(totalPublic: any, totalPrivate: any) {\n    const channelTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.publicChannels', 'Public Channels'),\n            Utils.localizeMessage('analytics.system.privateGroups', 'Private Channels'),\n        ],\n        datasets: [{\n            data: [totalPublic, totalPrivate],\n            backgroundColor: ['#46BFBD', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FFC870'],\n        }],\n    };\n\n    return channelTypeData;\n}\n\nexport function formatPostDoughtnutData(filePosts: any, hashtagPosts: any, totalPosts: any) {\n    const postTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.totalFilePosts', 'Posts with Files'),\n            Utils.localizeMessage('analytics.system.totalHashtagPosts', 'Posts with Hashtags'),\n            Utils.localizeMessage('analytics.system.textPosts', 'Posts with Text-only'),\n        ],\n        datasets: [{\n            data: [filePosts, hashtagPosts, (totalPosts - filePosts - hashtagPosts)],\n            backgroundColor: ['#46BFBD', '#F7464A', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FF5A5E', '#FFC870'],\n        }],\n    };\n\n    return postTypeData;\n}\n\nexport function formatPostsPerDayData(data: any) {\n    const chartData = {\n        labels: [] as any,\n        datasets: [{\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n\n    for (const index in data) {\n        if (data[index]) {\n            const row = data[index];\n            chartData.labels.push(row.name);\n            chartData.datasets[0].data.push(row.value);\n        }\n    }\n\n    return chartData;\n}\n\n// synchronizeChartData converges on a uniform set of labels for all entries in the given chart data. If a given label wasn't already present in the chart data, a 0-valued data point at that label is added.\n//\n// For date-labelled charts, this ensures that each charts starts and ends on the same interval, even if data for part of that interval was never collected.\nexport function synchronizeChartData(...chartDatas: any[]) {\n    const labels: Set<string> = new Set();\n\n    // collect all labels\n    chartDatas.forEach((chartData) => {\n        chartData.labels.forEach((label: string) => labels.add(label));\n    });\n\n    // fill in missing\n    chartDatas.forEach((chartData) => {\n        if (chartData.labels.length > 0) { // don't add to empty graphs\n            labels.forEach((label: string) => {\n                if (chartData.labels.indexOf(label) === -1) {\n                    chartData.labels.push(label);\n                    chartData.datasets[0].data.push(0);\n                }\n            });\n        }\n    });\n}\n\nexport function formatUsersWithPostsPerDayData(data: any) {\n    const chartData = {\n        labels: [] as any,\n        datasets: [{\n            label: '',\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n\n    for (const index in data) {\n        if (data[index]) {\n            const row = data[index];\n            chartData.labels.push(row.name);\n            chartData.datasets[0].data.push(row.value);\n        }\n    }\n\n    return chartData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport Chart, {ChartOptions} from 'chart.js';\n\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: any;\n}\n\nexport default class LineChart extends React.PureComponent<Props> {\n    public static propTypes = {\n\n        /*\n         * Chart title\n         */\n        title: PropTypes.node.isRequired,\n\n        /*\n         * Chart width\n         */\n        width: PropTypes.number.isRequired,\n\n        /*\n         * Chart height\n         */\n        height: PropTypes.number.isRequired,\n\n        /*\n         * Chart data\n         */\n        data: PropTypes.object,\n    };\n\n    public chart: Chart | null = null;\n    public chartOptions: ChartOptions = {\n        legend: {\n            display: false,\n        },\n    };\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        const currentData = this.props.data && this.props.data.labels.length > 0;\n\n        if (!currentData && this.chart) {\n            // Clean up the rendered chart before we render and destroy its context\n            this.chart.destroy();\n            this.chart = null;\n        }\n\n        if (Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            return;\n        }\n\n        const hasData = this.props.data && this.props.data.labels.length > 0;\n        const hasChart = Boolean(this.chart);\n\n        if (hasData) {\n            // Update the rendered chart or initialize it as necessary\n            this.initChart(hasChart);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.refs.canvas) {\n            return;\n        }\n\n        const el = ReactDOM.findDOMNode(this.refs.canvas) as HTMLCanvasElement;\n        const ctx = el.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy: any = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'line', data: dataCopy, options: this.chartOptions || {}});\n\n        if (update) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else if (this.props.data.labels.length === 0) {\n            content = (\n                <h5>\n                    <FormattedMessage\n                        id='analytics.chart.meaningful'\n                        defaultMessage='Not enough data for a meaningful representation.'\n                    />\n                </h5>\n            );\n        } else {\n            content = (\n                <canvas\n                    ref='canvas'\n                    width={this.props.width}\n                    height={this.props.height}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='total-count by-day'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ReactNode} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title: ReactNode;\n    icon: string;\n    count?: number;\n}\n\nexport default class StatisticCount extends React.PureComponent<Props> {\n    public render(): JSX.Element {\n        const loading = (\n            <FormattedMessage\n                id='analytics.chart.loading'\n                defaultMessage='Loading...'\n            />\n        );\n\n        return (\n            <div className='col-lg-3 col-md-4 col-sm-6'>\n                <div className='total-count'>\n                    <div className='title'>\n                        {this.props.title}\n                        <i className={'fa ' + this.props.icon}/>\n                    </div>\n                    <div className='content'>{typeof this.props.count === 'undefined' || isNaN(this.props.count) ? loading : this.props.count}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport SystemAnalytics from './system_analytics.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    return {\n        isLicensed,\n        stats: state.entities.admin.analytics,\n    };\n}\n\nexport default connect(mapStateToProps)(SystemAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport * as AdminActions from 'actions/admin_actions.jsx';\nimport Constants from 'utils/constants';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport DoughnutChart from '../doughnut_chart';\nimport LineChart from '../line_chart';\nimport StatisticCount from '../statistic_count';\n\nimport {\n    formatPostsPerDayData,\n    formatUsersWithPostsPerDayData,\n    formatChannelDoughtnutData,\n    formatPostDoughtnutData,\n    synchronizeChartData,\n} from '../format';\n\nconst StatTypes = Constants.StatTypes;\n\nexport default class SystemAnalytics extends React.PureComponent {\n    static propTypes = {\n        isLicensed: PropTypes.bool.isRequired,\n        stats: PropTypes.object,\n    }\n\n    componentDidMount() {\n        AdminActions.getStandardAnalytics();\n        AdminActions.getPostsPerDayAnalytics();\n        AdminActions.getBotPostsPerDayAnalytics();\n        AdminActions.getUsersPerDayAnalytics();\n\n        if (this.props.isLicensed) {\n            AdminActions.getAdvancedAnalytics();\n        }\n    }\n\n    render() {\n        const stats = this.props.stats;\n        const isLicensed = this.props.isLicensed;\n        const skippedIntensiveQueries = stats[StatTypes.TOTAL_POSTS] === -1;\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\n        const botPostCountsDay = formatPostsPerDayData(stats[StatTypes.BOT_POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n        synchronizeChartData(postCountsDay, botPostCountsDay, userCountsWithPostsDay);\n\n        let banner;\n        let postCount;\n        let postTotalGraph;\n        let botPostTotalGraph;\n        let activeUserGraph;\n        if (skippedIntensiveQueries) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.skippedIntensiveQueries'\n                            defaultMessage='To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            postCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={stats[StatTypes.TOTAL_POSTS]}\n                />\n            );\n\n            botPostTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalBotPosts'\n                                defaultMessage='Total Posts from Bots'\n                            />\n                        }\n                        data={botPostCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            activeUserGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        let advancedStats;\n        let advancedGraphs;\n        let sessionCount;\n        let commandCount;\n        let incomingCount;\n        let outgoingCount;\n        if (this.props.isLicensed) {\n            sessionCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalSessions'\n                            defaultMessage='Total Sessions'\n                        />\n                    }\n                    icon='fa-signal'\n                    count={stats[StatTypes.TOTAL_SESSIONS]}\n                />\n            );\n\n            commandCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalCommands'\n                            defaultMessage='Total Commands'\n                        />\n                    }\n                    icon='fa-terminal'\n                    count={stats[StatTypes.TOTAL_COMMANDS]}\n                />\n            );\n\n            incomingCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalIncomingWebhooks'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-down'\n                    count={stats[StatTypes.TOTAL_IHOOKS]}\n                />\n            );\n\n            outgoingCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalOutgoingWebhooks'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-up'\n                    count={stats[StatTypes.TOTAL_OHOOKS]}\n                />\n            );\n\n            advancedStats = (\n                <div>\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalWebsockets'\n                                defaultMessage='WebSocket Conns'\n                            />\n                        }\n                        icon='fa-user'\n                        count={stats[StatTypes.TOTAL_WEBSOCKET_CONNECTIONS]}\n                    />\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalMasterDbConnections'\n                                defaultMessage='Master DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={stats[StatTypes.TOTAL_MASTER_DB_CONNECTIONS]}\n                    />\n                    <StatisticCount\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalReadDbConnections'\n                                defaultMessage='Replica DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={stats[StatTypes.TOTAL_READ_DB_CONNECTIONS]}\n                    />\n                </div>\n            );\n\n            const channelTypeData = formatChannelDoughtnutData(stats[StatTypes.TOTAL_PUBLIC_CHANNELS], stats[StatTypes.TOTAL_PRIVATE_GROUPS]);\n            const postTypeData = formatPostDoughtnutData(stats[StatTypes.TOTAL_FILE_POSTS], stats[StatTypes.TOTAL_HASHTAG_POSTS], stats[StatTypes.TOTAL_POSTS]);\n\n            let postTypeGraph;\n            if (stats[StatTypes.TOTAL_POSTS] !== -1) {\n                postTypeGraph = (\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.postTypes'\n                                defaultMessage='Posts, Files and Hashtags'\n                            />\n                        }\n                        data={postTypeData}\n                        width={300}\n                        height={225}\n                    />\n                );\n            }\n\n            advancedGraphs = (\n                <div className='row'>\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.channelTypes'\n                                defaultMessage='Channel Types'\n                            />\n                        }\n                        data={channelTypeData}\n                        width={300}\n                        height={225}\n                    />\n                    {postTypeGraph}\n                </div>\n            );\n        }\n\n        const userCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalUsers'\n                        defaultMessage='Total Active Users'\n                    />\n                }\n                icon='fa-user'\n                count={stats[StatTypes.TOTAL_USERS]}\n            />\n        );\n\n        const teamCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalTeams'\n                        defaultMessage='Total Teams'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.TOTAL_TEAMS]}\n            />\n        );\n\n        const channelCount = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalChannels'\n                        defaultMessage='Total Channels'\n                    />\n                }\n                icon='fa-globe'\n                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS] + stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\n            />\n        );\n\n        const dailyActiveUsers = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.dailyActiveUsers'\n                        defaultMessage='Daily Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.DAILY_ACTIVE_USERS]}\n            />\n        );\n\n        const monthlyActiveUsers = (\n            <StatisticCount\n                title={\n                    <FormattedMessage\n                        id='analytics.system.monthlyActiveUsers'\n                        defaultMessage='Monthly Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={stats[StatTypes.MONTHLY_ACTIVE_USERS]}\n            />\n        );\n\n        let firstRow;\n        let secondRow;\n        if (isLicensed && skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {sessionCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (isLicensed && !skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {sessionCount}\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (!isLicensed) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n        }\n\n        const thirdRow = (\n            <div>\n                {dailyActiveUsers}\n                {monthlyActiveUsers}\n            </div>\n        );\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <FormattedAdminHeader\n                    id='analytics.system.title'\n                    defaultMessage='System Statistics'\n                />\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            {firstRow}\n                            {secondRow}\n                            {thirdRow}\n                            {advancedStats}\n                        </div>\n                        {advancedGraphs}\n                        {postTotalGraph}\n                        {botPostTotalGraph}\n                        {activeUserGraph}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Tooltip} from 'react-bootstrap';\n\nimport OverlayTrigger from 'components/overlay_trigger';\n\nimport Constants from 'utils/constants';\n\ntype TableItem = {\n    name: string;\n    tip: string;\n    value: React.ReactNode;\n}\ntype Props = {\n    title: React.ReactNode;\n    data: TableItem[];\n}\n\nexport default class TableChart extends React.PureComponent<Props> {\n    public render() {\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count recent-active-users'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        <table>\n                            <tbody>\n                                {\n                                    this.props.data.map((item) => {\n                                        const tooltip = (\n                                            <Tooltip id={'tip-table-entry-' + item.name}>\n                                                {item.tip}\n                                            </Tooltip>\n                                        );\n\n                                        return (\n                                            <tr key={'table-entry-' + item.name}>\n                                                <td>\n                                                    <OverlayTrigger\n                                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                                        placement='top'\n                                                        overlay={tooltip}\n                                                    >\n                                                        <time>\n                                                            {item.name}\n                                                        </time>\n                                                    </OverlayTrigger>\n                                                </td>\n                                                <td>\n                                                    {item.value}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {getProfilesInTeam} from 'mattermost-redux/actions/users';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\n\nimport BrowserStore from 'stores/browser_store.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport TeamAnalytics from './team_analytics.jsx';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nfunction mapStateToProps(state) {\n    const teams = getTeamsList(state);\n    const teamId = BrowserStore.getGlobalItem(LAST_ANALYTICS_TEAM, null);\n    const initialTeam = state.entities.teams.teams[teamId] || (teams.length > 0 ? teams[0] : null);\n\n    return {\n        initialTeam,\n        locale: getCurrentLocale(state),\n        teams,\n        stats: state.entities.admin.teamAnalytics,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getProfilesInTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage} from 'react-intl';\nimport {General} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport * as AdminActions from 'actions/admin_actions';\nimport BrowserStore from 'stores/browser_store';\nimport {StatTypes} from 'utils/constants';\nimport Banner from 'components/admin_console/banner';\nimport LineChart from 'components/analytics/line_chart';\nimport StatisticCount from 'components/analytics/statistic_count';\nimport TableChart from 'components/analytics/table_chart';\n\nimport {getMonthLong} from 'utils/i18n';\n\nimport {formatPostsPerDayData, formatUsersWithPostsPerDayData} from '../format';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nexport default class TeamAnalytics extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of team objects\n         */\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /*\n         * Initial team to load analytics for\n         */\n        initialTeam: PropTypes.object,\n\n        /**\n         * The locale of the current user\n          */\n        locale: PropTypes.string.isRequired,\n        stats: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get teams\n             */\n            getTeams: PropTypes.func.isRequired,\n\n            /*\n             * Function to get users in a team\n             */\n            getProfilesInTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: props.initialTeam,\n            recentlyActiveUsers: [],\n            newUsers: [],\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.team) {\n            this.getData(this.state.team.id);\n        }\n\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.team && prevState.team !== this.state.team) {\n            this.getData(this.state.team.id);\n        }\n    }\n\n    getData = async (id) => {\n        AdminActions.getStandardAnalytics(id);\n        AdminActions.getPostsPerDayAnalytics(id);\n        AdminActions.getBotPostsPerDayAnalytics(id);\n        AdminActions.getUsersPerDayAnalytics(id);\n        const {data: recentlyActiveUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'last_activity_at');\n        const {data: newUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'create_at');\n\n        this.setState({\n            recentlyActiveUsers,\n            newUsers,\n        });\n    }\n\n    handleTeamChange = (e) => {\n        const teamId = e.target.value;\n\n        let team;\n        this.props.teams.forEach((t) => {\n            if (t.id === teamId) {\n                team = t;\n            }\n        });\n\n        this.setState({\n            team,\n        });\n\n        BrowserStore.setGlobalItem(LAST_ANALYTICS_TEAM, teamId);\n    }\n\n    render() {\n        if (this.props.teams.length === 0 || !this.state.team || !this.props.stats[this.state.team.id]) {\n            return <LoadingScreen/>;\n        }\n\n        if (this.state.team == null) {\n            return (\n                <Banner\n                    description={\n                        <FormattedMessage\n                            id='analytics.team.noTeams'\n                            defaultMessage='This server has no teams for which to view statistics.'\n                        />\n                    }\n                />\n            );\n        }\n\n        const stats = this.props.stats[this.state.team.id];\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n\n        let banner = (\n            <div className='banner'>\n                <div className='banner__content'>\n                    <FormattedMessage\n                        id='analytics.system.info'\n                        defaultMessage='Use data for only the chosen team. Exclude posts in direct message channels that are not tied to a team.'\n                    />\n                </div>\n            </div>\n        );\n\n        let totalPostsCount;\n        let postTotalGraph;\n        let userActiveGraph;\n        if (stats[StatTypes.TOTAL_POSTS] === -1) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.infoAndSkippedIntensiveQueries'\n                            defaultMessage='Use data for only the chosen team. Exclude posts in direct message channels that are not tied to a team. \\n \\n To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            totalPostsCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.team.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={stats[StatTypes.TOTAL_POSTS]}\n                />\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            userActiveGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        const recentActiveUsers = formatRecentUsersData(this.state.recentlyActiveUsers, this.props.locale);\n        const newlyCreatedUsers = formatNewUsersData(this.state.newUsers, this.props.locale);\n\n        const teams = this.props.teams.sort((a, b) => {\n            const aName = a.display_name.toUpperCase();\n            const bName = b.display_name.toUpperCase();\n            if (aName === bName) {\n                return 0;\n            }\n            if (aName > bName) {\n                return 1;\n            }\n            return -1;\n        }).map((team) => {\n            return (\n                <option\n                    key={team.id}\n                    value={team.id}\n                >\n                    {team.display_name}\n                </option>\n            );\n        });\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <div className='admin-console__header team-statistics__header-row'>\n                    <div className='team-statistics__header'>\n                        <FormattedMarkdownMessage\n                            id='analytics.team.title'\n                            defaultMessage='Team Statistics for {team}'\n                            values={{\n                                team: this.state.team.display_name,\n                            }}\n                        />\n                    </div>\n                    <div className='team-statistics__team-filter'>\n                        <select\n                            className='form-control team-statistics__team-filter__dropdown'\n                            onChange={this.handleTeamChange}\n                            value={this.state.team.id}\n                        >\n                            {teams}\n                        </select>\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.totalUsers'\n                                        defaultMessage='Total Active Users'\n                                    />\n                                }\n                                icon='fa-users'\n                                count={stats[StatTypes.TOTAL_USERS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.publicChannels'\n                                        defaultMessage='Public Channels'\n                                    />\n                                }\n                                icon='fa-globe'\n                                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.privateGroups'\n                                        defaultMessage='Private Channels'\n                                    />\n                                }\n                                icon='fa-lock'\n                                count={stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\n                            />\n                            {totalPostsCount}\n                        </div>\n                        {postTotalGraph}\n                        {userActiveGraph}\n                        <div className='row'>\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.recentUsers'\n                                        defaultMessage='Recent Active Users'\n                                    />\n                                }\n                                data={recentActiveUsers}\n                            />\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.newlyCreated'\n                                        defaultMessage='Newly Created Users'\n                                    />\n                                }\n                                data={newlyCreatedUsers}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport function formatRecentUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.last_activity_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n\nexport function formatNewUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.create_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport {localizeMessage, compareChannels} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst CHANNELS_PER_PAGE = 50;\n\nexport default class ChannelSelectorModal extends React.PureComponent {\n    static propTypes = {\n        searchTerm: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func,\n        onChannelsSelected: PropTypes.func,\n        groupID: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            loadChannels: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            searchChannels: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            loadingChannels: true,\n            channels: [],\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, false).then((response) => {\n            this.setState({channels: response.data.sort(compareChannels)});\n            this.setChannelsLoadingState(false);\n        });\n    }\n\n    componentDidUpdate(prevProps) { // eslint-disable-line camelcase\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, false).then((response) => {\n                    this.setState({channels: response.data.sort(compareChannels)});\n                    this.setChannelsLoadingState(false);\n                });\n            } else {\n                this.searchTimeoutId = setTimeout(\n                    async () => {\n                        this.setChannelsLoadingState(true);\n                        const response = await this.props.actions.searchChannels(searchTerm, this.props.groupID, true);\n                        this.setState({channels: response.data});\n                        this.setChannelsLoadingState(false);\n                    },\n                    Constants.SEARCH_TIMEOUT_MILLISECONDS,\n                );\n            }\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        this.props.onChannelsSelected(this.state.values);\n        this.handleHide();\n    }\n\n    addValue = (value) => {\n        const values = Object.assign([], this.state.values);\n        if (value && value.id && values.findIndex((v) => v.id === value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    setChannelsLoadingState = (loadingState) => {\n        this.setState({\n            loadingChannels: loadingState,\n        });\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setChannelsLoadingState(true);\n            this.props.actions.loadChannels(page, CHANNELS_PER_PAGE + 1, this.props.groupID, true).then((response) => {\n                const newState = [...this.state.channels];\n                const stateChannelIDs = this.state.channels.map((stateChannel) => stateChannel.id);\n                response.data.forEach((serverChannel) => {\n                    if (!stateChannelIDs.includes(serverChannel.id)) {\n                        newState.push(serverChannel);\n                    }\n                });\n                this.setState({channels: newState.sort(compareChannels)});\n                this.setChannelsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    search = (term, multiselectComponent) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption(option, isSelected, onAdd, onMouseMove) {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    {option.type === 'P' &&\n                        <i className='icon icon-globe'/>}\n                    {option.type === 'O' &&\n                        <i className='icon icon-lock-outline'/>}\n                    <span className='channel-name'>{option.display_name}</span>\n                    <span className='team-name'>{'(' + option.team_display_name + ')'}</span>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.display_name + ' (' + props.data.team_display_name + ')';\n    }\n\n    render() {\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectChannels'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        return (\n            <Modal\n                dialogClassName={'a11y__modal more-modal more-direct-channels channel-selector-modal'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='channelSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='channelSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_channels_to_scheme.title'\n                            defaultMessage='Add Channels to **Channel Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MultiSelect\n                        key='addChannelsToSchemeKey'\n                        options={this.state.channels}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={CHANNELS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingChannels}\n                        placeholderText={localizeMessage('multiselect.addChannelsPlaceholder', 'Search and add channels')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getAllChannels as loadChannels, searchAllChannels} from 'mattermost-redux/actions/channels';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport ChannelSelectorModal from './channel_selector_modal.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        searchTerm: state.views.search.modalSearch,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadChannels,\n            setModalSearchTerm,\n            searchChannels: searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal';\n\ntype Props = {\n    show: boolean;\n    onConfirm: (checked: boolean) => void;\n    onCancel: (checked: boolean) => void;\n}\n\nexport default class DiscardChangesModal extends React.PureComponent<Props> {\n    public render(): JSX.Element {\n        const title: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.title'\n                defaultMessage='Discard Changes?'\n            />\n        );\n\n        const message: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.message'\n                defaultMessage='You have unsaved changes, are you sure you want to discard them?'\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.leave'\n                defaultMessage='Yes, Discard'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams as loadTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport TeamSelectorModal from './team_selector_modal.jsx';\n\nfunction mapStateToProps(state) {\n    const searchTerm = state.views.search.modalSearch;\n\n    const teams = Object.values(getTeams(state) || {}).filter((team) => {\n        return team.display_name.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n               team.description.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n\n    return {\n        searchTerm,\n        teams,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTeams,\n            setModalSearchTerm,\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants, {ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect';\nimport ConfirmModal from 'components/confirm_modal';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {imageURLForTeam} from 'utils/utils';\n\nconst TEAMS_PER_PAGE = 50;\n\nexport default class TeamSelectorModal extends React.PureComponent {\n    static propTypes = {\n        currentSchemeId: PropTypes.string,\n        alreadySelected: PropTypes.array,\n        searchTerm: PropTypes.string.isRequired,\n        teams: PropTypes.array.isRequired,\n        onModalDismissed: PropTypes.func,\n        onTeamsSelected: PropTypes.func,\n        modalID: PropTypes.string,\n        actions: PropTypes.shape({\n            loadTeams: PropTypes.func.isRequired,\n            setModalSearchTerm: PropTypes.func.isRequired,\n            searchTeams: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            loadingTeams: true,\n            confirmAddModal: false,\n            confirmAddTeam: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadTeams(0, TEAMS_PER_PAGE + 1).then(() => {\n            this.setTeamsLoadingState(false);\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.searchTerm !== prevProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                return;\n            }\n\n            this.searchTimeoutId = setTimeout(\n                async () => {\n                    this.setTeamsLoadingState(true);\n                    await this.props.actions.searchTeams(searchTerm);\n                    this.setTeamsLoadingState(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        this.props.onTeamsSelected(this.state.values);\n        this.handleHide();\n    }\n\n    addValue = (value, confirmed = false) => {\n        if (this.props.modalID === ModalIdentifiers.ADD_TEAMS_TO_SCHEME && value.scheme_id !== null && value.scheme_id !== '' && !confirmed) {\n            this.setState({confirmAddModal: true, confirmAddTeam: value});\n            return;\n        }\n        const values = Object.assign([], this.state.values);\n        const teamIds = values.map((v) => v.id);\n        if (value && value.id && teamIds.indexOf(value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values, confirmAddModal: false, confirmAddTeam: null});\n    }\n\n    setTeamsLoadingState = (loadingState) => {\n        this.setState({\n            loadingTeams: loadingState,\n        });\n    }\n\n    handlePageChange = (page, prevPage) => {\n        if (page > prevPage) {\n            this.setTeamsLoadingState(true);\n            this.props.actions.loadTeams(page, TEAMS_PER_PAGE + 1).then(() => {\n                this.setTeamsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values) => {\n        this.setState({values});\n    }\n\n    search = (term, multiselectComponent) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption(option, isSelected, onAdd, onMouseMove) {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='team-info-block'>\n                        <TeamIcon\n                            name={option.display_name}\n                            url={imageURLForTeam(option)}\n                        />\n                        <div className='team-data'>\n                            <div className='title'>{option.display_name}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props) {\n        return props.data.display_name;\n    }\n\n    renderConfirmModal(show, team) {\n        const title = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.title'\n                defaultMessage='Team Override Scheme Change?'\n            />\n        );\n        const message = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.message'\n                defaultMessage='This team is already selected in another team scheme, are you sure you want to move it to this team scheme?'\n            />\n        );\n        const confirmButtonText = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.accept'\n                defaultMessage='Yes, Move Team'\n            />\n        );\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButtonText}\n                onCancel={() => this.setState({confirmAddModal: false, confirmAddTeam: null})}\n                onConfirm={() => this.addValue(team, true)}\n            />\n        );\n    }\n\n    render() {\n        const confirmModal = this.renderConfirmModal(this.state.confirmAddModal, this.state.confirmAddTeam);\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectTeams'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        let teams = [];\n        if (this.props.teams) {\n            teams = this.props.teams.filter((team) => team.delete_at === 0);\n            teams = teams.filter((team) => team.scheme_id !== this.currentSchemeId);\n            teams = teams.filter((team) => this.props.alreadySelected.indexOf(team.id) === -1);\n            teams.sort((a, b) => {\n                const aName = a.display_name.toUpperCase();\n                const bName = b.display_name.toUpperCase();\n                if (aName === bName) {\n                    return 0;\n                }\n                if (aName > bName) {\n                    return 1;\n                }\n                return -1;\n            });\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal more-modal more-direct-channels team-selector-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='teamSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='teamSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_teams_to_scheme.title'\n                            defaultMessage='Add Teams to **Team Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {confirmModal}\n                    <MultiSelect\n                        key='addTeamsToSchemeKey'\n                        options={teams}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={TEAMS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingTeams}\n                        placeholderText={localizeMessage('multiselect.addTeamsPlaceholder', 'Search and add teams')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    onToggle: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    toggled?: boolean;\n    disabled?: boolean;\n    onText?: React.ReactNode;\n    offText?: React.ReactNode;\n}\n\nconst Toggle: React.FC<Props> = (props: Props) => {\n    const {onToggle, toggled, disabled, onText, offText} = props;\n    return (\n        <button\n            type='button'\n            onClick={onToggle}\n            className={`btn btn-lg btn-toggle ${toggled && 'active'} ${disabled && 'disabled'}`}\n            aria-pressed={toggled ? 'true' : 'false'}\n        >\n            <div className='handle'/>\n            {text(toggled, onText, offText)}\n        </button>\n    );\n};\n\nfunction text(toggled?: boolean, onText?: React.ReactNode, offText?: React.ReactNode): React.ReactNode | null {\n    if ((toggled && !onText) || (!toggled && !offText)) {\n        return null;\n    }\n    return (<div className={`bg-text ${toggled ? 'on' : 'off'}`}>{toggled ? onText : offText}</div>);\n}\n\nexport default Toggle;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport UserListRow from './user_list_row_with_error.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const user = ownProps.user || {};\n    return {\n        status: getStatusForUserId(state, user.id),\n    };\n}\n\nexport default connect(mapStateToProps)(UserListRow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport BotBadge from 'components/widgets/badges/bot_badge';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport default class UserListRowWithError extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.object.isRequired,\n        status: PropTypes.string,\n        extraInfo: PropTypes.array,\n        actions: PropTypes.arrayOf(PropTypes.func),\n        actionProps: PropTypes.object,\n        actionUserProps: PropTypes.object,\n        index: PropTypes.number,\n        totalUsers: PropTypes.number,\n        userCount: PropTypes.number,\n    };\n\n    static defaultProps = {\n        extraInfo: [],\n        actions: [],\n        actionProps: {},\n        actionUserProps: {},\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onError = (errorObj) => {\n        this.setState({\n            error: errorObj,\n        });\n    }\n\n    render() {\n        let buttons = null;\n        if (this.props.actions) {\n            buttons = this.props.actions.map((Action, index) => {\n                return (\n                    <Action\n                        key={index.toString()}\n                        user={this.props.user}\n                        index={this.props.index}\n                        totalUsers={this.props.totalUsers}\n                        {...this.props.actionProps}\n                        {...this.props.actionUserProps}\n                        onError={this.onError}\n                    />\n                );\n            });\n        }\n\n        // QUICK HACK, NEEDS A PROP FOR TOGGLING STATUS\n        let email = this.props.user.email;\n        let emailStyle = 'more-modal__description';\n        let status;\n        if (this.props.user.is_bot) {\n            email = null;\n        } else if (this.props.extraInfo && this.props.extraInfo.length > 0) {\n            email = (\n                <FormattedMarkdownMessage\n                    id='admin.user_item.emailTitle'\n                    defaultMessage='**Email:** {email}'\n                    values={{\n                        email: this.props.user.email,\n                    }}\n                />\n            );\n            emailStyle = '';\n        } else if (this.props.user.status) {\n            status = this.props.user.status;\n        } else {\n            status = this.props.status;\n        }\n\n        if (this.props.user.is_bot) {\n            status = null;\n        }\n\n        let userCountID = null;\n        let userCountEmail = null;\n        if (this.props.userCount >= 0) {\n            userCountID = Utils.createSafeId('userListRowName' + this.props.userCount);\n            userCountEmail = Utils.createSafeId('userListRowEmail' + this.props.userCount);\n        }\n\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='has-error'>\n                    <label className='has-error control-label'>{this.state.error.message}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                data-testid='userListRow'\n                key={this.props.user.id}\n                className='more-modal__row'\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\n                    status={status}\n                    size='md'\n                />\n                <div className='more-modal__right'>\n                    <div className='more-modal__top'>\n                        <div className='more-modal__details'>\n                            <div\n                                id={userCountID}\n                                className='more-modal__name'\n                            >\n                                <Link to={'/admin_console/user_management/user/' + this.props.user.id}>{Utils.displayEntireNameForUser(this.props.user)}</Link>\n                                <BotBadge\n                                    className='badge-admin'\n                                    show={Boolean(this.props.user.is_bot)}\n                                />\n                            </div>\n                            <div\n                                id={userCountEmail}\n                                className={emailStyle}\n                            >\n                                {email}\n                            </div>\n                            {this.props.extraInfo}\n                        </div>\n                        <div\n                            className='more-modal__actions'\n                        >\n                            {buttons}\n                        </div>\n                    </div>\n                    <div\n                        className='more-modal__bottom'\n                    >\n                        {error}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    children: JSX.Element[] | JSX.Element | string;\n};\n\nexport default class AdminHeader extends React.PureComponent<Props> {\n    public render() {\n        return (\n            <div className={'admin-console__header'}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_panel.scss\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport './admin_panel.scss';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\ntype Props = {\n    id?: string;\n    className?: string;\n    onHeaderClick?: React.EventHandler<React.MouseEvent>;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    subtitleValues?: any;\n    button?: React.ReactNode;\n    children?: React.ReactNode;\n};\n\nconst AdminPanel: React.FC<Props> = (props: Props) => (\n    <div\n        className={'AdminPanel ' + props.className}\n        id={props.id}\n    >\n        <div\n            className='header'\n            onClick={props.onHeaderClick}\n        >\n            <div>\n                <h3>\n                    <FormattedMessage\n                        id={props.titleId}\n                        defaultMessage={props.titleDefault}\n                    />\n                </h3>\n                <div className='mt-2'>\n                    <FormattedMarkdownMessage\n                        id={props.subtitleId}\n                        defaultMessage={props.subtitleDefault}\n                        values={props.subtitleValues}\n                    />\n                </div>\n            </div>\n            {props.button &&\n                <div className='button'>\n                    {props.button}\n                </div>\n            }\n        </div>\n        {props.children}\n    </div>\n);\n\nAdminPanel.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanel;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport AccordionToggleIcon from 'components/widgets/icons/accordion_toggle_icon.jsx';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    open: boolean;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onToggle?: React.EventHandler<React.MouseEvent>;\n};\n\nconst AdminPanelTogglable: React.FC<Props> = (props: Props) => {\n    return (\n        <AdminPanel\n            className={'AdminPanelTogglable ' + props.className + (props.open ? '' : ' closed')}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            onHeaderClick={props.onToggle}\n            button={<AccordionToggleIcon/>}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelTogglable.defaultProps = {\n    className: '',\n    open: true,\n};\n\nexport default AdminPanelTogglable;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onButtonClick?: React.EventHandler<React.MouseEvent>;\n    disabled?: boolean;\n    buttonTextId?: string;\n    buttonTextDefault?: string;\n}\n\nconst AdminPanelWithButton: React.FC<Props> = (props: Props) => {\n    let button;\n    if (props.onButtonClick && props.buttonTextId) {\n        const buttonId = (props.buttonTextDefault || '').split(' ').join('-').toLowerCase();\n        button = (\n            <a\n                className='btn btn-primary'\n                onClick={props.disabled ? (e) => e.preventDefault() : props.onButtonClick}\n                data-testid={buttonId}\n            >\n                <FormattedMessage\n                    id={props.buttonTextId}\n                    defaultMessage={props.buttonTextDefault}\n                />\n            </a>\n        );\n    }\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithButton ' + props.className}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithButton.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    url: string;\n    disabled: boolean;\n    linkTextId: string;\n    linkTextDefault: string;\n}\n\nconst AdminPanelWithLink = (props: Props) => {\n    const button = (\n        <Link\n            data-testid={`${props.id}-link`}\n            className='btn btn-primary'\n            to={props.url}\n            onClick={props.disabled ? (e) => e.preventDefault() : () => null}\n        >\n            <FormattedMessage\n                id={props.linkTextId}\n                defaultMessage={props.linkTextDefault}\n            />\n        </Link>\n    );\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithLink ' + props.className}\n            id={props.id}\n            data-testid={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithLink.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from './admin_header';\n\ntype Props = {\n    id: string;\n    defaultMessage: string;\n    values?: any;\n};\n\nconst FormattedAdminHeader: React.FC<Props> = (props: Props) => (\n    <AdminHeader>\n        <FormattedMarkdownMessage\n            id={props.id}\n            defaultMessage={props.defaultMessage}\n            values={props.values}\n        />\n    </AdminHeader>\n);\n\nFormattedAdminHeader.defaultProps = {\n    values: {},\n};\n\nexport default FormattedAdminHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class AccordionToggleIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='30px'\n                    height='30px'\n                    viewBox='0 0 30 30'\n                >\n                    <g\n                        id='Developer-Export'\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='none'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-995.000000, -1372.000000)'\n                            id='All-Team-Members'\n                        >\n                            <g transform='translate(245.000000, 698.000000)'>\n                                <g\n                                    id='Team-Administrators'\n                                    transform='translate(0.000000, 651.000000)'\n                                >\n                                    <g id='accordion-header'>\n                                        <g\n                                            id='accordion---expanded'\n                                            transform='translate(750.000000, 23.000000)'\n                                        >\n                                            <path\n                                                d='M23.1484532,13.3124932 C23.3437659,13.1171805 23.3437659,12.7968676 23.1484532,12.6015549 L21.8515766,11.3124908 C21.6562639,11.1171781 21.3437635,11.1171781 21.1484508,11.3124908 L15.0000083,17.4609333 L8.8515659,11.3124908 C8.65625317,11.1171781 8.34375279,11.1171781 8.14844006,11.3124908 L6.85156352,12.6015549 C6.65625078,12.7968676 6.65625078,13.1171805 6.85156352,13.3124932 L14.6484454,21.1015626 C14.8437582,21.2968754 15.1562585,21.2968754 15.3515713,21.1015626 L23.1484532,13.3124932 Z'\n                                                id=''\n                                                fill='#979797'\n                                            />\n                                            <circle\n                                                id='Oval-2'\n                                                stroke='#989898'\n                                                strokeWidth='2'\n                                                cx='15'\n                                                cy='15'\n                                                r='14'\n                                            />\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class AtIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxCheckedIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-285.000000, -933.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---Public-Channels'\n                                        transform='translate(12.000000, 35.000000)'\n                                    >\n                                        <g\n                                            id='Stacked-Group'\n                                            transform='translate(0.000000, 5.000000)'\n                                        >\n                                            <g id='data-table/1st/row-checkbox-label-base'>\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\n                                                        id='checkbox---checked'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxPartialIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-298.000000, -1273.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---@all-@channel-Mentions'\n                                        transform='translate(0.000000, 375.000000)'\n                                    >\n                                        <g id='Stacked-Group'>\n                                            <g\n                                                id='data-table/1st/row-checkbox-label-base'\n                                                transform='translate(25.000000, 5.000000)'\n                                            >\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 C20.1,3 21,3.9 21,5 L21,19 C21,20.1 20.1,21 19,21 L5,21 C3.9,21 3,20.1 3,19 L3,5 C3,3.9 3.9,3 5,3 L19,3 Z M7,11 L7,13 L17,13 L17,11 L7,11 Z'\n                                                        id='checkbox---partial'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class EllipsisHorizontalIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <FormattedMessage\n                    id='generic_icons.elipsisHorizontalIcon'\n                    defaultMessage='Ellipsis Horizontal Icon'\n                >\n                    {(ariaLabel) => (\n                        <svg\n                            width='24px'\n                            height='24px'\n                            viewBox='0 0 24 24'\n                            role='img'\n                            aria-label={ariaLabel}\n                        >\n                            <path d='M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z'/>\n                        </svg>\n                    )}\n                </FormattedMessage>\n            </span>\n        );\n    }\n}","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class EmailIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class NextIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.next'), defaultMessage: 'Next Icon'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class PreviousIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.previous'), defaultMessage: 'Previous Icon'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class ReloadIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.reload'\n                defaultMessage='Reload Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-refresh'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class ShieldOutlineIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,21C15.75,20 19,15.54 19,11.22V6.3L12,3.18L5,6.3V11.22C5,15.54 8.25,20 12,21Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/a796f0caf8335d94802fbbb43d8a72b3.png\";","module.exports = __webpack_public_path__ + \"files/0c42057ffb71498f8932cf46d37a8f31.png\";","module.exports = __webpack_public_path__ + \"files/5d0940694e511e6743bddcaebde20cbb.png\";","module.exports = __webpack_public_path__ + \"files/630b6e1e454dd63d91507d3b7b815ee9.png\";","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AdminButtonOutline.btn.btn-primary {\\n  background-color: transparent !important;\\n  border: solid 1px #165DBA !important;\\n  color: #165DBA;\\n  margin-right: 8px; }\\n  .AdminButtonOutline.btn.btn-primary:hover, .AdminButtonOutline.btn.btn-primary:active, .AdminButtonOutline.btn.btn-primary:focus, .AdminButtonOutline.btn.btn-primary:active:focus {\\n    color: #165DBA; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AdminUserCard {\\n  border-radius: 2px;\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  margin: 2em 0 1em;\\n  padding: 0; }\\n\\n.AdminUserCard__header {\\n  align-items: flex-start;\\n  background-color: #295EB9;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 30px 20px 12px 30px;\\n  height: 92px; }\\n\\n.AdminUserCard__header .Avatar.Avatar-xxl {\\n  border: solid 2px #fff; }\\n\\n.AdminUserCard__body {\\n  padding: 12px 20px 20px 178px;\\n  background-color: #fff; }\\n\\n.AdminUserCard__footer {\\n  padding: 20px;\\n  background-color: #fff;\\n  border-top: solid 1px rgba(0, 0, 0, 0.2); }\\n\\n.AdminUserCard__user-info {\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: normal;\\n  margin-left: 20px;\\n  padding: 0;\\n  align-self: flex-end; }\\n\\n.AdminUserCard__user-nickname {\\n  opacity: .5; }\\n\\n.AdminUserCard__user-id {\\n  color: #fff;\\n  font-size: 12px;\\n  margin-left: auto;\\n  align-self: flex-end;\\n  opacity: .5; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".DataGrid {\\n  width: 100%;\\n  padding: 2rem 2rem 2rem 2rem;\\n  background: whitesmoke; }\\n  .DataGrid .DataGrid_search {\\n    height: 48px;\\n    background: white;\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n    .DataGrid .DataGrid_search .DataGrid_searchBar {\\n      display: flex;\\n      position: relative;\\n      height: 32px;\\n      width: 300px;\\n      border: 1px solid rgba(61, 60, 64, 0.2);\\n      box-sizing: border-box;\\n      border-radius: 4px;\\n      margin-left: 8px; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar input {\\n        border: 0px;\\n        margin-left: 32px;\\n        margin-right: 16px;\\n        font-size: .95em;\\n        width: 100%; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar input:focus {\\n        outline: none; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar .DataGrid_searchIcon {\\n        top: 6px;\\n        left: 9px;\\n        position: absolute;\\n        pointer-events: none;\\n        fill: var(--center-channel-color-56); }\\n  .DataGrid .DataGrid_header {\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n  .DataGrid .DataGrid_rows {\\n    display: flex;\\n    flex-direction: column;\\n    background: rgba(255, 255, 255, 0.5); }\\n    .DataGrid .DataGrid_rows .DataGrid_loading {\\n      margin: auto;\\n      font-size: 1.6rem;\\n      color: rgba(0, 0, 0, 0.3);\\n      padding-top: 20px;\\n      padding-bottom: 20px; }\\n    .DataGrid .DataGrid_rows .DataGrid_empty {\\n      font-size: 1.6rem;\\n      width: 100%;\\n      padding-top: 20px;\\n      padding-bottom: 20px;\\n      color: rgba(0, 0, 0, 0.3);\\n      text-align: center; }\\n    .DataGrid .DataGrid_rows .DataGrid_row {\\n      min-height: 50px; }\\n      .DataGrid .DataGrid_rows .DataGrid_row:nth-child(odd) {\\n        background: whitesmoke; }\\n      .DataGrid .DataGrid_rows .DataGrid_row .DataGrid_cell {\\n        margin: auto;\\n        text-overflow: ellipsis;\\n        padding-right: 10px;\\n        overflow: hidden;\\n        white-space: nowrap; }\\n  .DataGrid .DataGrid_row, .DataGrid .DataGrid_header {\\n    display: flex;\\n    flex-direction: row;\\n    padding-left: 20px;\\n    height: auto; }\\n    .DataGrid .DataGrid_row .DataGrid_cell, .DataGrid .DataGrid_header .DataGrid_cell {\\n      flex-basis: 100%;\\n      flex: 1 0; }\\n  .DataGrid .DataGrid_footer {\\n    text-align: right; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".FeatureDiscovery {\\n  background: var(--center-channel-bg);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 8px;\\n  padding: 20px;\\n  font-family: Open Sans;\\n  font-style: normal;\\n  font-weight: normal;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(440px, 1fr)); }\\n\\n.FeatureDiscovery_imageWrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.FeatureDiscovery_copyWrapper,\\n.FeatureDiscovery_imageWrapper {\\n  grid-template-columns: repeat(2, 1fr);\\n  padding: 20px; }\\n\\n.FeatureDiscovery_image {\\n  height: 220px; }\\n\\n.FeatureDiscovery_title {\\n  font-size: 24px;\\n  line-height: 32px;\\n  padding-bottom: 24px; }\\n\\n.FeatureDiscovery_copy {\\n  font-size: 14px;\\n  line-height: 20px;\\n  padding-bottom: 24px; }\\n\\n.FeatureDiscovery .btn {\\n  margin-right: 24px;\\n  width: 160px; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".SystemUserDetail__field-label {\\n  font-size: 12px;\\n  display: block;\\n  font-weight: bold;\\n  margin-top: 12px;\\n  margin-bottom: 4px; }\\n\\n.SystemUserDetail__input {\\n  display: inline-block;\\n  height: 40px;\\n  max-width: 320px; }\\n\\n.SystemUserDetail .add-team-button {\\n  position: relative;\\n  margin-left: 10px; }\\n\\n.SystemUserDetail .team-btn__content {\\n  opacity: 1; }\\n\\n.SystemUserDetail__field-text {\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__field-icon {\\n  width: 16px;\\n  height: 16px;\\n  fill: rgba(61, 60, 64, 0.6);\\n  margin: 0 8px 0 0;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__error {\\n  padding-top: 8px;\\n  padding-left: 15px; }\\n\\n.SystemUserDetail__actions-menu-icon svg {\\n  color: #333;\\n  width: 18px; }\\n\\n.SystemUserDetail .MenuItem .SystemUserDetail__action-remove-team {\\n  color: #8B0008; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".AbstractList {\\n  -webkit-transition: all 0.4s ease-in-out;\\n  -webkit-transition-delay: 0s;\\n  -moz-transition: all 0.4s ease-in-out 0s;\\n  -o-transition: all 0.4s ease-in-out 0s;\\n  transition: all 0.4s ease-in-out 0s;\\n  padding: 1rem 2rem 2rem 2rem; }\\n  .AbstractList .AbstractList__header {\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n    .AbstractList .AbstractList__header .AbstractList__header-label {\\n      display: inline-block; }\\n  .AbstractList .AbstractList__body {\\n    background: whitesmoke; }\\n    .AbstractList .AbstractList__body .AbstractList__loading {\\n      text-align: center;\\n      padding: 40px; }\\n    .AbstractList .AbstractList__body .AbstractList__empty {\\n      text-align: center;\\n      margin-top: 1rem;\\n      font-size: 1.6rem;\\n      background: rgba(255, 255, 255, 0.5);\\n      color: rgba(0, 0, 0, 0.3); }\\n      .AbstractList .AbstractList__body .AbstractList__empty span {\\n        display: inline-block;\\n        width: 100%;\\n        height: 100%;\\n        padding-top: 20px;\\n        padding-bottom: 20px; }\\n  .AbstractList .AbstractList__footer {\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n    background: white;\\n    padding: 5px;\\n    height: auto;\\n    border-top: solid 1px rgba(0, 0, 0, 0.1); }\\n    .AbstractList .AbstractList__footer .btn-link {\\n      color: rgba(0, 0, 0, 0.5); }\\n      .AbstractList .AbstractList__footer .btn-link.disabled {\\n        opacity: .5; }\\n    .AbstractList .AbstractList__footer .counter {\\n      color: rgba(0, 0, 0, 0.5);\\n      font-size: 1.1em;\\n      margin-bottom: 2px; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.pt-0 {\\n  padding-top: 0px !important; }\\n\\n.pb-0 {\\n  padding-bottom: 0px !important; }\\n\\n.pl-0 {\\n  padding-left: 0px !important; }\\n\\n.pr-0 {\\n  padding-right: 0px !important; }\\n\\n.mt-0 {\\n  margin-top: 0px !important; }\\n\\n.mb-0 {\\n  margin-bottom: 0px !important; }\\n\\n.ml-0 {\\n  margin-left: 0px !important; }\\n\\n.mr-0 {\\n  margin-right: 0px !important; }\\n\\n.m-0 {\\n  margin: 0px !important; }\\n\\n.p-0 {\\n  padding: 0px !important; }\\n\\n.pt-1 {\\n  padding-top: 4px !important; }\\n\\n.pb-1 {\\n  padding-bottom: 4px !important; }\\n\\n.pl-1 {\\n  padding-left: 4px !important; }\\n\\n.pr-1 {\\n  padding-right: 4px !important; }\\n\\n.mt-1 {\\n  margin-top: 4px !important; }\\n\\n.mb-1 {\\n  margin-bottom: 4px !important; }\\n\\n.ml-1 {\\n  margin-left: 4px !important; }\\n\\n.mr-1 {\\n  margin-right: 4px !important; }\\n\\n.m-1 {\\n  margin: 4px !important; }\\n\\n.p-1 {\\n  padding: 4px !important; }\\n\\n.pt-2 {\\n  padding-top: 8px !important; }\\n\\n.pb-2 {\\n  padding-bottom: 8px !important; }\\n\\n.pl-2 {\\n  padding-left: 8px !important; }\\n\\n.pr-2 {\\n  padding-right: 8px !important; }\\n\\n.mt-2 {\\n  margin-top: 8px !important; }\\n\\n.mb-2 {\\n  margin-bottom: 8px !important; }\\n\\n.ml-2 {\\n  margin-left: 8px !important; }\\n\\n.mr-2 {\\n  margin-right: 8px !important; }\\n\\n.m-2 {\\n  margin: 8px !important; }\\n\\n.p-2 {\\n  padding: 8px !important; }\\n\\n.pt-3 {\\n  padding-top: 12px !important; }\\n\\n.pb-3 {\\n  padding-bottom: 12px !important; }\\n\\n.pl-3 {\\n  padding-left: 12px !important; }\\n\\n.pr-3 {\\n  padding-right: 12px !important; }\\n\\n.mt-3 {\\n  margin-top: 12px !important; }\\n\\n.mb-3 {\\n  margin-bottom: 12px !important; }\\n\\n.ml-3 {\\n  margin-left: 12px !important; }\\n\\n.mr-3 {\\n  margin-right: 12px !important; }\\n\\n.m-3 {\\n  margin: 12px !important; }\\n\\n.p-3 {\\n  padding: 12px !important; }\\n\\n.pt-4 {\\n  padding-top: 16px !important; }\\n\\n.pb-4 {\\n  padding-bottom: 16px !important; }\\n\\n.pl-4 {\\n  padding-left: 16px !important; }\\n\\n.pr-4 {\\n  padding-right: 16px !important; }\\n\\n.mt-4 {\\n  margin-top: 16px !important; }\\n\\n.mb-4 {\\n  margin-bottom: 16px !important; }\\n\\n.ml-4 {\\n  margin-left: 16px !important; }\\n\\n.mr-4 {\\n  margin-right: 16px !important; }\\n\\n.m-4 {\\n  margin: 16px !important; }\\n\\n.p-4 {\\n  padding: 16px !important; }\\n\\n.pt-5 {\\n  padding-top: 20px !important; }\\n\\n.pb-5 {\\n  padding-bottom: 20px !important; }\\n\\n.pl-5 {\\n  padding-left: 20px !important; }\\n\\n.pr-5 {\\n  padding-right: 20px !important; }\\n\\n.mt-5 {\\n  margin-top: 20px !important; }\\n\\n.mb-5 {\\n  margin-bottom: 20px !important; }\\n\\n.ml-5 {\\n  margin-left: 20px !important; }\\n\\n.mr-5 {\\n  margin-right: 20px !important; }\\n\\n.m-5 {\\n  margin: 20px !important; }\\n\\n.p-5 {\\n  padding: 20px !important; }\\n\\n.pt-6 {\\n  padding-top: 24px !important; }\\n\\n.pb-6 {\\n  padding-bottom: 24px !important; }\\n\\n.pl-6 {\\n  padding-left: 24px !important; }\\n\\n.pr-6 {\\n  padding-right: 24px !important; }\\n\\n.mt-6 {\\n  margin-top: 24px !important; }\\n\\n.mb-6 {\\n  margin-bottom: 24px !important; }\\n\\n.ml-6 {\\n  margin-left: 24px !important; }\\n\\n.mr-6 {\\n  margin-right: 24px !important; }\\n\\n.m-6 {\\n  margin: 24px !important; }\\n\\n.p-6 {\\n  padding: 24px !important; }\\n\\n.pt-7 {\\n  padding-top: 28px !important; }\\n\\n.pb-7 {\\n  padding-bottom: 28px !important; }\\n\\n.pl-7 {\\n  padding-left: 28px !important; }\\n\\n.pr-7 {\\n  padding-right: 28px !important; }\\n\\n.mt-7 {\\n  margin-top: 28px !important; }\\n\\n.mb-7 {\\n  margin-bottom: 28px !important; }\\n\\n.ml-7 {\\n  margin-left: 28px !important; }\\n\\n.mr-7 {\\n  margin-right: 28px !important; }\\n\\n.m-7 {\\n  margin: 28px !important; }\\n\\n.p-7 {\\n  padding: 28px !important; }\\n\\n.pt-8 {\\n  padding-top: 32px !important; }\\n\\n.pb-8 {\\n  padding-bottom: 32px !important; }\\n\\n.pl-8 {\\n  padding-left: 32px !important; }\\n\\n.pr-8 {\\n  padding-right: 32px !important; }\\n\\n.mt-8 {\\n  margin-top: 32px !important; }\\n\\n.mb-8 {\\n  margin-bottom: 32px !important; }\\n\\n.ml-8 {\\n  margin-left: 32px !important; }\\n\\n.mr-8 {\\n  margin-right: 32px !important; }\\n\\n.m-8 {\\n  margin: 32px !important; }\\n\\n.p-8 {\\n  padding: 32px !important; }\\n\\n.pt-9 {\\n  padding-top: 36px !important; }\\n\\n.pb-9 {\\n  padding-bottom: 36px !important; }\\n\\n.pl-9 {\\n  padding-left: 36px !important; }\\n\\n.pr-9 {\\n  padding-right: 36px !important; }\\n\\n.mt-9 {\\n  margin-top: 36px !important; }\\n\\n.mb-9 {\\n  margin-bottom: 36px !important; }\\n\\n.ml-9 {\\n  margin-left: 36px !important; }\\n\\n.mr-9 {\\n  margin-right: 36px !important; }\\n\\n.m-9 {\\n  margin: 36px !important; }\\n\\n.p-9 {\\n  padding: 36px !important; }\\n\\n.pt-10 {\\n  padding-top: 40px !important; }\\n\\n.pb-10 {\\n  padding-bottom: 40px !important; }\\n\\n.pl-10 {\\n  padding-left: 40px !important; }\\n\\n.pr-10 {\\n  padding-right: 40px !important; }\\n\\n.mt-10 {\\n  margin-top: 40px !important; }\\n\\n.mb-10 {\\n  margin-bottom: 40px !important; }\\n\\n.ml-10 {\\n  margin-left: 40px !important; }\\n\\n.mr-10 {\\n  margin-right: 40px !important; }\\n\\n.m-10 {\\n  margin: 40px !important; }\\n\\n.p-10 {\\n  padding: 40px !important; }\\n\\n.pt-11 {\\n  padding-top: 44px !important; }\\n\\n.pb-11 {\\n  padding-bottom: 44px !important; }\\n\\n.pl-11 {\\n  padding-left: 44px !important; }\\n\\n.pr-11 {\\n  padding-right: 44px !important; }\\n\\n.mt-11 {\\n  margin-top: 44px !important; }\\n\\n.mb-11 {\\n  margin-bottom: 44px !important; }\\n\\n.ml-11 {\\n  margin-left: 44px !important; }\\n\\n.mr-11 {\\n  margin-right: 44px !important; }\\n\\n.m-11 {\\n  margin: 44px !important; }\\n\\n.p-11 {\\n  padding: 44px !important; }\\n\\n.pt-12 {\\n  padding-top: 48px !important; }\\n\\n.pb-12 {\\n  padding-bottom: 48px !important; }\\n\\n.pl-12 {\\n  padding-left: 48px !important; }\\n\\n.pr-12 {\\n  padding-right: 48px !important; }\\n\\n.mt-12 {\\n  margin-top: 48px !important; }\\n\\n.mb-12 {\\n  margin-bottom: 48px !important; }\\n\\n.ml-12 {\\n  margin-left: 48px !important; }\\n\\n.mr-12 {\\n  margin-right: 48px !important; }\\n\\n.m-12 {\\n  margin: 48px !important; }\\n\\n.p-12 {\\n  padding: 48px !important; }\\n\\n.pt-13 {\\n  padding-top: 52px !important; }\\n\\n.pb-13 {\\n  padding-bottom: 52px !important; }\\n\\n.pl-13 {\\n  padding-left: 52px !important; }\\n\\n.pr-13 {\\n  padding-right: 52px !important; }\\n\\n.mt-13 {\\n  margin-top: 52px !important; }\\n\\n.mb-13 {\\n  margin-bottom: 52px !important; }\\n\\n.ml-13 {\\n  margin-left: 52px !important; }\\n\\n.mr-13 {\\n  margin-right: 52px !important; }\\n\\n.m-13 {\\n  margin: 52px !important; }\\n\\n.p-13 {\\n  padding: 52px !important; }\\n\\n.pt-14 {\\n  padding-top: 56px !important; }\\n\\n.pb-14 {\\n  padding-bottom: 56px !important; }\\n\\n.pl-14 {\\n  padding-left: 56px !important; }\\n\\n.pr-14 {\\n  padding-right: 56px !important; }\\n\\n.mt-14 {\\n  margin-top: 56px !important; }\\n\\n.mb-14 {\\n  margin-bottom: 56px !important; }\\n\\n.ml-14 {\\n  margin-left: 56px !important; }\\n\\n.mr-14 {\\n  margin-right: 56px !important; }\\n\\n.m-14 {\\n  margin: 56px !important; }\\n\\n.p-14 {\\n  padding: 56px !important; }\\n\\n.pt-15 {\\n  padding-top: 60px !important; }\\n\\n.pb-15 {\\n  padding-bottom: 60px !important; }\\n\\n.pl-15 {\\n  padding-left: 60px !important; }\\n\\n.pr-15 {\\n  padding-right: 60px !important; }\\n\\n.mt-15 {\\n  margin-top: 60px !important; }\\n\\n.mb-15 {\\n  margin-bottom: 60px !important; }\\n\\n.ml-15 {\\n  margin-left: 60px !important; }\\n\\n.mr-15 {\\n  margin-right: 60px !important; }\\n\\n.m-15 {\\n  margin: 60px !important; }\\n\\n.p-15 {\\n  padding: 60px !important; }\\n\\n.pt-16 {\\n  padding-top: 64px !important; }\\n\\n.pb-16 {\\n  padding-bottom: 64px !important; }\\n\\n.pl-16 {\\n  padding-left: 64px !important; }\\n\\n.pr-16 {\\n  padding-right: 64px !important; }\\n\\n.mt-16 {\\n  margin-top: 64px !important; }\\n\\n.mb-16 {\\n  margin-bottom: 64px !important; }\\n\\n.ml-16 {\\n  margin-left: 64px !important; }\\n\\n.mr-16 {\\n  margin-right: 64px !important; }\\n\\n.m-16 {\\n  margin: 64px !important; }\\n\\n.p-16 {\\n  padding: 64px !important; }\\n\\n.pt-17 {\\n  padding-top: 68px !important; }\\n\\n.pb-17 {\\n  padding-bottom: 68px !important; }\\n\\n.pl-17 {\\n  padding-left: 68px !important; }\\n\\n.pr-17 {\\n  padding-right: 68px !important; }\\n\\n.mt-17 {\\n  margin-top: 68px !important; }\\n\\n.mb-17 {\\n  margin-bottom: 68px !important; }\\n\\n.ml-17 {\\n  margin-left: 68px !important; }\\n\\n.mr-17 {\\n  margin-right: 68px !important; }\\n\\n.m-17 {\\n  margin: 68px !important; }\\n\\n.p-17 {\\n  padding: 68px !important; }\\n\\n.pt-18 {\\n  padding-top: 72px !important; }\\n\\n.pb-18 {\\n  padding-bottom: 72px !important; }\\n\\n.pl-18 {\\n  padding-left: 72px !important; }\\n\\n.pr-18 {\\n  padding-right: 72px !important; }\\n\\n.mt-18 {\\n  margin-top: 72px !important; }\\n\\n.mb-18 {\\n  margin-bottom: 72px !important; }\\n\\n.ml-18 {\\n  margin-left: 72px !important; }\\n\\n.mr-18 {\\n  margin-right: 72px !important; }\\n\\n.m-18 {\\n  margin: 72px !important; }\\n\\n.p-18 {\\n  padding: 72px !important; }\\n\\n.pt-19 {\\n  padding-top: 76px !important; }\\n\\n.pb-19 {\\n  padding-bottom: 76px !important; }\\n\\n.pl-19 {\\n  padding-left: 76px !important; }\\n\\n.pr-19 {\\n  padding-right: 76px !important; }\\n\\n.mt-19 {\\n  margin-top: 76px !important; }\\n\\n.mb-19 {\\n  margin-bottom: 76px !important; }\\n\\n.ml-19 {\\n  margin-left: 76px !important; }\\n\\n.mr-19 {\\n  margin-right: 76px !important; }\\n\\n.m-19 {\\n  margin: 76px !important; }\\n\\n.p-19 {\\n  padding: 76px !important; }\\n\\n.pt-20 {\\n  padding-top: 80px !important; }\\n\\n.pb-20 {\\n  padding-bottom: 80px !important; }\\n\\n.pl-20 {\\n  padding-left: 80px !important; }\\n\\n.pr-20 {\\n  padding-right: 80px !important; }\\n\\n.mt-20 {\\n  margin-top: 80px !important; }\\n\\n.mb-20 {\\n  margin-bottom: 80px !important; }\\n\\n.ml-20 {\\n  margin-left: 80px !important; }\\n\\n.mr-20 {\\n  margin-right: 80px !important; }\\n\\n.m-20 {\\n  margin: 80px !important; }\\n\\n.p-20 {\\n  padding: 80px !important; }\\n\\n.d-block {\\n  display: block; }\\n\\n.w-full {\\n  width: 100%; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.pos-relative {\\n  position: relative; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.TeamRow:nth-child(odd) {\\n  background: rgba(255, 255, 255, 0.5); }\\n\\n.TeamRow__row {\\n  align-items: center;\\n  border: 2px solid rgba(0, 0, 0, 0);\\n  display: flex;\\n  flex-direction: row;\\n  height: 80px; }\\n\\n.TeamRow__row .TeamRow__team-name {\\n  display: inline-block;\\n  min-width: 300px;\\n  flex-grow: 3; }\\n  .TeamRow__row .TeamRow__team-name .TeamIcon {\\n    margin-right: 0px; }\\n  .TeamRow__row .TeamRow__team-name .TeamRow__team-description {\\n    min-width: 276px;\\n    max-width: 400px; }\\n\\n.SystemUserDetail .TeamRow__col-description {\\n  min-width: 276px;\\n  max-width: 400px; }\\n\\n.TeamRow__row .TeamRow__description {\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  overflow: hidden;\\n  width: 150px;\\n  max-width: 400px; }\\n  .TeamRow__row .TeamRow__description.adjusted {\\n    width: 120px; }\\n  .TeamRow__row .TeamRow__description i {\\n    margin-right: 5px; }\\n  .TeamRow__row .TeamRow__description > a {\\n    color: black;\\n    text-decoration: none;\\n    padding: 3px 5px; }\\n    .TeamRow__row .TeamRow__description > a:hover {\\n      background-color: rgba(0, 0, 0, 0.15);\\n      border-radius: 3px; }\\n    .TeamRow__row .TeamRow__description > a.warning {\\n      color: #d64946; }\\n\\n.TeamRow__row .TeamRow__actions {\\n  align-items: center;\\n  justify-content: flex-end;\\n  display: flex;\\n  height: 100%;\\n  width: 150px;\\n  max-width: 400px;\\n  padding-right: 15px; }\\n\\n.TeamRow__row .TeamIcon__content {\\n  opacity: 1; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".NewUserBadge {\\n  background: #1156b2;\\n  color: #FFF;\\n  text-transform: uppercase;\\n  padding: 2px 4px;\\n  border-radius: 3px; }\\n\\n.UserGrid_nameRow {\\n  display: flex;\\n  height: 80px; }\\n  .UserGrid_nameRow .UserGrid_name {\\n    display: flex;\\n    flex-grow: 1;\\n    flex-shrink: 1;\\n    flex-direction: column;\\n    align-self: center;\\n    padding-left: 10px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n    .UserGrid_nameRow .UserGrid_name span {\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n\\n.UserGrid_removeRow {\\n  padding-right: 20px; }\\n\", \"\"]);\n","exports = module.exports = require(\"../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.pt-0 {\\n  padding-top: 0px !important; }\\n\\n.pb-0 {\\n  padding-bottom: 0px !important; }\\n\\n.pl-0 {\\n  padding-left: 0px !important; }\\n\\n.pr-0 {\\n  padding-right: 0px !important; }\\n\\n.mt-0 {\\n  margin-top: 0px !important; }\\n\\n.mb-0 {\\n  margin-bottom: 0px !important; }\\n\\n.ml-0 {\\n  margin-left: 0px !important; }\\n\\n.mr-0 {\\n  margin-right: 0px !important; }\\n\\n.m-0 {\\n  margin: 0px !important; }\\n\\n.p-0 {\\n  padding: 0px !important; }\\n\\n.pt-1 {\\n  padding-top: 4px !important; }\\n\\n.pb-1 {\\n  padding-bottom: 4px !important; }\\n\\n.pl-1 {\\n  padding-left: 4px !important; }\\n\\n.pr-1 {\\n  padding-right: 4px !important; }\\n\\n.mt-1 {\\n  margin-top: 4px !important; }\\n\\n.mb-1 {\\n  margin-bottom: 4px !important; }\\n\\n.ml-1 {\\n  margin-left: 4px !important; }\\n\\n.mr-1 {\\n  margin-right: 4px !important; }\\n\\n.m-1 {\\n  margin: 4px !important; }\\n\\n.p-1 {\\n  padding: 4px !important; }\\n\\n.pt-2 {\\n  padding-top: 8px !important; }\\n\\n.pb-2 {\\n  padding-bottom: 8px !important; }\\n\\n.pl-2 {\\n  padding-left: 8px !important; }\\n\\n.pr-2 {\\n  padding-right: 8px !important; }\\n\\n.mt-2 {\\n  margin-top: 8px !important; }\\n\\n.mb-2 {\\n  margin-bottom: 8px !important; }\\n\\n.ml-2 {\\n  margin-left: 8px !important; }\\n\\n.mr-2 {\\n  margin-right: 8px !important; }\\n\\n.m-2 {\\n  margin: 8px !important; }\\n\\n.p-2 {\\n  padding: 8px !important; }\\n\\n.pt-3 {\\n  padding-top: 12px !important; }\\n\\n.pb-3 {\\n  padding-bottom: 12px !important; }\\n\\n.pl-3 {\\n  padding-left: 12px !important; }\\n\\n.pr-3 {\\n  padding-right: 12px !important; }\\n\\n.mt-3 {\\n  margin-top: 12px !important; }\\n\\n.mb-3 {\\n  margin-bottom: 12px !important; }\\n\\n.ml-3 {\\n  margin-left: 12px !important; }\\n\\n.mr-3 {\\n  margin-right: 12px !important; }\\n\\n.m-3 {\\n  margin: 12px !important; }\\n\\n.p-3 {\\n  padding: 12px !important; }\\n\\n.pt-4 {\\n  padding-top: 16px !important; }\\n\\n.pb-4 {\\n  padding-bottom: 16px !important; }\\n\\n.pl-4 {\\n  padding-left: 16px !important; }\\n\\n.pr-4 {\\n  padding-right: 16px !important; }\\n\\n.mt-4 {\\n  margin-top: 16px !important; }\\n\\n.mb-4 {\\n  margin-bottom: 16px !important; }\\n\\n.ml-4 {\\n  margin-left: 16px !important; }\\n\\n.mr-4 {\\n  margin-right: 16px !important; }\\n\\n.m-4 {\\n  margin: 16px !important; }\\n\\n.p-4 {\\n  padding: 16px !important; }\\n\\n.pt-5 {\\n  padding-top: 20px !important; }\\n\\n.pb-5 {\\n  padding-bottom: 20px !important; }\\n\\n.pl-5 {\\n  padding-left: 20px !important; }\\n\\n.pr-5 {\\n  padding-right: 20px !important; }\\n\\n.mt-5 {\\n  margin-top: 20px !important; }\\n\\n.mb-5 {\\n  margin-bottom: 20px !important; }\\n\\n.ml-5 {\\n  margin-left: 20px !important; }\\n\\n.mr-5 {\\n  margin-right: 20px !important; }\\n\\n.m-5 {\\n  margin: 20px !important; }\\n\\n.p-5 {\\n  padding: 20px !important; }\\n\\n.pt-6 {\\n  padding-top: 24px !important; }\\n\\n.pb-6 {\\n  padding-bottom: 24px !important; }\\n\\n.pl-6 {\\n  padding-left: 24px !important; }\\n\\n.pr-6 {\\n  padding-right: 24px !important; }\\n\\n.mt-6 {\\n  margin-top: 24px !important; }\\n\\n.mb-6 {\\n  margin-bottom: 24px !important; }\\n\\n.ml-6 {\\n  margin-left: 24px !important; }\\n\\n.mr-6 {\\n  margin-right: 24px !important; }\\n\\n.m-6 {\\n  margin: 24px !important; }\\n\\n.p-6 {\\n  padding: 24px !important; }\\n\\n.pt-7 {\\n  padding-top: 28px !important; }\\n\\n.pb-7 {\\n  padding-bottom: 28px !important; }\\n\\n.pl-7 {\\n  padding-left: 28px !important; }\\n\\n.pr-7 {\\n  padding-right: 28px !important; }\\n\\n.mt-7 {\\n  margin-top: 28px !important; }\\n\\n.mb-7 {\\n  margin-bottom: 28px !important; }\\n\\n.ml-7 {\\n  margin-left: 28px !important; }\\n\\n.mr-7 {\\n  margin-right: 28px !important; }\\n\\n.m-7 {\\n  margin: 28px !important; }\\n\\n.p-7 {\\n  padding: 28px !important; }\\n\\n.pt-8 {\\n  padding-top: 32px !important; }\\n\\n.pb-8 {\\n  padding-bottom: 32px !important; }\\n\\n.pl-8 {\\n  padding-left: 32px !important; }\\n\\n.pr-8 {\\n  padding-right: 32px !important; }\\n\\n.mt-8 {\\n  margin-top: 32px !important; }\\n\\n.mb-8 {\\n  margin-bottom: 32px !important; }\\n\\n.ml-8 {\\n  margin-left: 32px !important; }\\n\\n.mr-8 {\\n  margin-right: 32px !important; }\\n\\n.m-8 {\\n  margin: 32px !important; }\\n\\n.p-8 {\\n  padding: 32px !important; }\\n\\n.pt-9 {\\n  padding-top: 36px !important; }\\n\\n.pb-9 {\\n  padding-bottom: 36px !important; }\\n\\n.pl-9 {\\n  padding-left: 36px !important; }\\n\\n.pr-9 {\\n  padding-right: 36px !important; }\\n\\n.mt-9 {\\n  margin-top: 36px !important; }\\n\\n.mb-9 {\\n  margin-bottom: 36px !important; }\\n\\n.ml-9 {\\n  margin-left: 36px !important; }\\n\\n.mr-9 {\\n  margin-right: 36px !important; }\\n\\n.m-9 {\\n  margin: 36px !important; }\\n\\n.p-9 {\\n  padding: 36px !important; }\\n\\n.pt-10 {\\n  padding-top: 40px !important; }\\n\\n.pb-10 {\\n  padding-bottom: 40px !important; }\\n\\n.pl-10 {\\n  padding-left: 40px !important; }\\n\\n.pr-10 {\\n  padding-right: 40px !important; }\\n\\n.mt-10 {\\n  margin-top: 40px !important; }\\n\\n.mb-10 {\\n  margin-bottom: 40px !important; }\\n\\n.ml-10 {\\n  margin-left: 40px !important; }\\n\\n.mr-10 {\\n  margin-right: 40px !important; }\\n\\n.m-10 {\\n  margin: 40px !important; }\\n\\n.p-10 {\\n  padding: 40px !important; }\\n\\n.pt-11 {\\n  padding-top: 44px !important; }\\n\\n.pb-11 {\\n  padding-bottom: 44px !important; }\\n\\n.pl-11 {\\n  padding-left: 44px !important; }\\n\\n.pr-11 {\\n  padding-right: 44px !important; }\\n\\n.mt-11 {\\n  margin-top: 44px !important; }\\n\\n.mb-11 {\\n  margin-bottom: 44px !important; }\\n\\n.ml-11 {\\n  margin-left: 44px !important; }\\n\\n.mr-11 {\\n  margin-right: 44px !important; }\\n\\n.m-11 {\\n  margin: 44px !important; }\\n\\n.p-11 {\\n  padding: 44px !important; }\\n\\n.pt-12 {\\n  padding-top: 48px !important; }\\n\\n.pb-12 {\\n  padding-bottom: 48px !important; }\\n\\n.pl-12 {\\n  padding-left: 48px !important; }\\n\\n.pr-12 {\\n  padding-right: 48px !important; }\\n\\n.mt-12 {\\n  margin-top: 48px !important; }\\n\\n.mb-12 {\\n  margin-bottom: 48px !important; }\\n\\n.ml-12 {\\n  margin-left: 48px !important; }\\n\\n.mr-12 {\\n  margin-right: 48px !important; }\\n\\n.m-12 {\\n  margin: 48px !important; }\\n\\n.p-12 {\\n  padding: 48px !important; }\\n\\n.pt-13 {\\n  padding-top: 52px !important; }\\n\\n.pb-13 {\\n  padding-bottom: 52px !important; }\\n\\n.pl-13 {\\n  padding-left: 52px !important; }\\n\\n.pr-13 {\\n  padding-right: 52px !important; }\\n\\n.mt-13 {\\n  margin-top: 52px !important; }\\n\\n.mb-13 {\\n  margin-bottom: 52px !important; }\\n\\n.ml-13 {\\n  margin-left: 52px !important; }\\n\\n.mr-13 {\\n  margin-right: 52px !important; }\\n\\n.m-13 {\\n  margin: 52px !important; }\\n\\n.p-13 {\\n  padding: 52px !important; }\\n\\n.pt-14 {\\n  padding-top: 56px !important; }\\n\\n.pb-14 {\\n  padding-bottom: 56px !important; }\\n\\n.pl-14 {\\n  padding-left: 56px !important; }\\n\\n.pr-14 {\\n  padding-right: 56px !important; }\\n\\n.mt-14 {\\n  margin-top: 56px !important; }\\n\\n.mb-14 {\\n  margin-bottom: 56px !important; }\\n\\n.ml-14 {\\n  margin-left: 56px !important; }\\n\\n.mr-14 {\\n  margin-right: 56px !important; }\\n\\n.m-14 {\\n  margin: 56px !important; }\\n\\n.p-14 {\\n  padding: 56px !important; }\\n\\n.pt-15 {\\n  padding-top: 60px !important; }\\n\\n.pb-15 {\\n  padding-bottom: 60px !important; }\\n\\n.pl-15 {\\n  padding-left: 60px !important; }\\n\\n.pr-15 {\\n  padding-right: 60px !important; }\\n\\n.mt-15 {\\n  margin-top: 60px !important; }\\n\\n.mb-15 {\\n  margin-bottom: 60px !important; }\\n\\n.ml-15 {\\n  margin-left: 60px !important; }\\n\\n.mr-15 {\\n  margin-right: 60px !important; }\\n\\n.m-15 {\\n  margin: 60px !important; }\\n\\n.p-15 {\\n  padding: 60px !important; }\\n\\n.pt-16 {\\n  padding-top: 64px !important; }\\n\\n.pb-16 {\\n  padding-bottom: 64px !important; }\\n\\n.pl-16 {\\n  padding-left: 64px !important; }\\n\\n.pr-16 {\\n  padding-right: 64px !important; }\\n\\n.mt-16 {\\n  margin-top: 64px !important; }\\n\\n.mb-16 {\\n  margin-bottom: 64px !important; }\\n\\n.ml-16 {\\n  margin-left: 64px !important; }\\n\\n.mr-16 {\\n  margin-right: 64px !important; }\\n\\n.m-16 {\\n  margin: 64px !important; }\\n\\n.p-16 {\\n  padding: 64px !important; }\\n\\n.pt-17 {\\n  padding-top: 68px !important; }\\n\\n.pb-17 {\\n  padding-bottom: 68px !important; }\\n\\n.pl-17 {\\n  padding-left: 68px !important; }\\n\\n.pr-17 {\\n  padding-right: 68px !important; }\\n\\n.mt-17 {\\n  margin-top: 68px !important; }\\n\\n.mb-17 {\\n  margin-bottom: 68px !important; }\\n\\n.ml-17 {\\n  margin-left: 68px !important; }\\n\\n.mr-17 {\\n  margin-right: 68px !important; }\\n\\n.m-17 {\\n  margin: 68px !important; }\\n\\n.p-17 {\\n  padding: 68px !important; }\\n\\n.pt-18 {\\n  padding-top: 72px !important; }\\n\\n.pb-18 {\\n  padding-bottom: 72px !important; }\\n\\n.pl-18 {\\n  padding-left: 72px !important; }\\n\\n.pr-18 {\\n  padding-right: 72px !important; }\\n\\n.mt-18 {\\n  margin-top: 72px !important; }\\n\\n.mb-18 {\\n  margin-bottom: 72px !important; }\\n\\n.ml-18 {\\n  margin-left: 72px !important; }\\n\\n.mr-18 {\\n  margin-right: 72px !important; }\\n\\n.m-18 {\\n  margin: 72px !important; }\\n\\n.p-18 {\\n  padding: 72px !important; }\\n\\n.pt-19 {\\n  padding-top: 76px !important; }\\n\\n.pb-19 {\\n  padding-bottom: 76px !important; }\\n\\n.pl-19 {\\n  padding-left: 76px !important; }\\n\\n.pr-19 {\\n  padding-right: 76px !important; }\\n\\n.mt-19 {\\n  margin-top: 76px !important; }\\n\\n.mb-19 {\\n  margin-bottom: 76px !important; }\\n\\n.ml-19 {\\n  margin-left: 76px !important; }\\n\\n.mr-19 {\\n  margin-right: 76px !important; }\\n\\n.m-19 {\\n  margin: 76px !important; }\\n\\n.p-19 {\\n  padding: 76px !important; }\\n\\n.pt-20 {\\n  padding-top: 80px !important; }\\n\\n.pb-20 {\\n  padding-bottom: 80px !important; }\\n\\n.pl-20 {\\n  padding-left: 80px !important; }\\n\\n.pr-20 {\\n  padding-right: 80px !important; }\\n\\n.mt-20 {\\n  margin-top: 80px !important; }\\n\\n.mb-20 {\\n  margin-bottom: 80px !important; }\\n\\n.ml-20 {\\n  margin-left: 80px !important; }\\n\\n.mr-20 {\\n  margin-right: 80px !important; }\\n\\n.m-20 {\\n  margin: 80px !important; }\\n\\n.p-20 {\\n  padding: 80px !important; }\\n\\n.d-block {\\n  display: block; }\\n\\n.w-full {\\n  width: 100%; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.pos-relative {\\n  position: relative; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.AdminPanel {\\n  -webkit-border-radius: 2px;\\n  -moz-border-radius: 2px;\\n  -ms-border-radius: 2px;\\n  -o-border-radius: 2px;\\n  border-radius: 2px;\\n  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  -moz-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  overflow: hidden;\\n  *zoom: 1;\\n  font-size: .95em;\\n  margin: 2em 0 1em;\\n  padding: 0;\\n  border: solid 1px rgba(0, 0, 0, 0.1); }\\n  .AdminPanel .AdminPanel__content {\\n    padding: 10px 20px 20px; }\\n  .AdminPanel .AdminPanel__table {\\n    width: 100%; }\\n    .AdminPanel .AdminPanel__table th {\\n      border-bottom: solid 1px rgba(0, 0, 0, 0.1); }\\n    .AdminPanel .AdminPanel__table td,\\n    .AdminPanel .AdminPanel__table th {\\n      padding: 6px 20px; }\\n      .AdminPanel .AdminPanel__table td:first-child,\\n      .AdminPanel .AdminPanel__table th:first-child {\\n        padding-left: 20px; }\\n  .AdminPanel .header {\\n    align-items: center;\\n    background: white;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 20px; }\\n    .AdminPanel .header h3 {\\n      font-size: 18px;\\n      font-weight: normal;\\n      margin: 0;\\n      padding: 0; }\\n    .AdminPanel .header .button {\\n      self-align: end;\\n      margin-left: 10px; }\\n      .AdminPanel .header .button svg {\\n        transform: rotate(0deg);\\n        transition: transform 300ms; }\\n  .AdminPanel.closed .header .button svg {\\n    transform: rotate(90deg);\\n    transition: transform 300ms; }\\n\", \"\"]);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {cloneDeep} from 'lodash';\n\nimport AdminDefinition from 'components/admin_console/admin_definition.jsx';\n\nexport const getAdminDefinition = createSelector(\n    () => AdminDefinition,\n    (state) => state.plugins.adminConsoleReducers,\n    (adminDefinition, reducers) => {\n        let result = cloneDeep(AdminDefinition);\n        for (const reducer of Object.values(reducers)) {\n            result = reducer(result);\n        }\n        return result;\n    },\n);\n\nexport const getAdminConsoleCustomComponents = (state, pluginId) =>\n    state.plugins.adminConsoleCustomComponents[pluginId] || {};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport FlexSearch from 'flexsearch/dist/flexsearch.es5';\n\nimport {getPluginEntries} from './admin_console_plugin_index';\n\nfunction extractTextsFromSection(section, intl) {\n    const texts = [];\n    if (section.title) {\n        texts.push(intl.formatMessage({id: section.title, defaultMessage: section.title_default}));\n    }\n    if (section.schema && section.schema.name) {\n        texts.push(section.schema.name);\n    }\n    if (section.searchableStrings) {\n        for (const searchableString of section.searchableStrings) {\n            if (typeof searchableString === 'string') {\n                texts.push(intl.formatMessage({id: searchableString, defaultMessage: searchableString}));\n            } else {\n                texts.push(intl.formatMessage({id: searchableString[0], defaultMessage: ''}, searchableString[1]));\n            }\n        }\n    }\n\n    if (section.schema && section.schema.settings) {\n        for (const setting of Object.values(section.schema.settings)) {\n            if (setting.label) {\n                texts.push(intl.formatMessage({id: setting.label, defaultMessage: setting.label_default}, setting.label_values));\n            }\n            if (setting.help_text && typeof setting.help_text === 'string') {\n                texts.push(intl.formatMessage({id: setting.help_text, defaultMessage: setting.help_text_default}, setting.help_text_values));\n            }\n            if (setting.remove_help_text) {\n                texts.push(intl.formatMessage({id: setting.remove_help_text, defaultMessage: setting.remove_help_text_default}));\n            }\n            if (setting.remove_button_text) {\n                texts.push(intl.formatMessage({id: setting.remove_button_text, defaultMessage: setting.remove_button_text_default}));\n            }\n        }\n    }\n    return texts;\n}\n\nexport function adminDefinitionsToUrlsAndTexts(adminDefinition, intl) {\n    const entries = {};\n    for (const item of Object.values(adminDefinition.about)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.reporting)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.user_management)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.environment)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.site)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.authentication)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.plugins)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.integrations)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.compliance)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    for (const item of Object.values(adminDefinition.experimental)) {\n        entries[item.url] = extractTextsFromSection(item, intl);\n    }\n    return entries;\n}\n\nexport function generateIndex(AdminDefinition, plugins, intl) {\n    const idx = new FlexSearch();\n\n    addToIndex(adminDefinitionsToUrlsAndTexts(AdminDefinition, intl), idx);\n\n    addToIndex(getPluginEntries(plugins), idx);\n\n    return idx;\n}\n\nfunction addToIndex(entries, idx) {\n    for (const key of Object.keys(entries)) {\n        let text = '';\n        for (const str of entries[key]) {\n            text += ' ' + str;\n        }\n        idx.add(key, text);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {stripMarkdown} from 'utils/markdown';\nimport getEnablePluginSetting from 'components/admin_console/custom_plugin_settings/enable_plugin_setting';\n\nfunction extractTextsFromPlugin(plugin) {\n    const texts = extractTextFromSetting(getEnablePluginSetting(plugin));\n    if (plugin.name) {\n        texts.push(plugin.name);\n    }\n    if (plugin.id) {\n        texts.push(plugin.id);\n    }\n    if (plugin.settings_schema) {\n        if (plugin.settings_schema.footer) {\n            texts.push(stripMarkdown(plugin.settings_schema.footer));\n        }\n        if (plugin.settings_schema.header) {\n            texts.push(stripMarkdown(plugin.settings_schema.header));\n        }\n\n        if (plugin.settings_schema.settings) {\n            const settings = Object.values(plugin.settings_schema.settings);\n\n            for (const setting of settings) {\n                const settingsTexts = extractTextFromSetting(setting, texts);\n                texts.push(...settingsTexts);\n            }\n        }\n    }\n    return texts;\n}\n\nfunction extractTextFromSetting(setting) {\n    const texts = [];\n    if (setting.label) {\n        texts.push(setting.label);\n    }\n    if (setting.display_name) {\n        texts.push(setting.display_name);\n    }\n    if (setting.help_text) {\n        texts.push(stripMarkdown(setting.help_text));\n    }\n    if (setting.key) {\n        texts.push(setting.key);\n    }\n    return texts;\n}\n\nexport function getPluginEntries(pluginsObj = {}) {\n    const entries = {};\n    const plugins = pluginsObj || {};\n    for (const pluginId of Object.keys(plugins)) {\n        const url = `plugin_${pluginId}`;\n        entries[url] = extractTextsFromPlugin(plugins[pluginId]);\n    }\n    return entries;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {UserSearchOptions, UserListOptions, UserFilters} from 'utils/constants';\n\n// userSelectorOptionsFromFilter will convert a string UI filter to an options object\n// for selecting users out of redux state\n// Note: this is currently the same as getUserOptionsFromFilter but wrapped to be clear\n// that there are separate purposes (this can be used with both getProfiles and searchProfiles\n// selectors)\nexport function userSelectorOptionsFromFilter(filter) {\n    return getUserOptionsFromFilter(filter);\n}\n\n// getUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the get users endpoint\nexport function getUserOptionsFromFilter(filter) {\n    const options = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserListOptions.INACTIVE] = true;\n    }\n    return options;\n}\n\n// searchUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the search users endpoint\nexport function searchUserOptionsFromFilter(filter) {\n    const options = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserSearchOptions.ALLOW_INACTIVE] = true;\n    }\n    return options;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Permissions} from 'mattermost-redux/constants/index';\n\nconst MAPPING = {\n    enableTeamCreation: {\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\n    },\n\n    editOthersPosts: {\n        true: [\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n        false: [\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n    },\n\n    enableOnlyAdminIntegrations: {\n        true: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\n        ],\n        false: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\n        ],\n    },\n};\n\n/**\n * Get the roles that were changed (but unsaved) for given mapping key/values.\n *\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\n */\nexport function rolesFromMapping(mappingValues, roles) {\n    const rolesClone = JSON.parse(JSON.stringify(roles));\n\n    // Purge roles that aren't present in MAPPING, we don't care about them.\n    purgeNonPertinentRoles(rolesClone);\n\n    Object.keys(MAPPING).forEach((mappingKey) => {\n        const value = mappingValues[mappingKey];\n        if (value) {\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\n        }\n    });\n\n    // Purge roles that didn't have permissions changes, we don't care about them.\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\n        const originalPermissionSet = new Set(roles[roleName].permissions);\n        const newPermissionSet = new Set(roleClone.permissions);\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\n\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\n            delete rolesClone[roleName];\n        }\n    });\n\n    return rolesClone;\n}\n\n/**\n * Get the mapping value that matches for a given set of roles.\n *\n * @param {string} key to match under in the mapping.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {string} the value that the roles/permissions assignment match in the mapping.\n */\nexport function mappingValueFromRoles(key, roles) {\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\n        if (o.allConditionsAreMet) {\n            return o.value;\n        }\n    }\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\n}\n\nfunction purgeNonPertinentRoles(roles) {\n    const pertinentRoleNames = roleNamesInMapping();\n\n    Object.keys(roles).forEach((key) => {\n        if (!pertinentRoleNames.includes(key)) {\n            delete roles[key];\n        }\n    });\n}\n\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\n    const roleRules = MAPPING[mappingKey][value];\n\n    if (typeof roleRules === 'undefined') {\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\n    }\n\n    roleRules.forEach((item) => {\n        const role = roles[item.roleName];\n        if (item.shouldHave) {\n            addPermissionToRole(item.permission, role);\n        } else {\n            removePermissionFromRole(item.permission, role);\n        }\n    });\n}\n\n// Returns a set of the role names present in MAPPING.\nfunction roleNamesInMapping() {\n    let roleNames = [];\n\n    Object.values(MAPPING).forEach((v1) => {\n        Object.values(v1).forEach((v2) => {\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\n            roleNames = roleNames.concat(names);\n        });\n    });\n\n    return [...new Set(roleNames.map((item) => item))];\n}\n\nfunction* mappingPartIterator(mappingPart, roles) {\n    for (const value in mappingPart) {\n        if (mappingPart.hasOwnProperty(value)) {\n            const roleRules = mappingPart[value];\n\n            const hasUnmetCondition = roleRules.some((item) => {\n                const role = roles[item.roleName];\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\n            });\n\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\n        }\n    }\n}\n\nfunction addPermissionToRole(permission, role) {\n    if (!role.permissions.includes(permission)) {\n        role.permissions.push(permission);\n    }\n}\n\nfunction removePermissionFromRole(permission, role) {\n    const permissionIndex = role.permissions.indexOf(permission);\n    if (permissionIndex !== -1) {\n        role.permissions.splice(permissionIndex, 1);\n    }\n}\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}