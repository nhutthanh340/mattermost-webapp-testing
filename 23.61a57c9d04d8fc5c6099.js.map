{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/should_verify_email/index.js","webpack:///./components/should_verify_email/should_verify_email.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","toString","mapStateToProps","state","SiteName","siteName","getConfig","mapDispatchToProps","dispatch","actions","bindActionCreators","sendVerificationEmail","connect","ShouldVerifyEmail","constructor","email","URLSearchParams","location","search","get","setState","resendStatus","data","error","resendConfirm","handleResend","PropTypes","object","isRequired","string","shape","func"],"mappings":"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","file":"23.61a57c9d04d8fc5c6099.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {sendVerificationEmail} from 'mattermost-redux/actions/users';\n\nimport ShouldVerifyEmail from './should_verify_email';\n\nconst mapStateToProps = (state) => {\n    const {SiteName: siteName} = getConfig(state);\n    return {siteName};\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendVerificationEmail,\n    }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShouldVerifyEmail);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport BackButton from 'components/common/back_button';\nimport SuccessIcon from 'components/widgets/icons/fa_success_icon';\n\nexport default class ShouldVerifyEmail extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object.isRequired,\n        siteName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            sendVerificationEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            resendStatus: 'none',\n        };\n    }\n\n    handleResend = async () => {\n        const email = (new URLSearchParams(this.props.location.search)).get('email');\n\n        this.setState({resendStatus: 'sending'});\n\n        const {data, error} = await this.props.actions.sendVerificationEmail(email);\n        if (data) {\n            this.setState({resendStatus: 'success'});\n        } else if (error) {\n            this.setState({resendStatus: 'failure'});\n        }\n    }\n\n    render() {\n        let resendConfirm = '';\n\n        if (this.state.resendStatus === 'success') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id='email_verify.sent'\n                            defaultMessage=' Verification email sent.'\n                        />\n                    </p>\n                </div>\n            );\n        }\n\n        if (this.state.resendStatus === 'failure') {\n            resendConfirm = (\n                <div>\n                    <br/>\n                    <p className='alert alert-danger'>\n                        <FormattedMessage\n                            id='generic_icons.fail'\n                            defaultMessage='Faliure Icon'\n                        >\n                            {(title) => (\n                                <i\n                                    className='fa fa-times'\n                                    title={title}\n                                />\n                            )}\n                        </FormattedMessage>\n                        <FormattedMessage id='email_verify.failed'/>\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='email_verify.almost'\n                                defaultMessage='{siteName}: You are almost done'\n                                values={{\n                                    siteName: this.props.siteName,\n                                }}\n                            />\n                        </h3>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='email_verify.notVerifiedBody'\n                                    defaultMessage='Please verify your email address. Check your inbox for an email.'\n                                />\n                            </p>\n                            <button\n                                onClick={this.handleResend}\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='email_verify.resend'\n                                    defaultMessage='Resend Email'\n                                />\n                            </button>\n                            {resendConfirm}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}