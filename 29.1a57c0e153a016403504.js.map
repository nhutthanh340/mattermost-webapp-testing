{"version":3,"sources":["webpack:///./components/pdf_preview.jsx"],"names":["MAX_PDF_PAGES","PDFPreview","React","PureComponent","constructor","props","pageIndex","pdfPagesRendered","state","pdfPagesLoaded","canvas","refs","context","getContext","viewport","pdfPages","getViewport","height","width","renderContext","canvasContext","render","setState","pdf","numPages","loading","success","PDFJS","getDocument","fileUrl","then","onDocumentLoad","onDocumentLoadError","i","getPage","onPageLoad","reason","console","log","page","Object","assign","componentDidMount","updateStateFromProps","UNSAFE_componentWillReceiveProps","nextProps","componentDidUpdate","renderPDFPage","fileInfo","pdfCanvases","push","fileDownloadUrl","link","getFileDownloadUrl","id","PropTypes","object","isRequired","string"],"mappings":"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","file":"29.1a57c0e153a016403504.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PDFJS from 'pdfjs-dist';\nimport {getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport FileInfoPreview from 'components/file_info_preview';\n\nconst MAX_PDF_PAGES = 5;\n\nexport default class PDFPreview extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Compare file types\n        */\n        fileInfo: PropTypes.object.isRequired,\n\n        /**\n        *  URL of pdf file to output and compare to update props url\n        */\n        fileUrl: PropTypes.string.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.pdfPagesRendered = {};\n\n        this.state = {\n            pdf: null,\n            pdfPages: {},\n            pdfPagesLoaded: {},\n            numPages: 0,\n            loading: true,\n            success: false,\n        };\n    }\n\n    componentDidMount() {\n        this.updateStateFromProps(this.props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (this.props.fileUrl !== nextProps.fileUrl) {\n            this.updateStateFromProps(nextProps);\n            this.pdfPagesRendered = {};\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.success) {\n            for (let i = 0; i < this.state.numPages; i++) {\n                this.renderPDFPage(i);\n            }\n        }\n    }\n\n    renderPDFPage = (pageIndex) => {\n        if (this.pdfPagesRendered[pageIndex] || !this.state.pdfPagesLoaded[pageIndex]) {\n            return;\n        }\n\n        const canvas = this.refs['pdfCanvas' + pageIndex];\n        const context = canvas.getContext('2d');\n        const viewport = this.state.pdfPages[pageIndex].getViewport(1);\n\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n\n        const renderContext = {\n            canvasContext: context,\n            viewport,\n        };\n\n        this.state.pdfPages[pageIndex].render(renderContext);\n        this.pdfPagesRendered[pageIndex] = true;\n    }\n\n    updateStateFromProps = (props) => {\n        this.setState({\n            pdf: null,\n            pdfPages: {},\n            pdfPagesLoaded: {},\n            numPages: 0,\n            loading: true,\n            success: false,\n        });\n\n        PDFJS.getDocument(props.fileUrl).then(this.onDocumentLoad, this.onDocumentLoadError);\n    }\n\n    onDocumentLoad = (pdf) => {\n        const numPages = pdf.numPages <= MAX_PDF_PAGES ? pdf.numPages : MAX_PDF_PAGES;\n        this.setState({pdf, numPages});\n        for (let i = 1; i <= pdf.numPages; i++) {\n            pdf.getPage(i).then(this.onPageLoad);\n        }\n    }\n\n    onDocumentLoadError = (reason) => {\n        console.log('Unable to load PDF preview: ' + reason); //eslint-disable-line no-console\n        this.setState({loading: false, success: false});\n    }\n\n    onPageLoad = (page) => {\n        const pdfPages = Object.assign({}, this.state.pdfPages);\n        pdfPages[page.pageIndex] = page;\n\n        const pdfPagesLoaded = Object.assign({}, this.state.pdfPagesLoaded);\n        pdfPagesLoaded[page.pageIndex] = true;\n\n        this.setState({pdfPages, pdfPagesLoaded});\n\n        if (page.pageIndex === 0) {\n            this.setState({success: true, loading: false});\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className='view-image__loading'>\n                    <LoadingSpinner/>\n                </div>\n            );\n        }\n\n        if (!this.state.success) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        const pdfCanvases = [];\n        for (let i = 0; i < this.state.numPages; i++) {\n            pdfCanvases.push(\n                <canvas\n                    ref={'pdfCanvas' + i}\n                    key={'previewpdfcanvas' + i}\n                />,\n            );\n\n            if (i < this.state.numPages - 1 && this.state.numPages > 1) {\n                pdfCanvases.push(\n                    <div\n                        key={'previewpdfspacer' + i}\n                        className='pdf-preview-spacer'\n                    />,\n                );\n            }\n        }\n\n        if (this.state.pdf.numPages > MAX_PDF_PAGES) {\n            const fileDownloadUrl = this.props.fileInfo.link || getFileDownloadUrl(this.props.fileInfo.id);\n\n            pdfCanvases.push(\n                <a\n                    key='previewpdfmorepages'\n                    href={fileDownloadUrl}\n                    className='pdf-max-pages'\n                >\n                    <FormattedMessage\n                        id='pdf_preview.max_pages'\n                        defaultMessage='Download to read more pages'\n                    />\n                </a>,\n            );\n        }\n\n        return (\n            <div className='post-code'>\n                {pdfCanvases}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}