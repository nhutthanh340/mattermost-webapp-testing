{"version":3,"sources":["webpack:///./actions/views/mfa.js","webpack:///./components/common/back_button.tsx","webpack:///./components/mfa/confirm.jsx","webpack:///./components/mfa/mfa_controller/index.js","webpack:///./components/mfa/mfa_controller/mfa_controller.jsx","webpack:///./components/mfa/setup/index.js","webpack:///./components/mfa/setup/setup.jsx","webpack:///./components/widgets/icons/fa_logout_icon.jsx","webpack:///./images/logo.png"],"names":["activateMfa","code","dispatch","getState","currentUserId","getCurrentUserId","UserActions","deactivateMfa","generateMfaSecret","BackButton","React","PureComponent","render","props","onClick","url","title","toString","KeyCodes","Constants","Confirm","e","preventDefault","redirectUserToDefaultTeam","isKeyPressed","ENTER","submit","componentDidMount","document","body","addEventListener","onKeyPress","componentWillUnmount","removeEventListener","mapStateToProps","state","license","getLicense","config","getConfig","mfa","MFA","enableMultifactorAuthentication","EnableMultifactorAuthentication","enforceMultifactorAuthentication","EnforceMultifactorAuthentication","connect","MFAController","emitUserLoggedOutEvent","classList","add","getElementById","history","push","remove","backButton","handleOnClick","logoImage","match","updateParent","propTypes","location","PropTypes","object","isRequired","children","node","bool","shape","string","siteName","SiteName","currentUser","getCurrentUser","mapDispatchToProps","actions","bindActionCreators","Setup","constructor","input","current","value","replace","length","setState","error","Utils","then","server_error_id","message","secret","qrCode","createRef","user","mfa_active","data","serverError","qr_code","formClass","errorContent","mfaRequired","style","id","t","defaultMessage","func","maxHeight","LogoutIcon"],"mappings":"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","file":"11.5edbd6405baeebc0aaae.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as UserActions from 'mattermost-redux/actions/users';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nexport function activateMfa(code) {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, true, code));\n    };\n}\n\nexport function deactivateMfa() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.updateUserMfa(currentUserId, false));\n    };\n}\n\nexport function generateMfaSecret() {\n    return (dispatch, getState) => {\n        const currentUserId = getCurrentUserId(getState());\n\n        return dispatch(UserActions.generateMfaSecret(currentUserId));\n    };\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport {isKeyPressed} from 'utils/utils.jsx';\n\nimport {redirectUserToDefaultTeam} from 'actions/global_actions.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nconst KeyCodes = Constants.KeyCodes;\n\nexport default class Confirm extends React.PureComponent {\n    componentDidMount() {\n        document.body.addEventListener('keydown', this.onKeyPress);\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('keydown', this.onKeyPress);\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        redirectUserToDefaultTeam();\n    }\n\n    onKeyPress = (e) => {\n        if (isKeyPressed(e, KeyCodes.ENTER)) {\n            this.submit(e);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    onKeyPress={this.onKeyPress}\n                    className='form-group'\n                >\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.confirm.complete'\n                            defaultMessage='**Set up complete!**'\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='mfa.confirm.secure'\n                            defaultMessage='Your account is now secure. Next time you sign in, you will be asked to enter a code from the Google Authenticator app on your phone.'\n                        />\n                    </p>\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.confirm.okay'\n                            defaultMessage='Okay'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport MFAController from './mfa_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const mfa = license.MFA === 'true';\n    const enableMultifactorAuthentication = config.EnableMultifactorAuthentication === 'true';\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        mfa,\n        enableMultifactorAuthentication,\n        enforceMultifactorAuthentication,\n    };\n}\n\nexport default connect(mapStateToProps)(MFAController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Route, Switch} from 'react-router-dom';\n\nimport {emitUserLoggedOutEvent} from 'actions/global_actions.jsx';\nimport logoImage from 'images/logo.png';\nimport BackButton from 'components/common/back_button';\nimport LogoutIcon from 'components/widgets/icons/fa_logout_icon';\n\nimport Setup from '../setup';\nimport Confirm from '../confirm';\n\nexport default class MFAController extends React.PureComponent {\n    componentDidMount() {\n        document.body.classList.add('sticky');\n        document.getElementById('root').classList.add('container-fluid');\n\n        if (!this.props.enableMultifactorAuthentication) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillUnmount() {\n        document.body.classList.remove('sticky');\n        document.getElementById('root').classList.remove('container-fluid');\n    }\n\n    handleOnClick = (e) => {\n        e.preventDefault();\n        emitUserLoggedOutEvent('/login');\n    }\n\n    render() {\n        let backButton;\n        if (this.props.mfa && this.props.enforceMultifactorAuthentication) {\n            backButton = (\n                <div className='signup-header'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleOnClick}\n                    >\n                        <LogoutIcon/>\n                        <FormattedMessage\n                            id='web.header.logout'\n                            defaultMessage='Logout'\n                        />\n                    </button>\n                </div>\n            );\n        } else {\n            backButton = (<BackButton/>);\n        }\n\n        return (\n            <div className='inner-wrap'>\n                <div className='row content'>\n                    <div>\n                        {backButton}\n                        <div className='col-sm-12'>\n                            <div className='signup-team__container'>\n                                <h3>\n                                    <FormattedMessage\n                                        id='mfa.setupTitle'\n                                        defaultMessage='Multi-factor Authentication Setup'\n                                    />\n                                </h3>\n                                <img\n                                    alt={'signup team logo'}\n                                    className='signup-team-logo'\n                                    src={logoImage}\n                                />\n                                <div id='mfa'>\n                                    <Switch>\n                                        <Route\n                                            path={`${this.props.match.url}/setup`}\n                                            render={(props) => (\n                                                <Setup\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                        <Route\n                                            path={`${this.props.match.url}/confirm`}\n                                            render={(props) => (\n                                                <Confirm\n                                                    state={this.state}\n                                                    updateParent={this.updateParent}\n                                                    {...props}\n                                                />\n                                            )}\n                                        />\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMFAController.propTypes = {\n    location: PropTypes.object.isRequired,\n    children: PropTypes.node,\n    mfa: PropTypes.bool.isRequired,\n    enableMultifactorAuthentication: PropTypes.bool.isRequired,\n    enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n\n    /*\n     * Object from react-router\n     */\n    match: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n    }).isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {activateMfa, generateMfaSecret} from 'actions/views/mfa';\n\nimport Setup from './setup.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enforceMultifactorAuthentication = config.EnforceMultifactorAuthentication === 'true';\n\n    return {\n        currentUser: getCurrentUser(state),\n        siteName,\n        enforceMultifactorAuthentication,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            activateMfa,\n            generateMfaSecret,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Setup);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nexport default class Setup extends React.PureComponent {\n    static propTypes = {\n        currentUser: PropTypes.object,\n        siteName: PropTypes.string,\n        enforceMultifactorAuthentication: PropTypes.bool.isRequired,\n        actions: PropTypes.shape({\n            activateMfa: PropTypes.func.isRequired,\n            generateMfaSecret: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {secret: '', qrCode: ''};\n\n        this.input = React.createRef();\n    }\n\n    componentDidMount() {\n        const user = this.props.currentUser;\n        if (!user || user.mfa_active) {\n            this.props.history.push('/');\n            return;\n        }\n\n        this.props.actions.generateMfaSecret().then(({data, error}) => {\n            if (error) {\n                this.setState({\n                    serverError: error.message,\n                });\n                return;\n            }\n\n            this.setState({\n                secret: data.secret,\n                qrCode: data.qr_code,\n            });\n        });\n    }\n\n    submit = (e) => {\n        e.preventDefault();\n        const code = this.input.current.value.replace(/\\s/g, '');\n        if (!code || code.length === 0) {\n            this.setState({error: Utils.localizeMessage('mfa.setup.codeError', 'Please enter the code from Google Authenticator.')});\n            return;\n        }\n\n        this.setState({error: null});\n\n        this.props.actions.activateMfa(code).then(({error}) => {\n            if (error) {\n                if (error.server_error_id === 'ent.mfa.activate.authenticate.app_error') {\n                    this.setState({\n                        error: Utils.localizeMessage('mfa.setup.badCode', 'Invalid code. If this issue persists, contact your System Administrator.'),\n                    });\n                } else {\n                    this.setState({\n                        error: error.message,\n                    });\n                }\n\n                return;\n            }\n\n            this.props.history.push('/mfa/confirm');\n        });\n    }\n\n    render() {\n        let formClass = 'form-group';\n        let errorContent;\n        if (this.state.error) {\n            errorContent = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n            formClass += ' has-error';\n        }\n\n        let mfaRequired;\n        if (this.props.enforceMultifactorAuthentication) {\n            mfaRequired = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='mfa.setup.required'\n                        defaultMessage='**Multi-factor authentication is required on {siteName}.**'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div>\n                <form\n                    onSubmit={this.submit}\n                    className={formClass}\n                >\n                    {mfaRequired}\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step1'\n                            defaultMessage=\"**Step 1: **On your phone, download Google Authenticator from [iTunes](!https://itunes.apple.com/us/app/google-authenticator/id388497605?mt=8') or [Google Play](!https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl=en)\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step2'\n                            defaultMessage='**Step 2: **Use Google Authenticator to scan this QR code, or manually type in the secret key'\n                        />\n                    </p>\n                    <div className='form-group'>\n                        <div className='col-sm-12'>\n                            <img\n                                alt={'qr code image'}\n                                style={style.qrCode}\n                                src={'data:image/png;base64,' + this.state.qrCode}\n                            />\n                        </div>\n                    </div>\n                    <br/>\n                    <div className='form-group'>\n                        <p className='col-sm-12'>\n                            <FormattedMessage\n                                id='mfa.setup.secret'\n                                defaultMessage='Secret: {secret}'\n                                values={{\n                                    secret: this.state.secret,\n                                }}\n                            />\n                        </p>\n                    </div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='mfa.setup.step3'\n                            defaultMessage='**Step 3: **Enter the code generated by Google Authenticator'\n                        />\n                    </p>\n                    <p>\n                        <LocalizedInput\n                            ref={this.input}\n                            className='form-control'\n                            placeholder={{id: t('mfa.setup.code'), defaultMessage: 'MFA Code'}}\n                            autoFocus={true}\n                        />\n                    </p>\n                    {errorContent}\n                    <button\n                        type='submit'\n                        className='btn btn-primary'\n                    >\n                        <FormattedMessage\n                            id='mfa.setup.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    qrCode: {maxHeight: 170},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class LogoutIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.logout'\n                defaultMessage='Logout Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-1x fa-angle-left'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/6ff072d843f837505f68ad89158fd0b0.png\";"],"sourceRoot":""}