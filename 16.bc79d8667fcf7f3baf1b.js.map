{"version":3,"sources":["webpack:///./components/error_page/error_link.tsx","webpack:///./components/error_page/error_message.tsx","webpack:///./components/error_page/error_page.tsx","webpack:///./components/error_page/error_title.tsx","webpack:///./components/error_page/index.tsx","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":["ErrorLink","url","messageId","defaultMessage","defaultProps","ErrorMessage","type","message","service","isGuest","errorMessage","ErrorPageTypes","LOCAL_STORAGE","PERMALINK_NOT_FOUND","TEAM_NOT_FOUND","CHANNEL_NOT_FOUND","OAUTH_MISSING_CODE","link","t","OAUTH_ACCESS_DENIED","OAUTH_INVALID_PARAM","PAGE_NOT_FOUND","ErrorPage","React","PureComponent","componentDidMount","document","body","setAttribute","componentWillUnmount","removeAttribute","render","props","params","URLSearchParams","location","search","signature","get","trustParams","delete","key","asymmetricSigningPublicKey","keyPEM","verify","crypto","createVerify","update","toString","title","returnTo","backButton","siteName","defaultChannelName","Constants","DEFAULT_CHANNEL_UI_NAME","ErrorTitle","errorTitle","Utils","mapStateToProps","state","config","getConfig","user","getCurrentUser","SiteName","AsymmetricSigningPublicKey","Boolean","connect"],"mappings":"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","file":"16.bc79d8667fcf7f3baf1b.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    url: string;\n    messageId: string;\n    defaultMessage: string;\n}\n\nconst ErrorLink: React.FC<Props> = ({url, messageId, defaultMessage}: Props) => {\n    return (\n        <a\n            href={url}\n            rel='noopener noreferrer'\n            target='_blank'\n        >\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={defaultMessage}\n            />\n        </a>\n    );\n};\n\nErrorLink.defaultProps = {\n    url: '',\n    messageId: '',\n    defaultMessage: '',\n};\n\nexport default ErrorLink;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nimport ErrorLink from './error_link';\n\ntype Props = {\n    type?: string | null;\n    message?: string;\n    service?: string;\n    isGuest?: boolean;\n}\n\nconst ErrorMessage: React.FC<Props> = ({type, message, service, isGuest}: Props) => {\n    let errorMessage = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorMessage = (\n                <div>\n                    <FormattedMessage\n                        id='error.local_storage.message'\n                        defaultMessage='Mattermost was unable to load because a setting in your browser prevents the use of its local storage features. To allow Mattermost to load, try the following actions:'\n                    />\n                    <ul>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help1'\n                                defaultMessage='Enable cookies'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help2'\n                                defaultMessage='Turn off private browsing'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='error.local_storage.help3'\n                                defaultMessage='Use a supported browser (IE 11, Chrome 61+, Firefox 60+, Safari 12+, Edge 42+)'\n                            />\n                        </li>\n                    </ul>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='permalink.error.access'\n                        defaultMessage='Permalink belongs to a deleted message or to a channel to which you do not have access.'\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.team_not_found.message'\n                        defaultMessage=\"The team you're requesting is private or does not exist. Please contact your Administrator for an invitation.\"\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorMessage = (\n                <p>\n                    {isGuest ? (\n                        <FormattedMessage\n                            id='error.channel_not_found.message_guest'\n                            defaultMessage='Your guest account has no channels assigned. Please contact an administrator.'\n                        />\n                    ) : (\n                        <FormattedMessage\n                            id='error.channel_not_found.message'\n                            defaultMessage=\"The channel you're requesting is private or does not exist. Please contact an Administrator to be added to the channel.\"\n                        />\n\n                    )}\n                </p>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorMessage = (\n                <div>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code'\n                            defaultMessage='The service provider {service} did not provide an authorization code in the redirect URL.'\n                            values={{\n                                service,\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.google'\n                            defaultMessage='For {link} make sure your administrator enabled the Google+ API.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-google.html'}\n                                        messageId={t('error.oauth_missing_code.google.link')}\n                                        defaultMessage={'Google Apps'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.office365'\n                            defaultMessage='For {link} make sure the administrator of your Microsoft organization has enabled the Mattermost app.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-office.html'}\n                                        messageId={t('error.oauth_missing_code.office365.link')}\n                                        defaultMessage={'Office 365'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.gitlab'\n                            defaultMessage='For {link} please make sure you followed the setup instructions.'\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://docs.mattermost.com/deployment/sso-gitlab.html'}\n                                        messageId={t('error.oauth_missing_code.gitlab.link')}\n                                        defaultMessage={'GitLab'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='error.oauth_missing_code.forum'\n                            defaultMessage=\"If you reviewed the above and are still having trouble with configuration, you may post in our {link} where we'll be happy to help with issues during setup.\"\n                            values={{\n                                link: (\n                                    <ErrorLink\n                                        url={'https://forum.mattermost.org/c/trouble-shoot'}\n                                        messageId={t('error.oauth_missing_code.forum.link')}\n                                        defaultMessage={'Troubleshooting forum'}\n                                    />\n                                ),\n                            }}\n                        />\n                    </p>\n                </div>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.oauth_access_denied'\n                        defaultMessage='You must authorize Mattermost to log in with {service}.'\n                        values={{\n                            service,\n                        }}\n                    />\n                </p>\n            );\n            break;\n        case ErrorPageTypes.OAUTH_INVALID_PARAM:\n            errorMessage = (\n                <p>\n                    {message}\n                </p>\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorMessage = (\n                <p>\n                    <FormattedMessage\n                        id='error.not_found.message'\n                        defaultMessage='The page you were trying to reach does not exist'\n                    />\n                </p>\n            );\n        }\n    } else if (message) {\n        errorMessage = (\n            <p>\n                {message}\n            </p>\n        );\n    } else {\n        errorMessage = (\n            <p>\n                <FormattedMessage\n                    id='error.generic.message'\n                    defaultMessage='An error has occurred.'\n                />\n            </p>\n        );\n    }\n\n    return errorMessage;\n};\n\nexport default ErrorMessage;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {ErrorPageTypes, Constants} from 'utils/constants';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport ErrorTitle from './error_title';\nimport ErrorMessage from './error_message';\n\ntype Location = {\n    search: string;\n}\n\ntype Props = {\n    location: Location;\n    asymmetricSigningPublicKey?: string;\n    siteName?: string;\n    isGuest?: boolean;\n}\n\nexport default class ErrorPage extends React.PureComponent<Props> {\n    public componentDidMount() {\n        document.body.setAttribute('class', 'sticky error');\n    }\n\n    public componentWillUnmount() {\n        document.body.removeAttribute('class');\n    }\n\n    public render() {\n        const {isGuest} = this.props;\n        const params: URLSearchParams = new URLSearchParams(this.props.location.search);\n        const signature = params.get('s');\n\n        let trustParams = false;\n        if (signature) {\n            params.delete('s');\n\n            const key = this.props.asymmetricSigningPublicKey;\n            const keyPEM = '-----BEGIN PUBLIC KEY-----\\n' + key + '\\n-----END PUBLIC KEY-----';\n\n            const verify = crypto.createVerify('sha256');\n            verify.update('/error?' + params.toString());\n            trustParams = verify.verify(keyPEM, signature, 'base64');\n        }\n\n        const type = params.get('type');\n        const title = (trustParams && params.get('title')) || '';\n        const message = (trustParams && params.get('message')) || '';\n        const service = (trustParams && params.get('service')) || '';\n        const returnTo = (trustParams && params.get('returnTo')) || '';\n\n        let backButton;\n        if (type === ErrorPageTypes.PERMALINK_NOT_FOUND && returnTo) {\n            backButton = (\n                <Link to={returnTo}>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to Mattermost'\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.TEAM_NOT_FOUND) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.CHANNEL_NOT_FOUND && isGuest) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.channelNotFound.guest_link'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.CHANNEL_NOT_FOUND) {\n            backButton = (\n                <Link to={params.get('returnTo') as string}>\n                    <FormattedMessage\n                        id='error.channelNotFound.link'\n                        defaultMessage='Back to {defaultChannelName}'\n                        values={{\n                            defaultChannelName: Constants.DEFAULT_CHANNEL_UI_NAME,\n                        }}\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.OAUTH_ACCESS_DENIED || type === ErrorPageTypes.OAUTH_MISSING_CODE) {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link_login'\n                        defaultMessage='Back to Login Page'\n                    />\n                </Link>\n            );\n        } else if (type === ErrorPageTypes.OAUTH_INVALID_PARAM) {\n            backButton = null;\n        } else {\n            backButton = (\n                <Link to='/'>\n                    <FormattedMessage\n                        id='error.generic.link'\n                        defaultMessage='Back to {siteName}'\n                        values={{\n                            siteName: this.props.siteName,\n                        }}\n                    />\n                </Link>\n            );\n        }\n\n        return (\n            <div className='container-fluid'>\n                <div className='error__container'>\n                    <div className='error__icon'>\n                        <WarningIcon/>\n                    </div>\n                    <h2>\n                        <ErrorTitle\n                            type={type}\n                            title={title}\n                        />\n                    </h2>\n                    <ErrorMessage\n                        type={type}\n                        message={message}\n                        service={service}\n                        isGuest={isGuest}\n                    />\n                    {backButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ErrorPageTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\ntype Props = {\n    type?: string | null;\n    title: string;\n}\n\nconst ErrorTitle: React.FC<Props> = ({type, title}: Props) => {\n    let errorTitle = null;\n    if (type) {\n        switch (type) {\n        case ErrorPageTypes.LOCAL_STORAGE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.local_storage.title'\n                    defaultMessage='Cannot Load Mattermost'\n                />\n            );\n            break;\n        case ErrorPageTypes.PERMALINK_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='permalink.error.title'\n                    defaultMessage='Message Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_ACCESS_DENIED:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_access_denied.title'\n                    defaultMessage='Authorization Error'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_MISSING_CODE:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_missing_code.title'\n                    defaultMessage='Mattermost Needs Your Help'\n                />\n            );\n            break;\n        case ErrorPageTypes.OAUTH_INVALID_PARAM:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.oauth_invalid_param.title'\n                    defaultMessage='OAuth Parameter Error'\n                />\n            );\n            break;\n        case ErrorPageTypes.TEAM_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.team_not_found.title'\n                    defaultMessage='Team Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.CHANNEL_NOT_FOUND:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.channel_not_found.title'\n                    defaultMessage='Channel Not Found'\n                />\n            );\n            break;\n        case ErrorPageTypes.PAGE_NOT_FOUND:\n        default:\n            errorTitle = (\n                <FormattedMessage\n                    id='error.not_found.title'\n                    defaultMessage='Page Not Found'\n                />\n            );\n        }\n    } else if (title) {\n        errorTitle = title;\n    } else {\n        errorTitle = Utils.localizeMessage('error.generic.title', 'Error');\n    }\n\n    return errorTitle;\n};\n\nexport default ErrorTitle;","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/common';\n\nimport {GlobalState} from 'types/store';\n\nimport {isGuest} from 'utils/utils.jsx';\n\nimport ErrorPage from './error_page';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const user = getCurrentUser(state);\n\n    return {\n        siteName: config.SiteName,\n        asymmetricSigningPublicKey: config.AsymmetricSigningPublicKey,\n        isGuest: Boolean(user && isGuest(user)),\n    };\n}\n\nexport default connect(mapStateToProps)(ErrorPage);\n","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}