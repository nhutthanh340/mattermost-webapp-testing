{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/signup/signup_controller/index.js","webpack:///./components/signup/signup_controller/signup_controller.jsx","webpack:///./images/logo.png"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","toString","mapStateToProps","state","ownProps","license","getLicense","config","getConfig","isLicensed","IsLicensed","enableOpenServer","EnableOpenServer","noAccounts","NoAccounts","enableSignUpWithEmail","EnableSignUpWithEmail","enableSignUpWithGitLab","EnableSignUpWithGitLab","enableSignUpWithGoogle","EnableSignUpWithGoogle","enableSignUpWithOffice365","EnableSignUpWithOffice365","enableLDAP","EnableLdap","enableSAML","EnableSaml","samlLoginButtonText","SamlLoginButtonText","ldapLoginFieldName","LdapLoginFieldName","siteName","SiteName","usedBefore","location","search","params","URLSearchParams","token","get","getGlobalItem","loggedIn","Boolean","getCurrentUserId","mapDispatchToProps","dispatch","actions","bindActionCreators","removeGlobalItem","getTeamInviteInfo","addUserToTeamFromInvite","connect","SignupController","constructor","inviteId","data","team","error","browserHistory","push","name","Constants","DEFAULT_CHANNEL","handleInvalidInvite","setState","serverError","loading","err","server_error_id","message","noOpenServerError","signupControls","window","id","t","defaultMessage","Client4","getOAuthRoute","append","query","LDAPText","length","signupDisabledError","componentDidMount","userLoggedIn","getInviteInfo","GlobalActions","renderSignupControls","logoImage","PropTypes","object","bool","isRequired","string","shape","func"],"mappings":"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","file":"21.615d2ed84431f49ab76f.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getTeamInviteInfo} from 'mattermost-redux/actions/teams';\n\nimport {getGlobalItem} from 'selectors/storage';\nimport {removeGlobalItem} from 'actions/storage';\nimport {addUserToTeamFromInvite} from 'actions/team_actions';\n\nimport SignupController from './signup_controller.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n\n    const isLicensed = license && license.IsLicensed === 'true';\n    const enableOpenServer = config.EnableOpenServer === 'true';\n    const noAccounts = config.NoAccounts === 'true';\n    const enableSignUpWithEmail = config.EnableSignUpWithEmail === 'true';\n    const enableSignUpWithGitLab = config.EnableSignUpWithGitLab === 'true';\n    const enableSignUpWithGoogle = config.EnableSignUpWithGoogle === 'true';\n    const enableSignUpWithOffice365 = config.EnableSignUpWithOffice365 === 'true';\n    const enableLDAP = config.EnableLdap === 'true';\n    const enableSAML = config.EnableSaml === 'true';\n    const samlLoginButtonText = config.SamlLoginButtonText;\n    const ldapLoginFieldName = config.LdapLoginFieldName;\n    const siteName = config.SiteName;\n\n    let usedBefore;\n    if (ownProps.location.search) {\n        const params = new URLSearchParams(ownProps.location.search);\n        let token = params.get('t');\n        if (token == null) {\n            token = '';\n        }\n        usedBefore = getGlobalItem(state, token, null);\n    }\n\n    return {\n        loggedIn: Boolean(getCurrentUserId(state)),\n        isLicensed,\n        enableOpenServer,\n        noAccounts,\n        enableSignUpWithEmail,\n        enableSignUpWithGitLab,\n        enableSignUpWithGoogle,\n        enableSignUpWithOffice365,\n        enableLDAP,\n        enableSAML,\n        samlLoginButtonText,\n        ldapLoginFieldName,\n        siteName,\n        usedBefore,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            removeGlobalItem,\n            getTeamInviteInfo,\n            addUserToTeamFromInvite,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupController);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {browserHistory} from 'utils/browser_history';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport logoImage from 'images/logo.png';\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button';\nimport FormError from 'components/form_error';\nimport LocalizedIcon from 'components/localized_icon';\n\nimport LoadingScreen from 'components/loading_screen';\nimport {Constants} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nexport default class SignupController extends React.PureComponent {\n    static propTypes = {\n        location: PropTypes.object,\n        loggedIn: PropTypes.bool.isRequired,\n        isLicensed: PropTypes.bool.isRequired,\n        enableOpenServer: PropTypes.bool.isRequired,\n        noAccounts: PropTypes.bool.isRequired,\n        enableSignUpWithEmail: PropTypes.bool.isRequired,\n        enableSignUpWithGitLab: PropTypes.bool.isRequired,\n        enableSignUpWithGoogle: PropTypes.bool.isRequired,\n        enableSignUpWithOffice365: PropTypes.bool.isRequired,\n        enableLDAP: PropTypes.bool.isRequired,\n        enableSAML: PropTypes.bool.isRequired,\n        samlLoginButtonText: PropTypes.string,\n        siteName: PropTypes.string,\n        usedBefore: PropTypes.string,\n        ldapLoginFieldName: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            removeGlobalItem: PropTypes.func.isRequired,\n            getTeamInviteInfo: PropTypes.func.isRequired,\n            addUserToTeamFromInvite: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        let loading = false;\n        let serverError = '';\n        let noOpenServerError = false;\n        let usedBefore = false;\n\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            let token = params.get('t');\n            if (token == null) {\n                token = '';\n            }\n            let inviteId = params.get('id');\n            if (inviteId == null) {\n                inviteId = '';\n            }\n\n            if (inviteId) {\n                loading = true;\n            } else if (!this.props.loggedIn) {\n                usedBefore = props.usedBefore;\n            } else if (!inviteId && !this.props.enableOpenServer && !this.props.noAccounts) {\n                noOpenServerError = true;\n                serverError = (\n                    <FormattedMessage\n                        id='signup_user_completed.no_open_server'\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                    />\n                );\n            }\n        }\n\n        this.state = {\n            loading,\n            serverError,\n            noOpenServerError,\n            usedBefore,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.removeGlobalItem('team');\n        if (this.props.location.search) {\n            const params = new URLSearchParams(this.props.location.search);\n            const token = params.get('t') || '';\n            const inviteId = params.get('id') || '';\n\n            const userLoggedIn = this.props.loggedIn;\n\n            if ((inviteId || token) && userLoggedIn) {\n                this.addUserToTeamFromInvite(token, inviteId);\n            } else if (inviteId) {\n                this.getInviteInfo(inviteId);\n            } else if (userLoggedIn) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n    }\n\n    addUserToTeamFromInvite = async (token, inviteId) => {\n        const {data: team, error} = await this.props.actions.addUserToTeamFromInvite(token, inviteId);\n        if (team) {\n            browserHistory.push('/' + team.name + `/channels/${Constants.DEFAULT_CHANNEL}`);\n        } else if (error) {\n            this.handleInvalidInvite(error);\n        }\n    }\n\n    getInviteInfo = async (inviteId) => {\n        const {data, error} = await this.props.actions.getTeamInviteInfo(inviteId);\n        if (data) {\n            this.setState({\n                serverError: '',\n                loading: false,\n            });\n        } else if (error) {\n            this.handleInvalidInvite(error);\n        }\n    }\n\n    handleInvalidInvite = (err) => {\n        let serverError;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else if (err.server_error_id === 'api.team.add_user_to_team_from_invite.guest.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                />\n            );\n        }\n\n        this.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError,\n        });\n    }\n\n    renderSignupControls = () => {\n        let signupControls = [];\n\n        if (this.props.enableSignUpWithEmail) {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full email'\n                    key='email'\n                    to={'/signup_email' + window.location.search}\n                >\n                    <span>\n                        <LocalizedIcon\n                            className='icon fa fa-envelope'\n                            component='span'\n                            title={{id: t('signup.email.icon'), defaultMessage: 'Email Icon'}}\n                        />\n                        <FormattedMessage\n                            id='signup.email'\n                            defaultMessage='Email and Password'\n                        />\n                    </span>\n                </Link>,\n            );\n        }\n\n        if (this.props.enableSignUpWithGitLab) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full gitlab'\n                    key='gitlab'\n                    href={Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.gitlab'\n                                defaultMessage='GitLab Single Sign-On'\n                            />\n                        </span>\n                    </span>\n                </a>,\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSignUpWithGoogle) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full google'\n                    key='google'\n                    href={Client4.getOAuthRoute() + '/google/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.google'\n                                defaultMessage='Google Account'\n                            />\n                        </span>\n                    </span>\n                </a>,\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSignUpWithOffice365) {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full office365'\n                    key='office365'\n                    href={Client4.getOAuthRoute() + '/office365/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.office365'\n                                defaultMessage='Office 365'\n                            />\n                        </span>\n                    </span>\n                </a>,\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableLDAP) {\n            const params = new URLSearchParams(this.props.location.search);\n            params.append('extra', 'create_ldap');\n            const query = '?' + params.toString();\n\n            let LDAPText = (\n                <FormattedMessage\n                    id='signup.ldap'\n                    defaultMessage='AD/LDAP Credentials'\n                />\n            );\n            if (this.props.ldapLoginFieldName) {\n                LDAPText = this.props.ldapLoginFieldName;\n            }\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full ldap'\n                    key='ldap'\n                    to={'/login' + query}\n                >\n                    <span>\n                        <LocalizedIcon\n                            className='icon fa fa-folder-open fa--margin-top'\n                            component='span'\n                            title={{id: t('signup.ldap.icon'), defaultMessage: 'AD/LDAP Icon'}}\n                        />\n                        <span>\n                            {LDAPText}\n                        </span>\n                    </span>\n                </Link>,\n            );\n        }\n\n        if (this.props.isLicensed && this.props.enableSAML) {\n            let query = '';\n            if (window.location.search) {\n                query = '&action=signup';\n            } else {\n                query = '?action=signup';\n            }\n\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full saml'\n                    key='saml'\n                    to={'/login/sso/saml' + window.location.search + query}\n                >\n                    <span>\n                        <LocalizedIcon\n                            className='icon fa fa-lock fa--margin-top'\n                            component='span'\n                            title={{id: t('signup.saml.icon'), defaultMessage: 'SAML Icon'}}\n                        />\n                        <span>\n                            {this.props.samlLoginButtonText}\n                        </span>\n                    </span>\n                </Link>,\n            );\n        }\n\n        if (signupControls.length === 0) {\n            const signupDisabledError = (\n                <FormattedMessage\n                    id='signup_user_completed.none'\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\n                />\n            );\n            signupControls = (\n                <FormError\n                    error={signupDisabledError}\n                    margin={true}\n                />\n            );\n        } else if (signupControls.length === 1) {\n            if (this.props.enableSignUpWithEmail) {\n                return browserHistory.push('/signup_email' + window.location.search);\n            } else if (this.props.isLicensed && this.props.enableLDAP) {\n                return browserHistory.push('/login' + window.location.search);\n            }\n        }\n\n        return signupControls;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        if (this.state.usedBefore) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='signup_user_completed.expired'\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\n                    />\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let signupControls;\n        if (this.state.noOpenServerError || this.state.usedBefore) {\n            signupControls = null;\n        } else {\n            signupControls = this.renderSignupControls();\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            alt={'signup team logo'}\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{this.props.siteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                />\n                            </h4>\n                            <div className='mt-8'>\n                                <h5><strong>\n                                    <FormattedMessage\n                                        id='signup.title'\n                                        defaultMessage='Create an account with:'\n                                    />\n                                </strong></h5>\n                            </div>\n                            {signupControls}\n                            {serverError}\n                        </div>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login' + this.props.location.search}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/6ff072d843f837505f68ad89158fd0b0.png\";"],"sourceRoot":""}