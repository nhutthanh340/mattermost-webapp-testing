{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/password_reset_send_link/index.js","webpack:///./components/password_reset_send_link/password_reset_send_link.js"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","toString","mapDispatchToProps","dispatch","actions","bindActionCreators","sendPasswordResetEmail","connect","PasswordResetSendLink","error","updateText","createRef","e","preventDefault","email","emailInput","current","value","trim","toLowerCase","isEmail","setState","data","resetForm","hidden","message","update_text","state","formClass","handleSendLink","id","t","defaultMessage","PropTypes","shape","func","isRequired"],"mappings":"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","file":"22.ce81a1c4628626f445a7.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\nconst mapDispatchToProps = (dispatch) => ({\n    actions: bindActionCreators({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport BackButton from 'components/common/back_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nexport default class PasswordResetSendLink extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            sendPasswordResetEmail: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef();\n    emailInput = React.createRef();\n\n    handleSendLink = async (e) => {\n        e.preventDefault();\n\n        const email = this.emailInput.current.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                update_text: null,\n            });\n        }\n    }\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <LocalizedInput\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    placeholder={{id: t('password_send.email'), defaultMessage: 'Email'}}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            {error}\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}