{"version":3,"sources":["webpack:///./actions/integration_actions.jsx","webpack:///./components/backstage/backstage_controller.jsx","webpack:///./components/backstage/components/backstage_category.jsx","webpack:///./components/backstage/components/backstage_header.jsx","webpack:///./components/backstage/components/backstage_list.jsx","webpack:///./components/backstage/components/backstage_navbar.jsx","webpack:///./components/backstage/components/backstage_section.jsx","webpack:///./components/backstage/components/backstage_sidebar.jsx","webpack:///./components/backstage/index.js","webpack:///./components/channel_select/channel_select.jsx","webpack:///./components/channel_select/index.js","webpack:///./components/copy_text.tsx","webpack:///./components/delete_modal_trigger.jsx","webpack:///./components/emoji/add_emoji/add_emoji.jsx","webpack:///./components/emoji/add_emoji/index.js","webpack:///./components/emoji/delete_emoji_modal.jsx","webpack:///./components/emoji/emoji_list/emoji_list.jsx","webpack:///./components/emoji/emoji_list/index.js","webpack:///./components/emoji/emoji_list_item/emoji_list_item.jsx","webpack:///./components/emoji/emoji_list_item/index.js","webpack:///./components/emoji/emoji_page.jsx","webpack:///./components/emoji/index.js","webpack:///./components/integrations/abstract_command.jsx","webpack:///./components/integrations/abstract_incoming_webhook.jsx","webpack:///./components/integrations/abstract_oauth_app.jsx","webpack:///./components/integrations/abstract_outgoing_webhook.jsx","webpack:///./components/integrations/add_command/add_command.jsx","webpack:///./components/integrations/add_command/index.js","webpack:///./components/integrations/add_incoming_webhook/add_incoming_webhook.jsx","webpack:///./components/integrations/add_incoming_webhook/index.js","webpack:///./components/integrations/add_oauth_app/add_oauth_app.jsx","webpack:///./components/integrations/add_oauth_app/index.js","webpack:///./components/integrations/add_outgoing_webhook/add_outgoing_webhook.jsx","webpack:///./components/integrations/add_outgoing_webhook/index.js","webpack:///./components/integrations/bots/add_bot/add_bot.jsx","webpack:///./components/integrations/bots/add_bot/index.js","webpack:///./components/integrations/bots/bot.jsx","webpack:///./components/integrations/bots/bots.jsx","webpack:///./components/integrations/bots/index.js","webpack:///./components/integrations/commands_container/commands_container.jsx","webpack:///./components/integrations/commands_container/index.js","webpack:///./components/integrations/confirm_integration/confirm_integration.jsx","webpack:///./components/integrations/confirm_integration/index.js","webpack:///./components/integrations/delete_integration.jsx","webpack:///./components/integrations/edit_command/edit_command.jsx","webpack:///./components/integrations/edit_command/index.js","webpack:///./components/integrations/edit_incoming_webhook/edit_incoming_webhook.jsx","webpack:///./components/integrations/edit_incoming_webhook/index.js","webpack:///./components/integrations/edit_oauth_app/edit_oauth_app.jsx","webpack:///./components/integrations/edit_oauth_app/index.js","webpack:///./components/integrations/edit_outgoing_webhook/edit_outgoing_webhook.jsx","webpack:///./components/integrations/edit_outgoing_webhook/index.js","webpack:///./components/integrations/index.js","webpack:///./components/integrations/installed_command.jsx","webpack:///./components/integrations/installed_commands/index.js","webpack:///./components/integrations/installed_commands/installed_commands.jsx","webpack:///./components/integrations/installed_incoming_webhook.jsx","webpack:///./components/integrations/installed_incoming_webhooks/index.js","webpack:///./components/integrations/installed_incoming_webhooks/installed_incoming_webhooks.jsx","webpack:///./components/integrations/installed_oauth_app/index.js","webpack:///./components/integrations/installed_oauth_app/installed_oauth_app.jsx","webpack:///./components/integrations/installed_oauth_apps/index.js","webpack:///./components/integrations/installed_oauth_apps/installed_oauth_apps.jsx","webpack:///./components/integrations/installed_outgoing_webhook.jsx","webpack:///./components/integrations/installed_outgoing_webhooks/index.js","webpack:///./components/integrations/installed_outgoing_webhooks/installed_outgoing_webhooks.jsx","webpack:///./components/integrations/integration_option.jsx","webpack:///./components/integrations/integrations.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/any_team_permission_gate.jsx","webpack:///./components/permissions_gates/any_team_permission_gate/index.js","webpack:///./components/widgets/icons/fa_next_icon.tsx","webpack:///./components/widgets/icons/fa_previous_icon.tsx","webpack:///./components/widgets/icons/fa_search_icon.jsx","webpack:///./images/bot_default_icon.png","webpack:///./images/incoming_webhook.jpg","webpack:///./images/oauth_icon.png","webpack:///./images/outgoing_webhook.jpg","webpack:///./images/slash_command_icon.jpg","webpack:///./node_modules/mattermost-redux/actions/bots.js","webpack:///./node_modules/mattermost-redux/selectors/entities/bots.js","webpack:///./node_modules/mattermost-redux/selectors/entities/integrations.js"],"names":["DEFAULT_PAGE_SIZE","loadIncomingHooksAndProfilesForTeam","teamId","page","perPage","dispatch","data","IntegrationActions","loadProfilesForIncomingHooks","hooks","getState","state","profilesToLoad","i","length","hook","getUser","user_id","list","Object","keys","getProfilesByIds","loadOutgoingHooksAndProfilesForTeam","loadProfilesForOutgoingHooks","creator_id","loadCommandsAndProfilesForTeam","loadProfilesForCommands","commands","command","loadOAuthAppsAndProfiles","loadProfilesForOAuthApps","apps","app","getYoutubeVideoInfo","googleKey","videoId","success","error","request","get","query","part","id","key","end","err","res","body","console","BackstageRoute","component","Component","extraProps","rest","props","BackstageController","React","PureComponent","listRef","scrollTop","ref","render","team","user","scrollToTop","siteName","setListRef","enableCustomEmoji","enableIncomingWebhooks","enableOutgoingWebhooks","enableCommands","enableOAuthServiceProvider","canCreateOrDeleteCustomEmoji","canManageIntegrations","Integrations","match","url","InstalledIncomingWebhooks","AddIncomingWehook","EditIncomingWebhook","InstalledOutgoingWebhooks","AddOutgoingWebhook","EditOutgoingWebhook","CommandsContainer","InstalledOauthApps","AddOauthApp","EditOauthApp","ConfirmIntegration","Emoji","AddEmoji","AddBot","Bots","PropTypes","object","shape","string","isRequired","bool","BackstageCategory","propTypes","name","title","node","icon","parentLink","children","arrayOf","element","defaultProps","contextTypes","router","link","Children","map","child","cloneElement","BackstageHeader","forEach","index","push","t","defaultMessage","BackstageList","constructor","e","setState","filter","target","value","toLowerCase","loading","hasChildren","emptyText","emptyTextSearch","values","searchTerm","addLink","addText","addButtonId","header","searchPlaceholder","updateFilter","style","search","helpText","oneOfType","func","Utils","flexGrow","flexShrink","BackstageNavbar","BackstageSection","subsection","getLink","clonedChildren","className","BackstageSidebar","renderCustomEmoji","renderIntegrations","incomingWebhooks","Permissions","MANAGE_INCOMING_WEBHOOKS","outgoingWebhooks","MANAGE_OUTGOING_WEBHOOKS","MANAGE_SLASH_COMMANDS","oauthApps","MANAGE_OAUTH","botAccounts","mapStateToProps","getCurrentUser","getCurrentTeam","config","getConfig","SiteName","EnableCustomEmoji","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","haveISystemPermission","permission","CREATE_EMOJIS","DELETE_EMOJIS","getMyTeams","haveITeamPermission","canManageTeamIntegrations","canManageSystemBots","MANAGE_BOTS","MANAGE_OTHERS_BOTS","withRouter","connect","ChannelSelect","channels","array","onChange","selectOpen","selectPrivate","selectDm","options","channel","channelName","display_name","type","Constants","OPEN_CHANNEL","PRIVATE_CHANNEL","DM_CHANNEL","getMyChannelsSorted","createSelector","getMyChannels","getCurrentUserLocale","locale","sort","sortChannelsByTypeAndDisplayName","bind","CopyText","preventDefault","copyToClipboard","document","queryCommandSupported","tooltip","idMessage","OVERLAY_TIME_DELAY","copyText","DeleteModalTrigger","showDeleteModal","onDelete","KeyCodes","ENTER","handleConfirm","TypeError","handleOpenModal","triggerTitle","modalTitle","modalMessage","modalConfirmButton","handleCancel","handleKeyDown","actions","emojiMap","image","saving","emoji","trim","startsWith","endsWith","substring","test","hasSystemEmoji","createCustomEmoji","message","browserHistory","files","imageUrl","reader","FileReader","onload","result","readAsDataURL","filename","preview","backgroundImage","handleSubmit","updateName","updateImage","localizeMessage","getEmojiMap","mapDispatchToProps","bindActionCreators","DeleteEmoji","EMOJI_PER_PAGE","EMOJI_SEARCH_DELAY_MILLISECONDS","EmojiList","next","nextLoading","getCustomEmojis","SORT_BY_NAME","then","missingPages","term","clearTimeout","searchTimeout","setTimeout","searchEmojis","searchCustomEmojis","em","emojiId","indexOf","newSearchEmojis","splice","componentDidMount","emojis","nextButton","previousButton","emojiIds","deleteFromSearch","pageStart","pageEnd","emojisToDisplay","slice","buttonContents","nextPage","previousPage","onSearchChange","getCustomEmojiIdsSortedByName","EmojiListItem","deleteCustomEmoji","creatorUsername","creatorDisplayName","deleteButton","currentUserId","handleDelete","DELETE_OTHERS_EMOJIS","Client4","getCustomEmojiImageUrl","currentTeam","ownProps","entities","customEmoji","creator","getDisplayNameByUser","username","getCurrentUserId","EmojiPage","teamDisplayName","updateTitle","loadRolesIfNeeded","componentDidUpdate","prevProps","teamName","general","REQUEST_POST","REQUEST_GET","AbstractCommand","displayName","description","trigger","method","iconUrl","icon_url","autocomplete","auto_complete","autocompleteHint","auto_complete_hint","autocompleteDescription","auto_complete_desc","clientError","triggerWord","substr","team_id","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","min","max","action","checked","getStateFromCommand","initialCommand","updateAutocompleteHint","updateAutocompleteDescription","updateDisplayName","updateDescription","updateTrigger","updateUrl","updateMethod","updateUsername","updateIconUrl","updateAutocomplete","serverError","footer","renderExtra","AbstractIncomingWebhook","channelId","channel_id","channelLocked","channel_locked","iconURL","getStateFromHook","initialHook","headerToRender","footerToRender","updateChannelId","updateChannelLocked","enablePostUsernameOverride","enablePostIconOverride","updateIconURL","AbstractOAuthApp","homepage","callbackUrls","callback_urls","join","is_trusted","has_icon","Boolean","refs","callbackUrl","split","src","Image","imageLoaded","getStateFromApp","initialApp","trusted","MANAGE_SYSTEM","updateTrusted","updateHomepage","updateCallbackUrls","AbstractOutgoingWebhook","triggerWords","trigger_words","contentType","content_type","triggerWhen","trigger_when","parseInt","contentTypeOption1","contentTypeOption2","updateContentType","updateTriggerWords","updateTriggerWhen","HEADER","FOOTER","LOADING","AddCommand","addCommand","AddIncomingWebhook","createIncomingHook","addIncomingHook","EnablePostUsernameOverride","EnablePostIconOverride","AddOAuthApp","addOAuthApp","addOAuthAppRequest","createOutgoingHook","addOutgoingHook","roleOptionSystemAdmin","roleOptionMember","role","postAll","postChannels","pictureFile","previewBlob","URL","createObjectURL","e2","orientation","FileUtils","orientationStyles","readAsArrayBuffer","BotDefaultIcon","roles","General","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","rolesResult","updateUserRoles","adding","AcceptedProfileImageTypes","includes","size","maxFileSize","bot","patchBot","imageResult","uploadProfileImage","setDefaultProfileImage","updateRoles","usernameError","createBot","token","tokenResult","createUserAccessToken","UserUtils","subtitle","buttonText","buttonActiveText","imageURL","removeImageIcon","setDefault","imageStyles","last_picture_update","updatePicture","editingUserHasManageSystem","updateRole","updatePostAll","updatePostChannels","number","botId","URLSearchParams","location","bots","getBotAccounts","MaxFileSize","matchesFilter","owner","ownerUsername","Bot","enableBot","disableBot","enableUserAccessToken","disableUserAccessToken","confirmingId","revokeUserAccessToken","closeConfirm","creatingTokenState","assign","tokenList","accessTokens","activeLink","disableClass","disabledText","is_active","confirmRevokeToken","openCreateToken","delete_at","handleCreateToken","handleUpdateDescription","closeCreateToken","revokeTokenConfirmed","owners","users","a","b","localeCompare","enabledBots","botToJSX","disabledBots","sections","loadBots","START_PAGE_NUM","PAGE_SIZE","promises","owner_id","getUserAccessTokensForUser","Promise","all","DisabledSection","hasDisabled","botsToDisplay","EnabledSection","createBots","siteURL","getSiteURL","EnableBotAccountCreation","botValues","reduce","UserSelectors","admin","userAccessTokensByUser","CommandRoute","InstalledCommands","EditCommand","getCommands","getUsers","incomingHooks","outgoingHooks","window","addEventListener","handleKeyPress","componentWillUnmount","removeEventListener","headerText","tokenText","incomingHook","outgoingHook","oauthApp","COMMAND","commandToken","INCOMING_WEBHOOK","incomingHookToken","OUTGOING_WEBHOOK","outgoingHookToken","OAUTH_APP","oauthAppToken","oauthAppSecret","client_secret","secret","BOT","botToken","botname","replace","ErrorPageTypes","PAGE_NOT_FOUND","getOAuthApps","getIncomingHooks","getOutgoingHooks","DeleteIntegration","messageId","newCommand","originalCommand","handleConfirmModal","submitCommand","showConfirmModal","editCommand","confirmButton","confirmTitle","confirmMessage","confirmModalDismissed","getCustomTeamCommands","commandId","newHook","submitHook","updateIncomingHook","getIncomingHook","hookId","editIncomingHook","integrations","EditOAuthApp","newApp","callbackUrlsSame","every","v","submitOAuthApp","editOAuthApp","getOAuthApp","oauthAppId","triggerWordsSame","updateOutgoingHook","getOutgoingHook","editOutgoingHook","InstalledCommand","onRegenToken","canChange","handleRegenToken","createAt","create_at","canManageOthersSlashCommands","MANAGE_OTHERS_SLASH_COMMANDS","regenCommandToken","deleteCommand","commandCompare","nameA","nameB","buildYourOwn","appDirectory","incomingWebhook","InstalledIncomingWebhook","incomingWebhookId","getCurrentTeamId","canManageOthersWebhooks","MANAGE_OTHERS_INCOMING_WEBHOOKS","getAllChannels","removeIncomingHook","Actions","displayNameA","channelA","displayNameB","incomingWebhookCompare","deleteIncomingWebhook","creatorName","InstalledOAuthApp","FAKE_SECRET","clientSecret","onRegenerateSecret","handleShowClientSecret","urls","isTrusted","showHide","handleHideClientSecret","regen","handleRegenerate","clientId","canManageOauth","regenOAuthAppSecret","deleteOAuthApp","InstalledOAuthApps","oauthAppCompare","integrationsEnabled","oauthApplications","outgoingWebhook","InstalledOutgoingWebhook","makeDisplayName","triggerWordsFull","triggerWordsStartsWith","MANAGE_OTHERS_OUTGOING_WEBHOOKS","removeOutgoingHook","regenOutgoingHookToken","channelB","outgoingWebhookCompare","regenOutgoingWebhookToken","IntegrationOption","currentSiteName","IncomingWebhookIcon","OutgoingWebhookIcon","SlashCommandIcon","OAuthIcon","BotAccountsIcon","AnyTeamPermissionGate","hasPermission","invert","permissions","teams","NextIcon","additionalClassName","PreviousIcon","SearchIcon"],"mappings":"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;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,gD;;;;;;;;;;;;ACA3B;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kEAAW;AAClC,qBAAqB,mBAAO,CAAC,8EAAiB;AAC9C,gBAAgB,mBAAO,CAAC,qEAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0BAA0B,UAAU;AACpC,6BAA6B,iCAAiC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gC;;;;;;;;;;;;ACnFa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gDAAO;AAC7B,iBAAiB,mBAAO,CAAC,qDAAU;AACnC,cAAc,mBAAO,CAAC,4EAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,6BAA6B,EAAE;AACpF,CAAC;AACD;AACA,+CAA+C;AAC/C,CAAC;AACD;AACA;AACA;AACA,KAAK,wBAAwB,qDAAqD,EAAE;AACpF,CAAC;AACD,wC","file":"8.dba7f9020a40db113a97.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport request from 'superagent';\nimport * as IntegrationActions from 'mattermost-redux/actions/integrations';\nimport {getProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nconst DEFAULT_PAGE_SIZE = 100;\n\nexport function loadIncomingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getIncomingHooks(teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForIncomingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForIncomingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.user_id)) {\n                profilesToLoad[hook.user_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOutgoingHooksAndProfilesForTeam(teamId, page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOutgoingHooks('', teamId, page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOutgoingHooks(data));\n        }\n    };\n}\n\nexport function loadProfilesForOutgoingHooks(hooks) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < hooks.length; i++) {\n            const hook = hooks[i];\n            if (!getUser(state, hook.creator_id)) {\n                profilesToLoad[hook.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadCommandsAndProfilesForTeam(teamId) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getCustomTeamCommands(teamId));\n        if (data) {\n            dispatch(loadProfilesForCommands(data));\n        }\n    };\n}\n\nexport function loadProfilesForCommands(commands) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < commands.length; i++) {\n            const command = commands[i];\n            if (!getUser(state, command.creator_id)) {\n                profilesToLoad[command.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function loadOAuthAppsAndProfiles(page = 0, perPage = DEFAULT_PAGE_SIZE) {\n    return async (dispatch) => {\n        const {data} = await dispatch(IntegrationActions.getOAuthApps(page, perPage));\n        if (data) {\n            dispatch(loadProfilesForOAuthApps(data));\n        }\n    };\n}\n\nexport function loadProfilesForOAuthApps(apps) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const profilesToLoad = {};\n        for (let i = 0; i < apps.length; i++) {\n            const app = apps[i];\n            if (!getUser(state, app.creator_id)) {\n                profilesToLoad[app.creator_id] = true;\n            }\n        }\n\n        const list = Object.keys(profilesToLoad);\n        if (list.length === 0) {\n            return;\n        }\n\n        dispatch(getProfilesByIds(list));\n    };\n}\n\nexport function getYoutubeVideoInfo(googleKey, videoId, success, error) {\n    request.get('https://www.googleapis.com/youtube/v3/videos').\n        query({part: 'snippet', id: videoId, key: googleKey}).\n        end((err, res) => {\n            if (err) {\n                return error(err);\n            }\n\n            if (!res.body) {\n                console.error('Missing response body for getYoutubeVideoInfo'); // eslint-disable-line no-console\n            }\n\n            return success(res.body);\n        });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Route, Switch} from 'react-router-dom';\n\nimport Bots from 'components/integrations/bots';\nimport AddBot from 'components/integrations/bots/add_bot';\n\nimport Pluggable from 'plugins/pluggable';\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport Integrations from 'components/integrations';\nimport Emoji from 'components/emoji';\nimport AddEmoji from 'components/emoji/add_emoji';\nimport InstalledIncomingWebhooks from 'components/integrations/installed_incoming_webhooks';\nimport AddIncomingWehook from 'components/integrations/add_incoming_webhook';\nimport EditIncomingWebhook from 'components/integrations/edit_incoming_webhook';\nimport InstalledOutgoingWebhooks from 'components/integrations/installed_outgoing_webhooks';\nimport AddOutgoingWebhook from 'components/integrations/add_outgoing_webhook';\nimport EditOutgoingWebhook from 'components/integrations/edit_outgoing_webhook';\nimport InstalledOauthApps from 'components/integrations/installed_oauth_apps';\nimport AddOauthApp from 'components/integrations/add_oauth_app';\nimport EditOauthApp from 'components/integrations/edit_oauth_app';\nimport CommandsContainer from 'components/integrations/commands_container';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nimport BackstageSidebar from './components/backstage_sidebar.jsx';\nimport BackstageNavbar from './components/backstage_navbar';\n\nconst BackstageRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class BackstageController extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Current user.\n         */\n        user: PropTypes.object,\n\n        /**\n         * Current team.\n         */\n        team: PropTypes.object,\n\n        /**\n         * Object from react-router\n         */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        siteName: PropTypes.string,\n        enableCustomEmoji: PropTypes.bool.isRequired,\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n        enableOutgoingWebhooks: PropTypes.bool.isRequired,\n        enableCommands: PropTypes.bool.isRequired,\n        enableOAuthServiceProvider: PropTypes.bool.isRequired,\n        canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n        canManageIntegrations: PropTypes.bool.isRequired,\n    }\n\n    scrollToTop = () => {\n        if (this.listRef) {\n            this.listRef.scrollTop = 0;\n        }\n    }\n\n    setListRef = (ref) => {\n        this.listRef = ref;\n    }\n\n    render() {\n        if (this.props.team == null || this.props.user == null) {\n            return <div/>;\n        }\n        const extraProps = {\n            team: this.props.team,\n            user: this.props.user,\n            scrollToTop: this.scrollToTop,\n        };\n        return (\n            <div className='backstage'>\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <BackstageNavbar\n                    team={this.props.team}\n                    siteName={this.props.siteName}\n                />\n                <Pluggable pluggableName='Root'/>\n                <div\n                    className='backstage-body'\n                    ref={this.setListRef}\n                >\n                    <BackstageSidebar\n                        team={this.props.team}\n                        user={this.props.user}\n                        enableCustomEmoji={this.props.enableCustomEmoji}\n                        enableIncomingWebhooks={this.props.enableIncomingWebhooks}\n                        enableOutgoingWebhooks={this.props.enableOutgoingWebhooks}\n                        enableCommands={this.props.enableCommands}\n                        enableOAuthServiceProvider={this.props.enableOAuthServiceProvider}\n                        canCreateOrDeleteCustomEmoji={this.props.canCreateOrDeleteCustomEmoji}\n                        canManageIntegrations={this.props.canManageIntegrations}\n                    />\n                    <Switch>\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/integrations'}\n                            component={Integrations}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/incoming_webhooks`}\n                            component={InstalledIncomingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/add`}\n                            component={AddIncomingWehook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/incoming_webhooks/edit`}\n                            component={EditIncomingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/outgoing_webhooks`}\n                            component={InstalledOutgoingWebhooks}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/add`}\n                            component={AddOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/outgoing_webhooks/edit`}\n                            component={EditOutgoingWebhook}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/commands`}\n                            component={CommandsContainer}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={`${this.props.match.url}/oauth2-apps`}\n                            component={InstalledOauthApps}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/add`}\n                            component={AddOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/oauth2-apps/edit`}\n                            component={EditOauthApp}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/confirm`}\n                            component={ConfirmIntegration}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            exact={true}\n                            path={'/:team/emoji'}\n                            component={Emoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/add`}\n                            component={AddEmoji}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/add`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots/edit`}\n                            component={AddBot}\n                        />\n                        <BackstageRoute\n                            extraProps={extraProps}\n                            path={`${this.props.match.url}/bots`}\n                            component={Bots}\n                        />\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, NavLink} from 'react-router-dom';\n\nexport default class BackstageCategory extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            parentLink: PropTypes.string,\n            children: PropTypes.arrayOf(PropTypes.element),\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    render() {\n        const {name, title, icon, parentLink, children} = this.props;\n\n        const link = parentLink + '/' + name;\n\n        return (\n            <li className='backstage-sidebar__category'>\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title--active'\n                >\n                    <i className={'fa ' + icon}/>\n                    <span className='category-title__text'>\n                        {title}\n                    </span>\n                </NavLink>\n                {\n                    children && children.length > 0 &&\n                    <Route\n                        path={link}\n                        render={() => (\n                            <ul className='sections'>\n                                {\n                                    React.Children.map(children, (child) => {\n                                        if (!child) {\n                                            return child;\n                                        }\n\n                                        return React.cloneElement(child, {\n                                            parentLink: link,\n                                        });\n                                    })\n                                }\n                            </ul>\n                        )}\n                    />\n                }\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\nexport default class BackstageHeader extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.node,\n    };\n\n    render() {\n        const children = [];\n\n        React.Children.forEach(this.props.children, (child, index) => {\n            if (index !== 0) {\n                children.push(\n                    <span\n                        key={'divider' + index}\n                        className='backstage-header__divider'\n                    >\n                        <LocalizedIcon\n                            className='fa fa-angle-right'\n                            title={{id: t('generic_icons.breadcrumb'), defaultMessage: 'Breadcrumb Icon'}}\n                        />\n                    </span>,\n                );\n            }\n\n            children.push(child);\n        });\n\n        return (\n            <div className='backstage-header'>\n                <h1>\n                    {children}\n                </h1>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\n\nexport default class BackstageList extends React.PureComponent {\n    static propTypes = {\n        children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n        header: PropTypes.node.isRequired,\n        addLink: PropTypes.string,\n        addText: PropTypes.node,\n        addButtonId: PropTypes.string,\n        emptyText: PropTypes.node,\n        emptyTextSearch: PropTypes.node,\n        helpText: PropTypes.node,\n        loading: PropTypes.bool.isRequired,\n        searchPlaceholder: PropTypes.string,\n    }\n\n    static defaultProps = {\n        searchPlaceholder: Utils.localizeMessage('backstage_list.search', 'Search'),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: '',\n        };\n    }\n\n    updateFilter = (e) => {\n        this.setState({\n            filter: e.target.value,\n        });\n    }\n\n    render() {\n        const filter = this.state.filter.toLowerCase();\n\n        let children;\n        if (this.props.loading) {\n            children = <LoadingScreen/>;\n        } else {\n            children = this.props.children;\n            let hasChildren = true;\n            if (typeof children === 'function') {\n                [children, hasChildren] = children(filter);\n            }\n            children = React.Children.map(children, (child) => {\n                return React.cloneElement(child, {filter});\n            });\n            if (children.length === 0 || !hasChildren) {\n                if (!filter) {\n                    if (this.props.emptyText) {\n                        children = (\n                            <div className='backstage-list__item backstage-list__empty'>\n                                {this.props.emptyText}\n                            </div>\n                        );\n                    }\n                } else if (this.props.emptyTextSearch) {\n                    children = (\n                        <div\n                            className='backstage-list__item backstage-list__empty'\n                            id='emptySearchResultsMessage'\n                        >\n                            {React.cloneElement(this.props.emptyTextSearch, {values: {searchTerm: filter}})}\n                        </div>\n                    );\n                }\n            }\n        }\n\n        let addLink = null;\n\n        if (this.props.addLink && this.props.addText) {\n            addLink = (\n                <Link\n                    className='add-link'\n                    to={this.props.addLink}\n                >\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        id={this.props.addButtonId}\n                    >\n                        <span>\n                            {this.props.addText}\n                        </span>\n                    </button>\n                </Link>\n            );\n        }\n\n        return (\n            <div className='backstage-content'>\n                <div className='backstage-header'>\n                    <h1>\n                        {this.props.header}\n                    </h1>\n                    {addLink}\n                </div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <input\n                            type='search'\n                            className='form-control'\n                            placeholder={this.props.searchPlaceholder}\n                            value={this.state.filter}\n                            onChange={this.updateFilter}\n                            style={style.search}\n                            id='searchInput'\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    {this.props.helpText}\n                </span>\n                <div className='backstage-list'>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackIcon from 'components/widgets/icons/fa_back_icon';\n\nexport default class BackstageNavbar extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            siteName: PropTypes.string,\n        };\n    }\n\n    render() {\n        if (!this.props.team) {\n            return null;\n        }\n\n        return (\n            <div className='backstage-navbar'>\n                <Link\n                    className='backstage-navbar__back'\n                    to={`/${this.props.team.name}`}\n                >\n                    <BackIcon/>\n                    <span>\n                        <FormattedMessage\n                            id='backstage_navbar.backToMattermost'\n                            defaultMessage='Back to {siteName}'\n                            values={{\n                                siteName: this.props.siteName,\n                            }}\n                        />\n                    </span>\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class BackstageSection extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.arrayOf(PropTypes.element),\n            id: PropTypes.string,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    static get contextTypes() {\n        return {\n            router: PropTypes.object.isRequired,\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const {title, subsection, children} = this.props;\n\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (children.length > 0) {\n            clonedChildren = (\n                <ul className='subsections'>\n                    {\n                        React.Children.map(children, (child) => {\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'section';\n        if (subsection) {\n            className = 'subsection';\n        }\n\n        return (\n            <li\n                className={className}\n                id={this.props.id}\n            >\n                <NavLink\n                    className={`${className}-title`}\n                    activeClassName={`${className}-title--active`}\n                    to={link}\n                >\n                    <span className={`${className}-title__text`}>\n                        {title}\n                    </span>\n                </NavLink>\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport BackstageCategory from './backstage_category.jsx';\nimport BackstageSection from './backstage_section.jsx';\n\nexport default class BackstageSidebar extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object.isRequired,\n            user: PropTypes.object.isRequired,\n            enableCustomEmoji: PropTypes.bool.isRequired,\n            enableIncomingWebhooks: PropTypes.bool.isRequired,\n            enableOutgoingWebhooks: PropTypes.bool.isRequired,\n            enableCommands: PropTypes.bool.isRequired,\n            enableOAuthServiceProvider: PropTypes.bool.isRequired,\n            canCreateOrDeleteCustomEmoji: PropTypes.bool.isRequired,\n            canManageIntegrations: PropTypes.bool.isRequired,\n        };\n    }\n\n    renderCustomEmoji() {\n        if (!this.props.enableCustomEmoji || !this.props.canCreateOrDeleteCustomEmoji) {\n            return null;\n        }\n\n        return (\n            <BackstageCategory\n                name='emoji'\n                parentLink={'/' + this.props.team.name}\n                icon='fa-smile-o'\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                }\n            />\n        );\n    }\n\n    renderIntegrations() {\n        if (!this.props.canManageIntegrations) {\n            return null;\n        }\n\n        let incomingWebhooks = null;\n        if (this.props.enableIncomingWebhooks) {\n            incomingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='incoming_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.incoming_webhooks'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        )}\n                        id='incomingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let outgoingWebhooks = null;\n        if (this.props.enableOutgoingWebhooks) {\n            outgoingWebhooks = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='outgoing_webhooks'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.outgoing_webhooks'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        )}\n                        id='outgoingWebhooks'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let commands = null;\n        if (this.props.enableCommands) {\n            commands = (\n                <TeamPermissionGate\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    teamId={this.props.team.id}\n                >\n                    <BackstageSection\n                        name='commands'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={(\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.commands'\n                                defaultMessage='Slash Commands'\n                            />\n                        )}\n                        id='slashCommands'\n                    />\n                </TeamPermissionGate>\n            );\n        }\n\n        let oauthApps = null;\n        if (this.props.enableOAuthServiceProvider) {\n            oauthApps = (\n                <SystemPermissionGate permissions={[Permissions.MANAGE_OAUTH]}>\n                    <BackstageSection\n                        name='oauth2-apps'\n                        parentLink={'/' + this.props.team.name + '/integrations'}\n                        title={\n                            <FormattedMessage\n                                id='backstage_sidebar.integrations.oauthApps'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        id='oauthApps'\n                    />\n                </SystemPermissionGate>\n            );\n        }\n\n        // Note that we allow managing bot accounts even if bot account creation is disabled: only\n        // a permissions check is required.\n        const botAccounts = (\n            <SystemPermissionGate permissions={['manage_bots', 'manage_others_bots']}>\n                <BackstageSection\n                    name='bots'\n                    parentLink={'/' + this.props.team.name + '/integrations'}\n                    title={\n                        <FormattedMessage\n                            id='backstage_sidebar.bots'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    id='botAccounts'\n                />\n            </SystemPermissionGate>\n        );\n\n        return (\n            <BackstageCategory\n                name='integrations'\n                icon='fa-link'\n                parentLink={'/' + this.props.team.name}\n                title={\n                    <FormattedMessage\n                        id='backstage_sidebar.integrations'\n                        defaultMessage='Integrations'\n                    />\n                }\n            >\n                {incomingWebhooks}\n                {outgoingWebhooks}\n                {commands}\n                {oauthApps}\n                {botAccounts}\n            </BackstageCategory>\n        );\n    }\n\n    render() {\n        return (\n            <div className='backstage-sidebar'>\n                <ul>\n                    {this.renderCustomEmoji()}\n                    {this.renderIntegrations()}\n                </ul>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getMyTeams, getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {haveITeamPermission, haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BackstageController from './backstage_controller.jsx';\n\nfunction mapStateToProps(state) {\n    const user = getCurrentUser(state);\n    const team = getCurrentTeam(state);\n\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const enableCustomEmoji = config.EnableCustomEmoji === 'true';\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    let canCreateOrDeleteCustomEmoji = (haveISystemPermission(state, {permission: Permissions.CREATE_EMOJIS}) || haveISystemPermission(state, {permission: Permissions.DELETE_EMOJIS}));\n    if (!canCreateOrDeleteCustomEmoji) {\n        for (const t of getMyTeams(state)) {\n            if (haveITeamPermission(state, {team: t.id, permission: Permissions.CREATE_EMOJIS}) || haveITeamPermission(state, {team: t.id, permission: Permissions.DELETE_EMOJIS})) {\n                canCreateOrDeleteCustomEmoji = true;\n                break;\n            }\n        }\n    }\n\n    const canManageTeamIntegrations = (haveITeamPermission(state, {permission: Permissions.MANAGE_SLASH_COMMANDS}) || haveITeamPermission(state, {permission: Permissions.MANAGE_OAUTH}) || haveITeamPermission(state, {permission: Permissions.MANAGE_INCOMING_WEBHOOKS}) || haveITeamPermission(state, {permission: Permissions.MANAGE_OUTGOING_WEBHOOKS}));\n    const canManageSystemBots = (haveISystemPermission(state, {permission: Permissions.MANAGE_BOTS}) || haveISystemPermission(state, {permission: Permissions.MANAGE_OTHERS_BOTS}));\n    const canManageIntegrations = canManageTeamIntegrations || canManageSystemBots;\n\n    return {\n        user,\n        team,\n        siteName,\n        enableCustomEmoji,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n        canCreateOrDeleteCustomEmoji,\n        canManageIntegrations,\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(BackstageController));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ChannelSelect extends React.PureComponent {\n    static get propTypes() {\n        return {\n            channels: PropTypes.array.isRequired,\n            onChange: PropTypes.func,\n            value: PropTypes.string,\n            selectOpen: PropTypes.bool.isRequired,\n            selectPrivate: PropTypes.bool.isRequired,\n            selectDm: PropTypes.bool.isRequired,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            selectOpen: false,\n            selectPrivate: false,\n            selectDm: false,\n        };\n    }\n\n    render() {\n        const options = [\n            <option\n                key=''\n                value=''\n            >\n                {Utils.localizeMessage('channel_select.placeholder', '--- Select a channel ---')}\n            </option>,\n        ];\n\n        this.props.channels.forEach((channel) => {\n            const channelName = channel.display_name || channel.name;\n            if (channel.type === Constants.OPEN_CHANNEL && this.props.selectOpen) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            } else if (channel.type === Constants.PRIVATE_CHANNEL && this.props.selectPrivate) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            } else if (channel.type === Constants.DM_CHANNEL && this.props.selectDm) {\n                options.push(\n                    <option\n                        key={channel.id}\n                        value={channel.id}\n                    >\n                        {channelName}\n                    </option>,\n                );\n            }\n        });\n\n        return (\n            <select\n                className='form-control'\n                value={this.props.value}\n                onChange={this.props.onChange}\n                id='channelSelect'\n            >\n                {options}\n            </select>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getMyChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentUserLocale} from 'mattermost-redux/selectors/entities/i18n';\nimport {sortChannelsByTypeAndDisplayName} from 'mattermost-redux/utils/channel_utils';\n\nimport ChannelSelect from './channel_select.jsx';\n\nconst getMyChannelsSorted = createSelector(\n    getMyChannels,\n    getCurrentUserLocale,\n    (channels, locale) => {\n        return [...channels].sort(sortChannelsByTypeAndDisplayName.bind(null, locale));\n    },\n);\n\nfunction mapStateToProps(state) {\n    return {\n        channels: getMyChannelsSorted(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelSelect);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Tooltip} from 'react-bootstrap';\n\nimport OverlayTrigger from 'components/overlay_trigger';\n\nimport Constants from 'utils/constants';\nimport {copyToClipboard} from 'utils/utils.jsx';\n\ntype Props = {\n    value: string;\n    defaultMessage: string;\n    idMessage: string;\n};\n\nexport default class CopyText extends React.PureComponent<Props, {}> {\n    public static defaultProps = {\n        defaultMessage: 'Copy',\n        idMessage: 'integrations.copy',\n    };\n\n    private copyText = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>): void => {\n        e.preventDefault();\n        copyToClipboard(this.props.value);\n    };\n\n    public render() {\n        if (!document.queryCommandSupported('copy')) {\n            return null;\n        }\n\n        const tooltip = (\n            <Tooltip id='copy'>\n                <FormattedMessage\n                    id={this.props.idMessage}\n                    defaultMessage={this.props.defaultMessage}\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                overlay={tooltip}\n            >\n                <a\n                    href='#'\n                    className='fa fa-copy ml-2'\n                    onClick={this.copyText}\n                />\n            </OverlayTrigger>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport ConfirmModal from './confirm_modal';\n\nexport default class DeleteModalTrigger extends React.PureComponent {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        if (this.constructor === DeleteModalTrigger) {\n            throw new TypeError('Can not construct abstract class.');\n        }\n\n        this.state = {\n            showDeleteModal: false,\n        };\n    }\n\n    handleOpenModal = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            showDeleteModal: true,\n        });\n    }\n\n    handleConfirm = () => {\n        this.props.onDelete();\n    }\n\n    handleCancel = () => {\n        this.setState({\n            showDeleteModal: false,\n        });\n    }\n\n    handleKeyDown = (e) => {\n        if (Utils.isKeyPressed(e, Constants.KeyCodes.ENTER)) {\n            this.handleConfirm(e);\n        }\n    }\n\n    render() {\n        return (\n            <span>\n                <button\n                    className='color--link style--none'\n                    onClick={this.handleOpenModal}\n                >\n                    { this.triggerTitle }\n                </button>\n                <ConfirmModal\n                    show={this.state.showDeleteModal}\n                    title={this.modalTitle}\n                    message={this.modalMessage}\n                    confirmButtonText={this.modalConfirmButton}\n                    onConfirm={this.handleConfirm}\n                    onCancel={this.handleCancel}\n                    onKeyDown={this.handleKeyDown}\n                />\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {browserHistory} from 'utils/browser_history';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AddEmoji extends React.PureComponent {\n    static propTypes = {\n        actions: PropTypes.shape({\n            createCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n        emojiMap: PropTypes.object.isRequired,\n        team: PropTypes.object,\n        user: PropTypes.object,\n    };\n\n    static contextTypes = {\n        router: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            image: null,\n            imageUrl: '',\n            saving: false,\n            error: null,\n        };\n    }\n\n    handleSubmit = async (e) => {\n        const {actions, emojiMap, user, team} = this.props;\n        const {image, name, saving} = this.state;\n\n        e.preventDefault();\n\n        if (saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            error: null,\n        });\n\n        const emoji = {\n            creator_id: user.id,\n            name: name.trim().toLowerCase(),\n        };\n\n        // trim surrounding colons if the user accidentally included them in the name\n        if (emoji.name.startsWith(':') && emoji.name.endsWith(':')) {\n            emoji.name = emoji.name.substring(1, emoji.name.length - 1);\n        }\n\n        if (!emoji.name) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameRequired'\n                        defaultMessage='A name is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        } else if ((/[^a-z0-9_-]/).test(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameInvalid'\n                        defaultMessage=\"An emoji's name can only contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                    />\n                ),\n            });\n\n            return;\n        } else if (emojiMap.hasSystemEmoji(emoji.name)) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.nameTaken'\n                        defaultMessage='This name is already in use by a system emoji. Please choose another name.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!image) {\n            this.setState({\n                saving: false,\n                error: (\n                    <FormattedMessage\n                        id='add_emoji.imageRequired'\n                        defaultMessage='An image is required for the emoji'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const {error} = await actions.createCustomEmoji(emoji, image);\n        if (error) {\n            this.setState({\n                saving: false,\n                error: error.message,\n            });\n            return;\n        }\n\n        browserHistory.push('/' + team.name + '/emoji');\n    };\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    };\n\n    updateImage = (e) => {\n        if (e.target.files.length === 0) {\n            this.setState({\n                image: null,\n                imageUrl: '',\n            });\n\n            return;\n        }\n\n        const image = e.target.files[0];\n\n        const reader = new FileReader();\n        reader.onload = () => {\n            this.setState({\n                image,\n                imageUrl: reader.result,\n            });\n        };\n        reader.readAsDataURL(image);\n    };\n\n    render() {\n        let filename = null;\n        if (this.state.image) {\n            filename = (\n                <span className='add-emoji__filename'>\n                    {this.state.image.name}\n                </span>\n            );\n        }\n\n        let preview = null;\n        if (this.state.imageUrl) {\n            preview = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='preview'\n                    >\n                        <FormattedMessage\n                            id='add_emoji.preview'\n                            defaultMessage='Preview'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8 add-emoji__preview'>\n                        <FormattedMessage\n                            id='add_emoji.preview.sentence'\n                            defaultMessage='This is a sentence with {image} in it.'\n                            values={{\n                                image: (\n                                    <span\n                                        className='emoticon'\n                                        style={{backgroundImage: 'url(' + this.state.imageUrl + ')'}}\n                                    />\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/emoji'}>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='add_emoji.header'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.name'\n                                    defaultMessage='Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_emoji.name.help'\n                                        defaultMessage=\"Name your emoji. The name can be up to 64 characters, and can contain lowercase letters, numbers, and the symbols '-' and '_'.\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='image'\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.image'\n                                    defaultMessage='Image'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div>\n                                    <div className='add-emoji__upload'>\n                                        <button className='btn btn-primary'>\n                                            <FormattedMessage\n                                                id='add_emoji.image.button'\n                                                defaultMessage='Select'\n                                            />\n                                        </button>\n                                        <input\n                                            id='select-emoji'\n                                            type='file'\n                                            accept='.jpg,.png,.gif'\n                                            multiple={false}\n                                            onChange={this.updateImage}\n                                        />\n                                    </div>\n                                    {filename}\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_emoji.image.help'\n                                            defaultMessage='Specify a .gif, .png, or .jpg file of up to 64 KB for your emoji. The dimensions can be up to 128 pixels by 128 pixels.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {preview}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                error={this.state.error}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/emoji'}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage('add_emoji.saving', 'Saving...')}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_emoji.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {createCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getEmojiMap} from 'selectors/emojis';\n\nimport AddEmoji from './add_emoji.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiMap: getEmojiMap(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEmoji);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteEmoji extends DeleteModalTrigger {\n    static propTypes = {\n        onDelete: PropTypes.func.isRequired,\n    }\n\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.title'\n                defaultMessage='Delete Custom Emoji'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='mr-1'/>\n                <FormattedMessage\n                    id='emoji_list.delete.confirm.msg'\n                    defaultMessage='This action permanently deletes the custom emoji. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='emoji_list.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Emoji} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen';\nimport SaveButton from 'components/save_button';\nimport EmojiListItem from 'components/emoji/emoji_list_item';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/fa_search_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst EMOJI_PER_PAGE = 50;\nconst EMOJI_SEARCH_DELAY_MILLISECONDS = 200;\n\nexport default class EmojiList extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Custom emojis on the system.\n         */\n        emojiIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Function to scroll list to top.\n         */\n        scrollToTop: PropTypes.func.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * Get pages of custom emojis.\n             */\n            getCustomEmojis: PropTypes.func.isRequired,\n\n            /**\n             * Search custom emojis.\n             */\n            searchCustomEmojis: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.searchTimeout = null;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            nextLoading: false,\n            searchEmojis: null,\n            missingPages: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getCustomEmojis(0, EMOJI_PER_PAGE + 1, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({loading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n        });\n    }\n\n    nextPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        const next = this.state.page + 1;\n        this.setState({nextLoading: true});\n        this.props.actions.getCustomEmojis(next, EMOJI_PER_PAGE, Emoji.SORT_BY_NAME, true).then(({data}) => {\n            this.setState({page: next, nextLoading: false});\n            if (data && data.length < EMOJI_PER_PAGE) {\n                this.setState({missingPages: false});\n            }\n\n            this.props.scrollToTop();\n        });\n    }\n\n    previousPage = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({page: this.state.page - 1, nextLoading: false});\n        this.props.scrollToTop();\n    }\n\n    onSearchChange = (e) => {\n        if (!e || !e.target) {\n            return;\n        }\n\n        const term = e.target.value || '';\n\n        clearTimeout(this.searchTimeout);\n\n        this.searchTimeout = setTimeout(async () => {\n            if (term.trim() === '') {\n                this.setState({searchEmojis: null, page: 0});\n                return;\n            }\n\n            this.setState({loading: true});\n\n            const {data} = await this.props.actions.searchCustomEmojis(term, {}, true);\n\n            if (data) {\n                this.setState({searchEmojis: data.map((em) => em.id), loading: false});\n            } else {\n                this.setState({searchEmojis: [], loading: false});\n            }\n        }, EMOJI_SEARCH_DELAY_MILLISECONDS);\n    }\n\n    deleteFromSearch = (emojiId) => {\n        if (!this.state.searchEmojis) {\n            return;\n        }\n\n        const index = this.state.searchEmojis.indexOf(emojiId);\n\n        if (index < 0) {\n            return;\n        }\n\n        const newSearchEmojis = [...this.state.searchEmojis];\n        newSearchEmojis.splice(index, 1);\n        this.setState({searchEmojis: newSearchEmojis});\n    }\n\n    render() {\n        const searchEmojis = this.state.searchEmojis;\n        const emojis = [];\n        let nextButton;\n        let previousButton;\n\n        if (this.state.loading) {\n            emojis.push(\n                <tr\n                    key='loading'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <LoadingScreen key='loading'/>\n                    </td>\n                </tr>,\n            );\n        } else if (this.props.emojiIds.length === 0 || (searchEmojis && searchEmojis.length === 0)) {\n            emojis.push(\n                <tr\n                    key='empty'\n                    className='backstage-list__item backstage-list__empty'\n                >\n                    <td colSpan='4'>\n                        <FormattedMessage\n                            id='emoji_list.empty'\n                            defaultMessage='No custom emoji found'\n                        />\n                    </td>\n                </tr>,\n            );\n        } else if (searchEmojis) {\n            searchEmojis.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_search_item' + emojiId}\n                        emojiId={emojiId}\n                        onDelete={this.deleteFromSearch}\n                    />,\n                );\n            });\n        } else {\n            const pageStart = this.state.page * EMOJI_PER_PAGE;\n            const pageEnd = pageStart + EMOJI_PER_PAGE;\n            const emojisToDisplay = this.props.emojiIds.slice(pageStart, pageEnd);\n\n            emojisToDisplay.forEach((emojiId) => {\n                emojis.push(\n                    <EmojiListItem\n                        key={'emoji_list_item' + emojiId}\n                        emojiId={emojiId}\n                    />,\n                );\n            });\n\n            if (this.state.missingPages) {\n                const buttonContents = (\n                    <span>\n                        <FormattedMessage\n                            id='filtered_user_list.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon additionalClassName='ml-2'/>\n                    </span>\n                );\n\n                nextButton = (\n                    <SaveButton\n                        btnClass='btn-link'\n                        extraClasses='pull-right'\n                        onClick={this.nextPage}\n                        saving={this.state.nextLoading}\n                        disabled={this.state.nextLoading}\n                        defaultMessage={buttonContents}\n                        savingMessage={buttonContents}\n                    />\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-link'\n                        onClick={this.previousPage}\n                    >\n                        <PreviousIcon additionalClassName='mr-2'/>\n                        <FormattedMessage\n                            id='filtered_user_list.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div>\n                <div className='backstage-filters'>\n                    <div className='backstage-filter__search'>\n                        <SearchIcon/>\n                        <LocalizedInput\n                            type='search'\n                            className='form-control'\n                            placeholder={{id: t('emoji_list.search'), defaultMessage: 'Search Custom Emoji'}}\n                            onChange={this.onSearchChange}\n                            style={style.search}\n                        />\n                    </div>\n                </div>\n                <span className='backstage-list__help'>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help'\n                            defaultMessage=\"Custom emoji are available to everyone on your server. Type ':' followed by two characters in a message box to bring up the emoji selection menu.\"\n                        />\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='emoji_list.help2'\n                            defaultMessage=\"Tip: If you add #, ##, or ### as the first character on a new line containing emoji, you can use larger sized emoji. To try it out, send a message such as: '# :smile:'.\"\n                        />\n                    </p>\n                </span>\n                <div className='backstage-list'>\n                    <table className='emoji-list__table'>\n                        <thead>\n                            <tr className='backstage-list__item emoji-list__table-header'>\n                                <th className='emoji-list__name'>\n                                    <FormattedMessage\n                                        id='emoji_list.name'\n                                        defaultMessage='Name'\n                                    />\n                                </th>\n                                <th className='emoji-list__image'>\n                                    <FormattedMessage\n                                        id='emoji_list.image'\n                                        defaultMessage='Image'\n                                    />\n                                </th>\n                                <th className='emoji-list__creator'>\n                                    <FormattedMessage\n                                        id='emoji_list.creator'\n                                        defaultMessage='Creator'\n                                    />\n                                </th>\n                                <th className='emoji-list_actions'>\n                                    <FormattedMessage\n                                        id='emoji_list.actions'\n                                        defaultMessage='Actions'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {emojis}\n                        </tbody>\n                    </table>\n                </div>\n                <div className='filter-controls pt-3'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    search: {flexGrow: 0, flexShrink: 0},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCustomEmojiIdsSortedByName} from 'mattermost-redux/selectors/entities/emojis';\n\nimport {getCustomEmojis, searchCustomEmojis} from 'mattermost-redux/actions/emojis';\n\nimport EmojiList from './emoji_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        emojiIds: getCustomEmojiIdsSortedByName(state) || [],\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomEmojis,\n            searchCustomEmojis,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\nimport {Client4} from 'mattermost-redux/client';\n\nimport DeleteEmoji from 'components/emoji/delete_emoji_modal.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nexport default class EmojiListItem extends React.PureComponent {\n    static propTypes = {\n        emoji: PropTypes.object.isRequired,\n        currentUserId: PropTypes.string.isRequired,\n        creatorDisplayName: PropTypes.string.isRequired,\n        creatorUsername: PropTypes.string,\n        currentTeam: PropTypes.object,\n        onDelete: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteCustomEmoji: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        emoji: {},\n        currentUserId: '',\n        currentTeam: {},\n        creatorDisplayName: '',\n    }\n\n    handleDelete = () => {\n        if (this.props.onDelete) {\n            this.props.onDelete(this.props.emoji.id);\n        }\n\n        this.props.actions.deleteCustomEmoji(this.props.emoji.id);\n    }\n\n    render() {\n        const emoji = this.props.emoji;\n        const creatorUsername = this.props.creatorUsername;\n        let creatorDisplayName = this.props.creatorDisplayName;\n\n        if (creatorUsername && creatorUsername !== creatorDisplayName) {\n            creatorDisplayName += ' (@' + creatorUsername + ')';\n        }\n\n        let deleteButton = null;\n        if (emoji.creator_id === this.props.currentUserId) {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <DeleteEmoji onDelete={this.handleDelete}/>\n                </AnyTeamPermissionGate>\n            );\n        } else {\n            deleteButton = (\n                <AnyTeamPermissionGate permissions={[Permissions.DELETE_EMOJIS]}>\n                    <AnyTeamPermissionGate permissions={[Permissions.DELETE_OTHERS_EMOJIS]}>\n                        <DeleteEmoji onDelete={this.handleDelete}/>\n                    </AnyTeamPermissionGate>\n                </AnyTeamPermissionGate>\n            );\n        }\n\n        return (\n            <tr className='backstage-list__item'>\n                <td className='emoji-list__name'>\n                    {':' + emoji.name + ':'}\n                </td>\n                <td className='emoji-list__image'>\n                    <span\n                        className='emoticon'\n                        style={{backgroundImage: 'url(' + Client4.getCustomEmojiImageUrl(emoji.id) + ')'}}\n                    />\n                </td>\n                <td className='emoji-list__creator'>\n                    {creatorDisplayName}\n                </td>\n                <td className='emoji-list-item_actions'>\n                    {deleteButton}\n                </td>\n            </tr>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getUser, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {deleteCustomEmoji} from 'mattermost-redux/actions/emojis';\n\nimport {getDisplayNameByUser} from 'utils/utils.jsx';\n\nimport EmojiListItem from './emoji_list_item.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const emoji = state.entities.emojis.customEmoji[ownProps.emojiId];\n    const creator = getUser(state, emoji.creator_id);\n\n    return {\n        emoji,\n        creatorDisplayName: getDisplayNameByUser(state, creator),\n        creatorUsername: creator ? creator.username : '',\n        currentUserId: getCurrentUserId(state),\n        currentTeam: getCurrentTeam(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteCustomEmoji,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiListItem);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport * as Utils from 'utils/utils.jsx';\nimport AnyTeamPermissionGate from 'components/permissions_gates/any_team_permission_gate';\n\nimport EmojiList from './emoji_list';\n\nexport default class EmojiPage extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        teamName: PropTypes.string.isRequired,\n        teamDisplayName: PropTypes.string.isRequired,\n        siteName: PropTypes.string,\n        scrollToTop: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        teamName: '',\n        teamDisplayName: '',\n        siteName: '',\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n        this.props.actions.loadRolesIfNeeded(['system_admin', 'team_admin', 'system_user', 'team_user']);\n    }\n\n    updateTitle = () => {\n        document.title = Utils.localizeMessage('custom_emoji.header', 'Custom Emoji') + ' - ' + this.props.teamDisplayName + ' ' + this.props.siteName;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.siteName !== prevProps.siteName) {\n            this.updateTitle();\n        }\n    }\n\n    render() {\n        return (\n            <div className='backstage-content emoji-list'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='emoji_list.header'\n                            defaultMessage='Custom Emoji'\n                        />\n                    </h1>\n                    <AnyTeamPermissionGate permissions={[Permissions.CREATE_EMOJIS]}>\n                        <Link\n                            className='add-link'\n                            to={'/' + this.props.teamName + '/emoji/add'}\n                        >\n                            <button\n                                type='button'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='emoji_list.add'\n                                    defaultMessage='Add Custom Emoji'\n                                />\n                            </button>\n                        </Link>\n                    </AnyTeamPermissionGate>\n                </div>\n                <EmojiList scrollToTop={this.props.scrollToTop}/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {loadRolesIfNeeded} from 'mattermost-redux/actions/roles';\n\nimport EmojiPage from './emoji_page.jsx';\n\nfunction mapStateToProps(state) {\n    const team = getCurrentTeam(state) || {};\n\n    return {\n        teamId: team.id,\n        teamName: team.name,\n        teamDisplayName: team.display_name,\n        siteName: state.entities.general.config.SiteName,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPage);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AbstractCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The Command used to set the initial state\n        */\n        initialCommand: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromCommand(this.props.initialCommand || {});\n    }\n\n    getStateFromCommand = (command) => {\n        return {\n            displayName: command.display_name || '',\n            description: command.description || '',\n            trigger: command.trigger || '',\n            url: command.url || '',\n            method: command.method || REQUEST_POST,\n            username: command.username || '',\n            iconUrl: command.icon_url || '',\n            autocomplete: command.auto_complete || false,\n            autocompleteHint: command.auto_complete_hint || '',\n            autocompleteDescription: command.auto_complete_desc || '',\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete,\n            team_id: this.props.team.id,\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH ||\n            command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH,\n                        }}\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        this.props.action(command).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateTrigger = (e) => {\n        this.setState({\n            trigger: e.target.value,\n        });\n    }\n\n    updateUrl = (e) => {\n        this.setState({\n            url: e.target.value,\n        });\n    }\n\n    updateMethod = (e) => {\n        this.setState({\n            method: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            iconUrl: e.target.value,\n        });\n    }\n\n    updateAutocomplete = (e) => {\n        this.setState({\n            autocomplete: e.target.checked,\n        });\n    }\n\n    updateAutocompleteHint = (e) => {\n        this.setState({\n            autocompleteHint: e.target.value,\n        });\n    }\n\n    updateAutocompleteDescription = (e) => {\n        this.setState({\n            autocompleteDescription: e.target.value,\n        });\n    }\n\n    render() {\n        let autocompleteHint = null;\n        let autocompleteDescription = null;\n\n        if (this.state.autocomplete) {\n            autocompleteHint = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={{id: t('add_command.autocompleteHint.placeholder'), defaultMessage: 'Example: [Patient Name]'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Specify the arguments associated with your slash command. These are displayed as help on the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n\n            autocompleteDescription = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <LocalizedInput\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={{id: t('add_command.autocompleteDescription.placeholder'), defaultMessage: 'Example: \"Returns search results for patient records\"'}}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Describe your slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={this.props.header.id}\n                        defaultMessage={this.props.header.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the slash command settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Describe your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={{id: t('add_command.trigger.placeholder'), defaultMessage: 'Command trigger e.g. \"hello\" not including the slash'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Specify a trigger word that is not a built-in command, does not contain spaces, and does not begin with the slash character.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='See built-in slash commands'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={{id: t('add_command.url.placeholder'), defaultMessage: 'Must start with http:// or https://'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='Specify the callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='Specify the type of request, either POST or GET, sent to the endpoint that Mattermost hits to reach your application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={{id: t('add_command.username.placeholder'), defaultMessage: 'Username'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Specify the name to use when posting responses for this slash command. Usernames can be up to 22 characters, and contain lowercase letters, numbers, and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, your Mattermost username is used.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <LocalizedInput\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={{id: t('add_command.iconUrl.placeholder'), defaultMessage: 'https://www.example.com/myicon.png'}}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Enter the URL of a .png or .jpg file to use as the icon when posting responses to this slash command. The file must be at least 128 pixels by 128 pixels. If left blank, your profile picture is used.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show your slash command on the autocomplete list when someone types \"/\" in the input box.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteHint}\n                        {autocompleteDescription}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={Utils.localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveCommand'\n                            >\n                                <FormattedMessage\n                                    id={this.props.footer.id}\n                                    defaultMessage={this.props.footer.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {this.props.renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nexport default class AbstractIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The hook used to set the initial state\n        */\n        initialHook: PropTypes.object,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            channelId: hook.channel_id || '',\n            channelLocked: hook.channel_locked || false,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n            saving: false,\n            serverError: '',\n            clientError: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: '',\n        });\n\n        if (!this.state.channelId) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_incoming_webhook.channelRequired'\n                        defaultMessage='A valid channel is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            channel_id: this.state.channelId,\n            channel_locked: this.state.channelLocked,\n            display_name: this.state.displayName,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateChannelLocked = (e) => {\n        this.setState({\n            channelLocked: e.target.checked,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks`}>\n                        <FormattedMessage\n                            id='installed_incoming_webhooks.header'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the webhook settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.description.help'\n                                        defaultMessage='Describe your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                    selectPrivate={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channel.help'\n                                        defaultMessage='This is the default public or private channel that receives the webhook payloads.  When setting up the webhook, you must belong to the private channel.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelLocked'\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.channelLocked'\n                                    defaultMessage='Lock to this channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='channelLocked'\n                                    type='checkbox'\n                                    checked={this.state.channelLocked}\n                                    onChange={this.updateChannelLocked}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.channelLocked.help'\n                                        defaultMessage='If set, the incoming webhook can post only to the selected channel.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        { this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.username.help'\n                                            defaultMessage='Specify the username this integration will post as. Usernames can be up to 22 characters, and can contain lowercase letters, numbers and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, the name specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        { this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_incoming_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_incoming_webhook.icon_url.help'\n                                            defaultMessage='Enter the URL of a .png or .jpg file for the profile picture of this integration when posting. The file should be at least 128 pixels by 128 pixels. If left blank, the profile picture specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/incoming_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_incoming_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nexport default class AbstractOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The header text to render, has id and defaultMessage\n        */\n        header: PropTypes.object.isRequired,\n\n        /**\n        * The footer text to render, has id and defaultMessage\n        */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n        * The server error text after a failed action\n        */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp used to set the initial state\n        */\n        initialApp: PropTypes.object,\n\n        /**\n        * The async function to run when the action button is pressed\n        */\n        action: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.image = new Image();\n        this.image.onload = this.imageLoaded;\n        this.state = this.getStateFromApp(this.props.initialApp || {});\n    }\n\n    getStateFromApp = (app) => {\n        return {\n            name: app.name || '',\n            description: app.description || '',\n            homepage: app.homepage || '',\n            icon_url: app.icon_url || '',\n            callbackUrls: app.callback_urls ? app.callback_urls.join('\\n') : '',\n            is_trusted: app.is_trusted || false,\n            has_icon: Boolean(app.icon_url),\n            saving: false,\n            clientError: null,\n        };\n    }\n\n    imageLoaded = () => {\n        this.setState({\n            has_icon: true,\n            icon_url: this.refs.icon_url.value,\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        if (!this.state.name) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.nameRequired'\n                        defaultMessage='Name for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.description) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.descriptionRequired'\n                        defaultMessage='Description for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        if (!this.state.homepage) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.homepageRequired'\n                        defaultMessage='Homepage for the OAuth 2.0 application is required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_oauth_app.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required.'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const app = {\n            name: this.state.name,\n            callback_urls: callbackUrls,\n            homepage: this.state.homepage,\n            description: this.state.description,\n            is_trusted: this.state.is_trusted,\n            icon_url: this.state.icon_url,\n        };\n\n        this.props.action(app).then(() => this.setState({saving: false}));\n    }\n\n    updateName = (e) => {\n        this.setState({\n            name: e.target.value,\n        });\n    }\n\n    updateTrusted = (e) => {\n        this.setState({\n            is_trusted: e.target.value === 'true',\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateHomepage = (e) => {\n        this.setState({\n            homepage: e.target.value,\n        });\n    }\n\n    updateIconUrl = (e) => {\n        this.setState({\n            has_icon: false,\n            icon_url: e.target.value,\n        });\n        this.image.src = e.target.value;\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    render() {\n        const headerToRender = this.props.header;\n        const footerToRender = this.props.footer;\n        const renderExtra = this.props.renderExtra;\n\n        let icon;\n        if (this.state.has_icon) {\n            icon = (\n                <div className='integration__icon'>\n                    <img\n                        alt={'integration icon'}\n                        src={this.state.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        const trusted = (\n            <SystemPermissionGate permissions={[Permissions.MANAGE_SYSTEM]}>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='is_trusted'\n                    >\n                        <FormattedMessage\n                            id='installed_oauth_apps.trusted'\n                            defaultMessage='Is Trusted'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='true'\n                                name='is_trusted'\n                                checked={this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.yes'\n                                defaultMessage='Yes'\n                            />\n                        </label>\n                        <label className='radio-inline'>\n                            <input\n                                type='radio'\n                                value='false'\n                                name='is_trusted'\n                                checked={!this.state.is_trusted}\n                                onChange={this.updateTrusted}\n                            />\n                            <FormattedMessage\n                                id='installed_oauth_apps.trusted.no'\n                                defaultMessage='No'\n                            />\n                        </label>\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_oauth_app.trusted.help'\n                                defaultMessage='If true, the OAuth 2.0 application is considered trusted by the Mattermost server and does not require the user to accept authorization. If false, a window opens to ask the user to accept or deny the authorization.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            </SystemPermissionGate>\n        );\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/oauth2-apps`}>\n                        <FormattedMessage\n                            id='installed_oauth_apps.header'\n                            defaultMessage='Installed OAuth2 Apps'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    {icon}\n                    <form className='form-horizontal'>\n                        {trusted}\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='name'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.name'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='name'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.name}\n                                    onChange={this.updateName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.name.help'\n                                        defaultMessage='Specify the display name, of up to 64 characters, for your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.description.help'\n                                        defaultMessage='Describe your OAuth 2.0 application.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='homepage'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.homepage'\n                                    defaultMessage='Homepage'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='homepage'\n                                    type='url'\n                                    maxLength='256'\n                                    className='form-control'\n                                    value={this.state.homepage}\n                                    onChange={this.updateHomepage}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.homepage.help'\n                                        defaultMessage='This is the URL for the homepage of the OAuth 2.0 application. Depending on your server configuration, use HTTP or HTTPS in the URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='icon_url'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.iconUrl'\n                                    defaultMessage='Icon URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='icon_url'\n                                    ref='icon_url'\n                                    type='url'\n                                    maxLength='512'\n                                    className='form-control'\n                                    value={this.state.icon_url}\n                                    onChange={this.updateIconUrl}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.icon.help'\n                                        defaultMessage='(Optional) The URL of the image used for your OAuth 2.0 application. Make sure you use HTTP or HTTPS in your URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_oauth_app.callbackUrls.help'\n                                        defaultMessage='The redirect URIs to which the service will redirect users after accepting or denying authorization of your application, and which will handle authorization codes or access tokens. Must be a valid URL and start with http:// or https://.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/oauth2-apps`}\n                            >\n                                <FormattedMessage\n                                    id='installed_oauth_apps.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveOauthApp'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport ChannelSelect from 'components/channel_select';\nimport FormError from 'components/form_error';\nimport SpinnerButton from 'components/spinner_button';\n\nexport default class AbstractOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The header text to render, has id and defaultMessage\n         */\n        header: PropTypes.object.isRequired,\n\n        /**\n         * The footer text to render, has id and defaultMessage\n         */\n        footer: PropTypes.object.isRequired,\n\n        /**\n        * The spinner loading text to render, has id and defaultMessage\n        */\n        loading: PropTypes.object.isRequired,\n\n        /**\n         * Any extra component/node to render\n         */\n        renderExtra: PropTypes.node.isRequired,\n\n        /**\n         * The server error text after a failed action\n         */\n        serverError: PropTypes.string.isRequired,\n\n        /**\n         * The hook used to set the initial state\n         */\n        initialHook: PropTypes.object,\n\n        /**\n         * The async function to run when the action button is pressed\n         */\n        action: PropTypes.func.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromHook(this.props.initialHook || {});\n    }\n\n    getStateFromHook = (hook) => {\n        let triggerWords = '';\n        if (hook.trigger_words) {\n            let i = 0;\n            for (i = 0; i < hook.trigger_words.length; i++) {\n                triggerWords += hook.trigger_words[i] + '\\n';\n            }\n        }\n\n        let callbackUrls = '';\n        if (hook.callback_urls) {\n            let i = 0;\n            for (i = 0; i < hook.callback_urls.length; i++) {\n                callbackUrls += hook.callback_urls[i] + '\\n';\n            }\n        }\n\n        return {\n            displayName: hook.display_name || '',\n            description: hook.description || '',\n            contentType: hook.content_type || 'application/x-www-form-urlencoded',\n            channelId: hook.channel_id || '',\n            triggerWords,\n            triggerWhen: hook.trigger_when || 0,\n            callbackUrls,\n            saving: false,\n            clientError: null,\n            username: hook.username || '',\n            iconURL: hook.icon_url || '',\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            clientError: '',\n        });\n\n        const triggerWords = [];\n        if (this.state.triggerWords) {\n            for (let triggerWord of this.state.triggerWords.split('\\n')) {\n                triggerWord = triggerWord.trim();\n\n                if (triggerWord.length > 0) {\n                    triggerWords.push(triggerWord);\n                }\n            }\n        }\n\n        if (!this.state.channelId && triggerWords.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.triggerWordsOrChannelRequired'\n                        defaultMessage='A valid channel or a list of trigger words is required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const callbackUrls = [];\n        for (let callbackUrl of this.state.callbackUrls.split('\\n')) {\n            callbackUrl = callbackUrl.trim();\n\n            if (callbackUrl.length > 0) {\n                callbackUrls.push(callbackUrl);\n            }\n        }\n\n        if (callbackUrls.length === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_outgoing_webhook.callbackUrlsRequired'\n                        defaultMessage='One or more callback URLs are required'\n                    />\n                ),\n            });\n\n            return;\n        }\n\n        const hook = {\n            team_id: this.props.team.id,\n            channel_id: this.state.channelId,\n            trigger_words: triggerWords,\n            trigger_when: parseInt(this.state.triggerWhen, 10),\n            callback_urls: callbackUrls,\n            display_name: this.state.displayName,\n            content_type: this.state.contentType,\n            description: this.state.description,\n            username: this.state.username,\n            icon_url: this.state.iconURL,\n        };\n\n        this.props.action(hook).then(() => this.setState({saving: false}));\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateContentType = (e) => {\n        this.setState({\n            contentType: e.target.value,\n        });\n    }\n\n    updateChannelId = (e) => {\n        this.setState({\n            channelId: e.target.value,\n        });\n    }\n\n    updateTriggerWords = (e) => {\n        this.setState({\n            triggerWords: e.target.value,\n        });\n    }\n\n    updateTriggerWhen = (e) => {\n        this.setState({\n            triggerWhen: e.target.value,\n        });\n    }\n\n    updateCallbackUrls = (e) => {\n        this.setState({\n            callbackUrls: e.target.value,\n        });\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateIconURL = (e) => {\n        this.setState({\n            iconURL: e.target.value,\n        });\n    }\n\n    render() {\n        const contentTypeOption1 = 'application/x-www-form-urlencoded';\n        const contentTypeOption2 = 'application/json';\n\n        var headerToRender = this.props.header;\n        var footerToRender = this.props.footer;\n        var renderExtra = this.props.renderExtra;\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks`}>\n                        <FormattedMessage\n                            id='installed_outgoing_webhooks.header'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id={headerToRender.id}\n                        defaultMessage={headerToRender.defaultMessage}\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.displayName'\n                                    defaultMessage='Title'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.displayName.help'\n                                        defaultMessage='Specify a title, of up to 64 characters, for the webhook settings page.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='500'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.description.help'\n                                        defaultMessage='Describe your outgoing webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='contentType'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.content_Type'\n                                    defaultMessage='Content Type'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.contentType}\n                                    onChange={this.updateContentType}\n                                >\n                                    <option\n                                        value={contentTypeOption1}\n                                    >\n                                        {contentTypeOption1}\n                                    </option>\n                                    <option\n                                        value={contentTypeOption2}\n                                    >\n                                        {contentTypeOption2}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help1'\n                                        defaultMessage='Specify the content type by which to send the request.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help2'\n                                        defaultMessage='For the server to encode the parameters in a URL format in the request body, select application/x-www-form-urlencoded.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.contentType.help3'\n                                        defaultMessage='For the server to format the request body as JSON, select application/json.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='channelId'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.channel'\n                                    defaultMessage='Channel'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <ChannelSelect\n                                    id='channelId'\n                                    value={this.state.channelId}\n                                    onChange={this.updateChannelId}\n                                    selectOpen={true}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.channel.help'\n                                        defaultMessage='This field is optional if you specify at least one trigger word. Specify the public channel that delivers the payload to the webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWords'\n                                    defaultMessage='Trigger Words (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='triggerWords'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.triggerWords}\n                                    onChange={this.updateTriggerWords}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWords.help'\n                                        defaultMessage='Specify the trigger words that send an HTTP POST request to your application.  The trigger can be for the channel, the outgoing webhook, or both. If you select only Channel, trigger words are optional. If you select both, the message must match both values.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='triggerWords'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.triggerWordsTriggerWhen'\n                                    defaultMessage='Trigger When'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.triggerWhen}\n                                    onChange={this.updateTriggerWhen}\n                                >\n                                    <option\n                                        value='0'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenFullWord', 'First word matches a trigger word exactly')}\n                                    </option>\n                                    <option\n                                        value='1'\n                                    >\n                                        {localizeMessage('add_outgoing_webhook.triggerWordsTriggerWhenStartsWith', 'First word starts with a trigger word')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.triggerWordsTriggerWhen.help'\n                                        defaultMessage='Specify when to trigger the outgoing webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='callbackUrls'\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.callbackUrls'\n                                    defaultMessage='Callback URLs (One Per Line)'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <textarea\n                                    id='callbackUrls'\n                                    rows='3'\n                                    maxLength='1000'\n                                    className='form-control'\n                                    value={this.state.callbackUrls}\n                                    onChange={this.updateCallbackUrls}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.callbackUrls.help'\n                                        defaultMessage='Specify the URL that the messages will be sent to. If the URL is private, add it as a {link}.'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://about.mattermost.com/default-allow-internal-connections-settings-documentation/'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_outgoing_webhook.callbackUrls.helpLinkText'\n                                                        defaultMessage='trusted internal connection'\n                                                    />\n                                                </a>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {this.props.enablePostUsernameOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='username'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.username'\n                                        defaultMessage='Username'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='username'\n                                        type='text'\n                                        maxLength='22'\n                                        className='form-control'\n                                        value={this.state.username}\n                                        onChange={this.updateUsername}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.username.help'\n                                            defaultMessage='Specify the username this integration will post as. Usernames can be up to 22 characters, and contain lowercase letters, numbers and the symbols \\\"-\\\", \\\"_\\\", and \\\".\\\". If left blank, the name specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {this.props.enablePostIconOverride &&\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                    htmlFor='iconURL'\n                                >\n                                    <FormattedMessage\n                                        id='add_outgoing_webhook.icon_url'\n                                        defaultMessage='Profile Picture'\n                                    />\n                                </label>\n                                <div className='col-md-5 col-sm-8'>\n                                    <input\n                                        id='iconURL'\n                                        type='text'\n                                        maxLength='1024'\n                                        className='form-control'\n                                        value={this.state.iconURL}\n                                        onChange={this.updateIconURL}\n                                    />\n                                    <div className='form__help'>\n                                        <FormattedMessage\n                                            id='add_outgoing_webhook.icon_url.help'\n                                            defaultMessage='Enter the URL of a .png or .jpg file for this integration to use as the profile picture when posting. The file should be at least 128 pixels by 128 pixels. If left blank, the profile picture specified by the webhook creator is used.'\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.props.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/outgoing_webhooks`}\n                            >\n                                <FormattedMessage\n                                    id='add_outgoing_webhook.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                spinningText={localizeMessage(this.props.loading.id, this.props.loading.defaultMessage)}\n                                onClick={this.handleSubmit}\n                                id='saveWebhook'\n                            >\n                                <FormattedMessage\n                                    id={footerToRender.id}\n                                    defaultMessage={footerToRender.defaultMessage}\n                                />\n                            </SpinnerButton>\n                            {renderExtra}\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_command.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_command.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new command\n            */\n            addCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addCommand = async (command) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addCommand(command);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands/confirm?type=commands&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addCommand}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addCommand} from 'mattermost-redux/actions/integrations';\n\nimport AddCommand from './add_command.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_incoming_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_incoming_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add a new incoming webhook\n            */\n            createIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addIncomingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.createIncomingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=incoming_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.addIncomingHook}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddIncomingWebhook from './add_incoming_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: t('add_oauth_app.header'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('installed_oauth_apps.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('installed_oauth_apps.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The request state for addOAuthApp action. Contains status and error\n        */\n        addOAuthAppRequest: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to add new OAuthApp\n            */\n            addOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOAuthApp = async (app) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.addOAuthApp(app);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=oauth2-apps&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOAuthApp}\n                serverError={this.state.serverError}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {addOAuthApp} from 'mattermost-redux/actions/integrations';\n\nimport AddOAuthApp from './add_oauth_app.jsx';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            addOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(AddOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\n\nconst HEADER = {id: t('integrations.add'), defaultMessage: 'Add'};\nconst FOOTER = {id: t('add_outgoing_webhook.save'), defaultMessage: 'Save'};\nconst LOADING = {id: t('add_outgoing_webhook.saving'), defaultMessage: 'Saving...'};\n\nexport default class AddOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to add a new outgoing webhook\n             */\n            createOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            serverError: '',\n        };\n    }\n\n    addOutgoingHook = async (hook) => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.createOutgoingHook(hook);\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=outgoing_webhooks&id=${data.id}`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={''}\n                action={this.addOutgoingHook}\n                serverError={this.state.serverError}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {createOutgoingHook} from 'mattermost-redux/actions/integrations';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport AddOutgoingWebhook from './add_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    return {\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Tooltip} from 'react-bootstrap';\n\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {General} from 'mattermost-redux/constants';\n\nimport BotDefaultIcon from 'images/bot_default_icon.png';\n\nimport {browserHistory} from 'utils/browser_history';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport SpinnerButton from 'components/spinner_button';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormError from 'components/form_error';\nimport {AcceptedProfileImageTypes, Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport * as FileUtils from 'utils/file_utils.jsx';\n\nconst roleOptionSystemAdmin = 'System Admin';\nconst roleOptionMember = 'Member';\n\nexport default class AddBot extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Bot to edit (if editing)\n        */\n        bot: PropTypes.object,\n\n        /**\n        *  Bot user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Roles of the bot to edit (if editing)\n        */\n        roles: PropTypes.string,\n\n        /**\n        * Maximum upload file size (for bot account profile picture)\n        */\n        maxFileSize: PropTypes.number.isRequired,\n\n        /**\n         * Editing user has the MANAGE_SYSTEM permission\n        */\n        editingUserHasManageSystem: PropTypes.bool.isRequired,\n\n        /**\n        * Bot to edit\n        */\n        actions: PropTypes.shape({\n\n            /**\n            * Creates a new bot account.\n            */\n            createBot: PropTypes.func.isRequired,\n\n            /**\n            * Patches an existing bot account.\n            */\n            patchBot: PropTypes.func.isRequired,\n\n            /**\n            * Uploads a user profile image\n            */\n            uploadProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * Set profile image to default\n            */\n            setDefaultProfileImage: PropTypes.func.isRequired,\n\n            /**\n            * For creating default access token\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * For creating setting bot to system admin or special posting permissions\n            */\n            updateUserRoles: PropTypes.func.isRequired,\n        }),\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: '',\n            username: '',\n            displayName: '',\n            description: '',\n            adding: false,\n            image: BotDefaultIcon,\n            role: roleOptionMember,\n            postAll: false,\n            postChannels: false,\n        };\n\n        if (this.props.bot) {\n            this.state.username = this.props.bot.username;\n            this.state.displayName = this.props.bot.display_name;\n            this.state.description = this.props.bot.description;\n            this.state.role = UserUtils.isSystemAdmin(this.props.roles || '') ? roleOptionSystemAdmin : roleOptionMember;\n            this.state.postAll = UserUtils.hasPostAllRole(this.props.roles || '');\n            this.state.postChannels = UserUtils.hasPostAllPublicRole(this.props.roles || '');\n        }\n    }\n\n    updateUsername = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    updateDisplayName = (e) => {\n        this.setState({\n            displayName: e.target.value,\n        });\n    }\n\n    updateDescription = (e) => {\n        this.setState({\n            description: e.target.value,\n        });\n    }\n\n    updateRole = (e) => {\n        this.setState({\n            role: e.target.value,\n        });\n    }\n\n    updatePostAll = (e) => {\n        this.setState({\n            postAll: e.target.checked,\n        });\n    }\n\n    updatePostChannels = (e) => {\n        this.setState({\n            postChannels: e.target.checked,\n        });\n    }\n\n    updatePicture = (e) => {\n        if (e.target.files && e.target.files[0]) {\n            const pictureFile = e.target.files[0];\n            this.previewBlob = URL.createObjectURL(pictureFile);\n\n            var reader = new FileReader();\n            reader.onload = (e2) => {\n                const orientation = FileUtils.getExifOrientation(e2.target.result);\n                const orientationStyles = FileUtils.getOrientationStyles(orientation);\n\n                this.setState({\n                    image: this.previewBlob,\n                    orientationStyles,\n                });\n            };\n            reader.readAsArrayBuffer(pictureFile);\n            e.target.value = null;\n            this.setState({pictureFile});\n        } else {\n            this.setState({pictureFile: null, image: null});\n        }\n    }\n\n    setDefault = () => {\n        this.setState({pictureFile: 'default', image: BotDefaultIcon});\n    }\n\n    updateRoles = async (data) => {\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.role === roleOptionSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.postAll) {\n            roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n        } else if (this.state.postChannels) {\n            roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n        }\n\n        const rolesResult = await this.props.actions.updateUserRoles(data.user_id, roles);\n        if (rolesResult) {\n            return rolesResult.error;\n        }\n\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.adding) {\n            return;\n        }\n\n        if (!this.state.username || this.state.username.length < 3) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='bots.manage.add.invalid_username'\n                        defaultMessage='Usernames have to begin with a lowercase letter and be 3-22 characters long. You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        if (this.state.pictureFile) {\n            if (!AcceptedProfileImageTypes.includes(this.state.pictureFile.type)) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.validImage'\n                            defaultMessage='Only BMP, JPG or PNG images may be used for profile pictures'\n                        />\n                    ),\n                });\n            } else if (this.state.pictureFile.size > this.props.maxFileSize) {\n                this.setState({\n                    error: (\n                        <FormattedMessage\n                            id='user.settings.general.imageTooLarge'\n                            defaultMessage='Unable to upload profile image. File is too large.'\n                        />\n                    ),\n                });\n            }\n        }\n\n        this.setState({\n            adding: true,\n            error: '',\n        });\n\n        const bot = {\n            username: this.state.username.toLowerCase().trim(),\n            display_name: this.state.displayName,\n            description: this.state.description,\n        };\n\n        let data;\n        let error;\n        if (this.props.bot) {\n            const result = await this.props.actions.patchBot(this.props.bot.user_id, bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.edit_failed', 'Failed to edit bot');\n            }\n\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    const imageResult = await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                    error = imageResult.error;\n                } else if (this.state.pictureFile && this.state.pictureFile === 'default') {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                return;\n            }\n        } else {\n            const usernameError = Utils.isValidBotUsername(bot.username);\n            if (usernameError) {\n                this.setState({\n                    adding: false,\n                    error: usernameError,\n                });\n                return;\n            }\n\n            const result = await this.props.actions.createBot(bot);\n            if (result) {\n                data = result.data;\n                error = result.error;\n            } else {\n                error = Utils.localizeMessage('bot.create_failed', 'Failed to create bot');\n            }\n\n            let token = '';\n            if (!error) {\n                if (this.state.pictureFile && this.state.pictureFile !== 'default') {\n                    await this.props.actions.uploadProfileImage(data.user_id, this.state.pictureFile);\n                } else {\n                    await this.props.actions.setDefaultProfileImage(data.user_id);\n                }\n                const tokenResult = await this.props.actions.createUserAccessToken(data.user_id,\n                    Utils.localizeMessage('bot.token.default.description', 'Default Token'),\n                );\n\n                // On error just skip the confirmation because we have a bot without a token.\n                if (!tokenResult || tokenResult.error) {\n                    browserHistory.push(`/${this.props.team.name}/integrations/bots`);\n                    return;\n                }\n\n                token = tokenResult.data.token;\n            }\n\n            if (!error && data) {\n                error = this.updateRoles(data);\n            }\n\n            if (data) {\n                browserHistory.push(`/${this.props.team.name}/integrations/confirm?type=bots&id=${data.user_id}&token=${token}`);\n                return;\n            }\n        }\n\n        this.setState({\n            adding: false,\n        });\n\n        if (error) {\n            this.setState({\n                error: error.message,\n            });\n        }\n    }\n\n    render() {\n        let subtitle = (\n            <FormattedMessage\n                id='bots.manage.add'\n                defaultMessage='Add'\n            />\n        );\n        let buttonText = (\n            <FormattedMessage\n                id='bots.manage.add.create'\n                defaultMessage='Create Bot Account'\n            />\n        );\n        let buttonActiveText = (\n            <FormattedMessage\n                id='bots.manage.add.creating'\n                defaultMessage='Creating...'\n            />\n        );\n\n        // If we are editing\n        if (this.props.bot) {\n            subtitle = (\n                <FormattedMessage\n                    id='bots.manage.edit'\n                    defaultMessage='Edit'\n                />\n            );\n            buttonText = (\n                <FormattedMessage\n                    id='bots.manage.edit.title'\n                    defaultMessage='Update'\n                />\n            );\n            buttonActiveText = (\n                <FormattedMessage\n                    id='bots.manage.edit.editing'\n                    defaultMessage='Updating...'\n                />\n            );\n        }\n\n        let imageURL = '';\n        let removeImageIcon = (\n            <OverlayTrigger\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={(\n                    <Tooltip id='removeIcon'>\n                        <FormattedMessage\n                            id='bot.remove_profile_picture'\n                            defaultMessage='Remove Bot Icon'\n                        />\n                    </Tooltip>\n                )}\n            >\n                <a\n                    className={'bot-profile__remove'}\n                    onClick={this.setDefault}\n                >\n                    <span>{'×'}</span>\n                </a>\n            </OverlayTrigger>\n        );\n        let imageStyles = null;\n        if (this.props.bot && !this.state.pictureFile) {\n            if (this.props.user) {\n                imageURL = Utils.imageURLForUser(this.props.user.id, this.props.user.last_picture_update);\n            } else {\n                imageURL = Utils.imageURLForUser(this.props.bot.user_id);\n            }\n        } else {\n            imageURL = this.state.image;\n            imageStyles = this.state.orientationStyles;\n            if (this.state.image === BotDefaultIcon) {\n                removeImageIcon = null;\n            }\n        }\n\n        return (\n            <div className='backstage-content'>\n                <BackstageHeader>\n                    <Link to={`/${this.props.team.name}/integrations/bots`}>\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    </Link>\n                    {subtitle}\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.username'\n                                    defaultMessage='Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='22'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.username.help'\n                                        defaultMessage='You can use lowercase letters, numbers, periods, dashes, and underscores.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='boticon'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.icon'\n                                    defaultMessage='Bot Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <div className={'bot-img-container'}>\n                                    <img\n                                        className={'bot-img'}\n                                        alt={'bot image'}\n                                        src={imageURL}\n                                        style={imageStyles}\n                                    />\n                                    {removeImageIcon}\n                                </div>\n                                <div\n                                    className='btn btn-sm btn-primary btn-file sel-btn'\n                                >\n                                    <FormattedMessage\n                                        id='bots.image.upload'\n                                        defaultMessage='Upload Image'\n                                    />\n                                    <input\n                                        accept='.jpg,.png,.bmp'\n                                        type='file'\n                                        onChange={this.updatePicture}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='bots.add.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.display_name.help'\n                                        defaultMessage={'(Optional) You can choose to display your bot\\'s full name rather than its username.'}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.description.help'\n                                        defaultMessage='(Optional) Let others know what this bot does.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='role'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.role'\n                                    defaultMessage='Role'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    className='form-control'\n                                    value={this.state.role}\n                                    disabled={!this.props.editingUserHasManageSystem}\n                                    onChange={this.updateRole}\n                                >\n                                    <option\n                                        value={roleOptionMember}\n                                    >\n                                        {Utils.localizeMessage('bot.add.role.member', 'Member')}\n                                    </option>\n                                    <option\n                                        value={roleOptionSystemAdmin}\n                                    >\n                                        {Utils.localizeMessage('bot.add.role.admin', 'System Admin')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.role.help'\n                                        defaultMessage='Choose what role the bot should have.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='row bot-profile__section'>\n                            <div className='col-md-5 col-sm-8 col-sm-offset-4'>\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.additionalRoles'\n                                    defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\n                                />\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postAll'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_all'\n                                    defaultMessage='post:all'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postAll'>\n                                        <input\n                                            id='postAll'\n                                            type='checkbox'\n                                            checked={this.state.postAll || this.state.role === roleOptionSystemAdmin}\n                                            onChange={this.updatePostAll}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_all.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_all.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost channels including direct messages.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='postChannels'\n                            >\n                                <FormattedMessage\n                                    id='bot.add.post_channels'\n                                    defaultMessage='post:channels'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <div className='checkbox no-padding'>\n                                    <label htmlFor='postChannels'>\n                                        <input\n                                            id='postChannels'\n                                            type='checkbox'\n                                            checked={this.state.postChannels || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                            onChange={this.updatePostChannels}\n                                            disabled={!this.props.editingUserHasManageSystem || this.state.role === roleOptionSystemAdmin || this.state.postAll}\n                                        />\n                                        <FormattedMessage\n                                            id='bot.add.post_channels.enabled'\n                                            defaultMessage='Enabled'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='bot.add.post_channels.help'\n                                        defaultMessage='Bot will have access to post to all Mattermost public channels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.state.error]}\n                            />\n                            <Link\n                                className='btn btn-link btn-sm'\n                                to={`/${this.props.team.name}/integrations/bots`}\n                            >\n                                <FormattedMessage\n                                    id='bots.manage.add.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.adding}\n                                spinningText={buttonActiveText}\n                                onClick={this.handleSubmit}\n                                id='saveBot'\n                            >\n                                {buttonText}\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateUserRoles, uploadProfileImage, setDefaultProfileImage, createUserAccessToken} from 'mattermost-redux/actions/users';\nimport {createBot, patchBot} from 'mattermost-redux/actions/bots';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport AddBot from './add_bot.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const botId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const bots = getBotAccounts(state);\n    const bot = bots ? bots[botId] : null;\n    const user = bot ? getUser(state, bot.user_id) : null;\n    const roles = user ? user.roles : null;\n    return {\n        maxFileSize: parseInt(config.MaxFileSize, 10),\n        bot,\n        roles,\n        editingUserHasManageSystem: haveISystemPermission(state, {permission: Permissions.MANAGE_SYSTEM}),\n        user,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            createBot,\n            patchBot,\n            uploadProfileImage,\n            setDefaultProfileImage,\n            createUserAccessToken,\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBot);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport Markdown from 'components/markdown';\nimport SaveButton from 'components/save_button';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\nimport * as Utils from 'utils/utils.jsx';\n\nexport function matchesFilter(bot, filter, owner) {\n    if (!filter) {\n        return true;\n    }\n    const username = bot.username || '';\n    const description = bot.description || '';\n    const displayName = bot.display_name || '';\n\n    let ownerUsername = 'plugin';\n    if (owner && owner.username) {\n        ownerUsername = owner.username;\n    }\n    return !(username.toLowerCase().indexOf(filter) === -1 &&\n        displayName.toLowerCase().indexOf(filter) === -1 &&\n        description.toLowerCase().indexOf(filter) === -1 &&\n        ownerUsername.toLowerCase().indexOf(filter) === -1);\n}\n\nexport default class Bot extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Bot that we are displaying\n        */\n        bot: PropTypes.object.isRequired,\n\n        /**\n        * Owner of the bot we are displaying\n        */\n        owner: PropTypes.object,\n\n        /**\n        * User of the bot we are displaying\n        */\n        user: PropTypes.object,\n\n        /**\n        * The access tokens of the bot user\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        * String used for filtering bot items\n        */\n        filter: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            confirmingId: '',\n            creatingTokenState: 'CLOSED',\n            token: {},\n            error: '',\n        };\n    }\n\n    enableBot = () => {\n        this.props.actions.enableBot(this.props.bot.user_id);\n    }\n\n    disableBot = () => {\n        this.props.actions.disableBot(this.props.bot.user_id);\n    }\n\n    enableUserAccessToken = (id) => {\n        this.props.actions.enableUserAccessToken(id);\n    }\n\n    disableUserAccessToken = (id) => {\n        this.props.actions.disableUserAccessToken(id);\n    }\n\n    confirmRevokeToken = (id) => {\n        this.setState({confirmingId: id});\n    }\n\n    revokeTokenConfirmed = () => {\n        this.props.actions.revokeUserAccessToken(this.state.confirmingId);\n        this.closeConfirm();\n    }\n\n    closeConfirm = () => {\n        this.setState({confirmingId: ''});\n    }\n\n    openCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'OPEN',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    closeCreateToken = () => {\n        this.setState({\n            creatingTokenState: 'CLOSED',\n            token: {\n                description: '',\n            },\n        });\n    }\n\n    handleUpdateDescription = (e) => {\n        this.setState({\n            token: Object.assign({}, this.state.token, {description: e.target.value}),\n        });\n    }\n\n    handleCreateToken = async (e) => {\n        e.preventDefault();\n\n        if (this.state.token.description === '') {\n            this.setState({error: (\n                <FormattedMessage\n                    id='bot.token.error.description'\n                    defaultMessage='Please enter a description.'\n                />\n            )});\n            return;\n        }\n\n        const {data, error} = await this.props.actions.createUserAccessToken(this.props.bot.user_id, this.state.token.description);\n        if (data) {\n            this.setState({creatingTokenState: 'CREATED', token: data});\n        } else if (error) {\n            this.setState({error: error.message});\n        }\n    }\n\n    render() {\n        const username = this.props.bot.username || '';\n        const description = this.props.bot.description || '';\n        const displayName = this.props.bot.display_name || '';\n\n        let ownerUsername = 'plugin';\n        if (this.props.owner && this.props.owner.username) {\n            ownerUsername = this.props.owner.username;\n        }\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        if (!matchesFilter(this.props.bot, filter, this.props.owner)) {\n            return null;\n        }\n\n        const tokenList = [];\n        Object.values(this.props.accessTokens).forEach((token) => {\n            let activeLink;\n            let disableClass = '';\n            let disabledText;\n\n            if (token.is_active) {\n                activeLink = (\n                    <a\n                        name={token.id + '_deactivate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.disableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivate'\n                            defaultMessage='Disable'\n                        />\n                    </a>);\n            } else {\n                disableClass = 'light';\n                disabledText = (\n                    <span className='mr-2 light'>\n                        <FormattedMessage\n                            id='user.settings.tokens.deactivatedWarning'\n                            defaultMessage='(Disabled)'\n                        />\n                    </span>\n                );\n                activeLink = (\n                    <a\n                        name={token.id + '_activate'}\n                        href='#'\n                        onClick={(e) => {\n                            e.preventDefault();\n                            this.enableUserAccessToken(token.id);\n                        }}\n                    >\n                        <FormattedMessage\n                            id='user.settings.tokens.activate'\n                            defaultMessage='Enable'\n                        />\n                    </a>\n                );\n            }\n\n            tokenList.push(\n                <div\n                    key={token.id}\n                    className='bot-list__item'\n                >\n                    <div className='item-details__row d-flex justify-content-between'>\n                        <div className={disableClass}>\n                            <div className='whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenDesc'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </b>\n                                {token.description}\n                            </div>\n                            <div className='setting-box__token-id whitespace--nowrap overflow--ellipsis'>\n                                <b>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.tokenId'\n                                        defaultMessage='Token ID: '\n                                    />\n                                </b>\n                                {token.id}\n                            </div>\n                        </div>\n                        <div>\n                            {disabledText}\n                            {activeLink}\n                            {' - '}\n                            <a\n                                name={token.id + '_delete'}\n                                href='#'\n                                onClick={(e) => {\n                                    e.preventDefault();\n                                    this.confirmRevokeToken(token.id);\n                                }}\n                            >\n                                <FormattedMessage\n                                    id='user.settings.tokens.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>,\n            );\n        });\n\n        let options;\n        if (ownerUsername !== 'plugin') {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        id='createToken'\n                        className='style--none color--link'\n                        onClick={this.openCreateToken}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.create_token'\n                            defaultMessage='Create New Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/bots/edit?id=${this.props.bot.user_id}`}>\n                        <FormattedMessage\n                            id='bots.manage.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <button\n                        className='style--none color--link'\n                        onClick={this.disableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.disable'\n                            defaultMessage='Disable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n        if (this.props.bot.delete_at !== 0) {\n            options = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.enableBot}\n                    >\n                        <FormattedMessage\n                            id='bot.manage.enable'\n                            defaultMessage='Enable'\n                        />\n                    </button>\n                </div>\n            );\n        }\n\n        if (this.state.creatingTokenState === 'OPEN') {\n            tokenList.push(\n                <div\n                    key={'create'}\n                    className='bot-list__item'\n                >\n                    <div key={'create'}>\n                        <form\n                            className='form-horizontal'\n                            onSubmit={this.handleCreateToken}\n                        >\n                            <div className='row'>\n                                <label className='col-sm-auto control-label'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.name'\n                                        defaultMessage='Token Description: '\n                                    />\n                                </label>\n                                <div className='col-sm-4'>\n                                    <input\n                                        autoFocus={true}\n                                        className='form-control form-sm'\n                                        type='text'\n                                        maxLength={64}\n                                        value={this.state.token.description}\n                                        onChange={this.handleUpdateDescription}\n                                    />\n                                </div>\n                            </div>\n                            <div>\n                                <div className='pt-2 pb-2'>\n                                    <FormattedMessage\n                                        id='user.settings.tokens.nameHelp'\n                                        defaultMessage='Enter a description for your token to remember what it does.'\n                                    />\n                                </div>\n                                <label\n                                    id='clientError'\n                                    className='has-error is-empty'\n                                >\n                                    {this.state.error}\n                                </label>\n                                <div className='mt-2'>\n                                    <SaveButton\n                                        btnClass='btn-sm btn-primary'\n                                        savingMessage={\n                                            <FormattedMessage\n                                                id='user.settings.tokens.save'\n                                                defaultMessage='Save'\n                                            />\n                                        }\n                                        saving={false}\n                                    />\n                                    <button\n                                        className='btn btn-sm btn-link'\n                                        onClick={this.closeCreateToken}\n                                    >\n                                        <FormattedMessage\n                                            id='user.settings.tokens.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>,\n            );\n        } else if (this.state.creatingTokenState === 'CREATED') {\n            tokenList.push(\n                <div\n                    key={'created'}\n                    className='bot-list__item alert alert-warning'\n                >\n                    <div className='mb-2'>\n                        <WarningIcon additionalClassName='mr-2'/>\n                        <FormattedMessage\n                            id='user.settings.tokens.copy'\n                            defaultMessage=\"Please copy the access token below. You won't be able to see it again!\"\n                        />\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.name'\n                            defaultMessage='Token Description: '\n                        />\n                        {this.state.token.description}\n                    </div>\n                    <div className='whitespace--nowrap overflow--ellipsis'>\n                        <FormattedMessage\n                            id='user.settings.tokens.id'\n                            defaultMessage='Token ID: '\n                        />\n                        {this.state.token.id}\n                    </div>\n                    <strong className='word-break--all'>\n                        <FormattedMessage\n                            id='user.settings.tokens.token'\n                            defaultMessage='Access Token: '\n                        />\n                        {this.state.token.token}\n                    </strong>\n                    <div className='mt-2'>\n                        <button\n                            className='btn btn-sm btn-primary'\n                            onClick={this.closeCreateToken}\n                        >\n                            <FormattedMessage\n                                id='bot.create_token.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                    </div>\n                </div>,\n            );\n        }\n\n        const imageURL = Utils.imageURLForUser(this.props.user.id, this.props.user.last_picture_update);\n\n        return (\n            <div className='backstage-list__item'>\n                <div className={'bot-list-img-container'}>\n                    <img\n                        className={'bot-list-img'}\n                        alt={'bot image'}\n                        src={imageURL}\n                    />\n                </div>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName + ' (@' + username + ')'}\n                        </strong>\n                        {options}\n                    </div>\n                    <div className='bot-details__description'>\n                        <Markdown message={description}/>\n                    </div>\n                    <div className='light small'>\n                        <FormattedMessage\n                            id='bots.managed_by'\n                            defaultMessage='Managed by '\n                        />\n                        {ownerUsername}\n                    </div>\n                    <div className='bot-list is-empty'>\n                        {tokenList}\n                    </div>\n                </div>\n                <ConfirmModal\n                    title={\n                        <FormattedMessage\n                            id='bots.token.delete'\n                            defaultMessage='Delete Token'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='bots.token.confirm_text'\n                            defaultMessage='Are you sure you want to delete the token?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='bots.token.confirm'\n                            defaultMessage='Delete'\n                        />\n                    }\n                    show={this.state.confirmingId !== ''}\n                    onConfirm={this.revokeTokenConfirmed}\n                    onCancel={this.closeConfirm}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {getSiteURL} from 'utils/url';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport Constants from 'utils/constants';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport Bot, {matchesFilter} from './bot.jsx';\n\nexport default class Bots extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Map from botUserId to bot.\n        */\n        bots: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to accessTokens.\n        */\n        accessTokens: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to owner.\n        */\n        owners: PropTypes.object.isRequired,\n\n        /**\n        *  Map from botUserId to user.\n        */\n        users: PropTypes.object.isRequired,\n\n        createBots: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * Ensure we have bot accounts\n            */\n            loadBots: PropTypes.func.isRequired,\n\n            /**\n            * Load access tokens for bot accounts\n            */\n            getUserAccessTokensForUser: PropTypes.func.isRequired,\n\n            /**\n            * Access token managment\n            */\n            createUserAccessToken: PropTypes.func.isRequired,\n            revokeUserAccessToken: PropTypes.func.isRequired,\n            enableUserAccessToken: PropTypes.func.isRequired,\n            disableUserAccessToken: PropTypes.func.isRequired,\n\n            /**\n            * Load owner of bot account\n            */\n            getUser: PropTypes.func.isRequired,\n\n            /**\n            * Disable a bot\n            */\n            disableBot: PropTypes.func.isRequired,\n\n            /**\n            * Enable a bot\n            */\n            enableBot: PropTypes.func.isRequired,\n        }),\n\n        /**\n        *  Only used for routing since backstage is team based.\n        */\n        team: PropTypes.object.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.loadBots(\n            Constants.Integrations.START_PAGE_NUM,\n            Constants.Integrations.PAGE_SIZE,\n        ).then(\n            (result) => {\n                if (result.data) {\n                    const promises = [];\n\n                    for (const bot of result.data) {\n                        // We don't need to wait for this and we need to accept failure in the case where bot.owner_id is a plugin id\n                        this.props.actions.getUser(bot.owner_id);\n\n                        // We want to wait for these.\n                        promises.push(this.props.actions.getUser(bot.user_id));\n                        promises.push(this.props.actions.getUserAccessTokensForUser(bot.user_id));\n                    }\n\n                    Promise.all(promises).then(() => {\n                        this.setState({loading: false});\n                    });\n                }\n            },\n        );\n    }\n\n    DisabledSection(props) {\n        if (!props.hasDisabled) {\n            return null;\n        }\n        const botsToDisplay = React.Children.map(props.disabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <React.Fragment>\n                <div className='bot-disabled'>\n                    <FormattedMessage\n                        id='bots.disabled'\n                        defaultMessage='Disabled'\n                    />\n                </div>\n                <div className='bot-list__disabled'>\n                    {botsToDisplay}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    EnabledSection(props) {\n        const botsToDisplay = React.Children.map(props.enabledBots, (child) => {\n            return React.cloneElement(child, {filter: props.filter});\n        });\n        return (\n            <div>\n                {botsToDisplay}\n            </div>\n        );\n    }\n\n    botToJSX = (bot) => {\n        return (\n            <Bot\n                key={bot.user_id}\n                bot={bot}\n                owner={this.props.owners[bot.user_id]}\n                user={this.props.users[bot.user_id]}\n                accessTokens={this.props.accessTokens[bot.user_id] || {}}\n                actions={this.props.actions}\n                team={this.props.team}\n            />\n        );\n    };\n\n    bots = (filter) => {\n        const bots = Object.values(this.props.bots).sort((a, b) => a.username.localeCompare(b.username));\n        const match = (bot) => matchesFilter(bot, filter, this.props.owners[bot.user_id]);\n        const enabledBots = bots.filter((bot) => bot.delete_at === 0).filter(match).map(this.botToJSX);\n        const disabledBots = bots.filter((bot) => bot.delete_at > 0).filter(match).map(this.botToJSX);\n        const sections = (\n            <div key='sections'>\n                <this.EnabledSection\n                    enabledBots={enabledBots}\n                />\n                <this.DisabledSection\n                    hasDisabled={disabledBots.length > 0}\n                    disabledBots={disabledBots}\n                />\n            </div>\n        );\n\n        return [sections, enabledBots.length > 0 || disabledBots.length > 0];\n    }\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='bots.manage.header'\n                        defaultMessage='Bot Accounts'\n                    />\n                }\n                addText={this.props.createBots &&\n                    <FormattedMessage\n                        id='bots.manage.add'\n                        defaultMessage='Add Bot Account'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/bots/add'}\n                addButtonId='addBotAccount'\n                emptyText={\n                    <FormattedMessage\n                        id='bots.manage.empty'\n                        defaultMessage='No bot accounts found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='bots.manage.emptySearch'\n                        defaultMessage='No bot accounts match **{searchTerm}**'\n                    />\n                }\n                helpText={\n                    <React.Fragment>\n                        <FormattedMessage\n                            id='bots.manage.help1'\n                            defaultMessage='Use {botAccounts} to integrate with Mattermost through plugins or the API. Bot accounts are available to everyone on your server. '\n                            values={{\n                                botAccounts: (\n                                    <a\n                                        target='_blank'\n                                        rel='noopener noreferrer'\n                                        href='https://mattermost.com/pl/default-bot-accounts'\n                                    >\n                                        <FormattedMessage\n                                            id='bots.manage.bot_accounts'\n                                            defaultMessage='Bot Accounts'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                        <FormattedMarkdownMessage\n                            id='bots.manage.help2'\n                            defaultMessage={'Enable bot account creation in the [System Console]({siteURL}/admin_console/integrations/bot_accounts).'}\n                            values={{\n                                siteURL: getSiteURL(),\n                            }}\n                        />\n                    </React.Fragment>\n                }\n                searchPlaceholder={Utils.localizeMessage('bots.manage.search', 'Search Bot Accounts')}\n                loading={this.state.loading}\n            >\n                {this.bots}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {loadBots, disableBot, enableBot} from 'mattermost-redux/actions/bots';\nimport {createUserAccessToken, revokeUserAccessToken, enableUserAccessToken, disableUserAccessToken, getUserAccessTokensForUser, getUser} from 'mattermost-redux/actions/users';\nimport * as UserSelectors from 'mattermost-redux/selectors/entities/users';\n\nimport Bots from './bots.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const createBots = config.EnableBotAccountCreation === 'true';\n    const bots = getBotAccounts(state);\n    const botValues = Object.values(bots);\n    const owners = botValues.\n        reduce((result, bot) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.owner_id);\n            return result;\n        }, {});\n    const users = botValues.\n        reduce((result, bot) => {\n            result[bot.user_id] = UserSelectors.getUser(state, bot.user_id);\n            return result;\n        }, {});\n\n    return {\n        createBots,\n        bots,\n        accessTokens: state.entities.admin.userAccessTokensByUser,\n        owners,\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadBots,\n            getUserAccessTokensForUser,\n            createUserAccessToken,\n            revokeUserAccessToken,\n            enableUserAccessToken,\n            disableUserAccessToken,\n            getUser,\n            disableBot,\n            enableBot,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Bots);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport InstalledCommands from 'components/integrations/installed_commands';\nimport AddCommand from 'components/integrations/add_command';\nimport EditCommand from 'components/integrations/edit_command';\nimport ConfirmIntegration from 'components/integrations/confirm_integration';\n\nconst CommandRoute = ({component: Component, extraProps, ...rest}) => ( //eslint-disable-line react/prop-types\n    <Route\n        {...rest}\n        render={(props) => (\n            <Component\n                {...extraProps}\n                {...props}\n            />\n        )}\n    />\n);\n\nexport default class CommandsContainer extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data needed to pass into child components\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user data needed to pass into child components\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Object from react-router\n        */\n        match: PropTypes.shape({\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            loadCommandsAndProfilesForTeam: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.loadCommandsAndProfilesForTeam(this.props.team.id).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    render() {\n        const extraProps = {\n            loading: this.state.loading,\n            commands: this.props.commands || [],\n            users: this.props.users,\n            team: this.props.team,\n            user: this.props.user,\n        };\n        return (\n            <div>\n                <Switch>\n                    <Route\n                        exact={true}\n                        path={`${this.props.match.url}/`}\n                        render={() => (<Redirect to={`${this.props.match.url}/installed`}/>)}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/installed`}\n                        component={InstalledCommands}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/add`}\n                        component={AddCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/edit`}\n                        component={EditCommand}\n                    />\n                    <CommandRoute\n                        extraProps={extraProps}\n                        path={`${this.props.match.url}/confirm`}\n                        component={ConfirmIntegration}\n                    />\n                </Switch>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadCommandsAndProfilesForTeam} from 'actions/integration_actions';\n\nimport CommandsContainer from './commands_container.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commands: Object.values(getCommands(state)),\n        users: getUsers(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadCommandsAndProfilesForTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommandsContainer);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants, ErrorPageTypes} from 'utils/constants.jsx';\nimport CopyText from 'components/copy_text';\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {getSiteURL} from 'utils/url';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class ConfirmIntegration extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            location: PropTypes.object,\n            commands: PropTypes.object,\n            oauthApps: PropTypes.object,\n            incomingHooks: PropTypes.object,\n            outgoingHooks: PropTypes.object,\n            bots: PropTypes.object,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: (new URLSearchParams(this.props.location.search)).get('type'),\n            id: (new URLSearchParams(this.props.location.search)).get('id'),\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        const command = this.props.commands[this.state.id];\n        const incomingHook = this.props.incomingHooks[this.state.id];\n        const outgoingHook = this.props.outgoingHooks[this.state.id];\n        const oauthApp = this.props.oauthApps[this.state.id];\n        const bot = this.props.bots[this.state.id];\n\n        if (this.state.type === Constants.Integrations.COMMAND && command) {\n            const commandToken = command.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command is set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (details at [Slash Commands](!https://docs.mattermost.com/developer/slash-commands.html)).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_command.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: commandToken,\n                        }}\n                    />\n                    <CopyText\n                        value={commandToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK && incomingHook) {\n            const incomingHookToken = getSiteURL() + '/hooks/' + incomingHook.id;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook is set up. Please send data to the following URL (details at [Incoming Webhooks](!https://docs.mattermost.com/developer/webhooks-incoming.html)).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='**URL**: {url}'\n                        values={{\n                            url: '`' + incomingHookToken + '`',\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={incomingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK && outgoingHook) {\n            const outgoingHookToken = outgoingHook.token;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook is set up. The following token will be sent in the outgoing payload. Please use it to verify that the request came from your Mattermost team (details at [Outgoing Webhooks](!https://docs.mattermost.com/developer/webhooks-outgoing.html)).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: outgoingHookToken,\n                        }}\n                    />\n                    <CopyText\n                        value={outgoingHookToken}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP && oauthApp) {\n            const oauthAppToken = oauthApp.id;\n            const oauthAppSecret = oauthApp.client_secret;\n\n            headerText = (\n                <FormattedMessage\n                    id={'installed_oauth_apps.header'}\n                    defaultMessage='OAuth 2.0 Applications'\n                />\n            );\n\n            helpText = [];\n            helpText.push(\n                <p key='add_oauth_app.doneHelp'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.doneHelp'\n                        defaultMessage='Your OAuth 2.0 application is set up. Please use the following Client ID and Client Secret when requesting authorization for your application (details at [oAuth 2 Applications](!https://docs.mattermost.com/developer/oauth-2-0-applications.html)).'\n                    />\n                </p>,\n            );\n            helpText.push(\n                <p key='add_oauth_app.clientId'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientId'\n                        defaultMessage='**Client ID**: {id}'\n                        values={{\n                            id: oauthAppToken,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_id'\n                        defaultMessage='Copy Client Id'\n                        value={oauthAppToken}\n                    />\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.clientSecret'\n                        defaultMessage='**Client Secret**: {secret}'\n                        values={{\n                            secret: oauthAppSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={oauthAppSecret}\n                    />\n                </p>,\n            );\n\n            helpText.push(\n                <p key='add_oauth_app.doneUrlHelp'>\n                    <FormattedMessage\n                        id='add_oauth_app.doneUrlHelp'\n                        defaultMessage='Here are your authorized redirect URLs.'\n                    />\n                </p>,\n            );\n\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_oauth_app.url'\n                        defaultMessage='**URL(s)**: {url}'\n                        values={{\n                            url: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.BOT && bot) {\n            const botToken = (new URLSearchParams(this.props.location.search)).get('token');\n\n            headerText = (\n                <FormattedMessage\n                    id='bots.manage.header'\n                    defaultMessage='Bot Accounts'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedMarkdownMessage\n                        id='bots.manage.created.text'\n                        defaultMessage='Your bot account **{botname}** has been created successfully. Please use the following access token to connect to the bot (see [documentation](https://mattermost.com/pl/default-bot-accounts) for further details).'\n                        values={{\n                            botname: bot.display_name || bot.username,\n                        }}\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='**Token**: {token}'\n                        values={{\n                            token: botToken,\n                        }}\n                    />\n                    <CopyText\n                        value={botToken}\n                    />\n                    <br/>\n                    <br/>\n                    <FormattedMarkdownMessage\n                        id='add_outgoing_webhook.token.message'\n                        defaultMessage='Make sure to add this bot account to teams and channels you want it to interact in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.'\n                    />\n                </p>\n            );\n        } else {\n            browserHistory.replace(`/error?type=${ErrorPageTypes.PAGE_NOT_FOUND}`);\n            return '';\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4\n                        className='backstage-form__title'\n                        id='formTitle'\n                    >\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                            id='doneButton'\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getCommands, getOAuthApps, getIncomingHooks, getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getBotAccounts} from 'mattermost-redux/selectors/entities/bots';\n\nimport ConfirmIntegration from './confirm_integration.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        commands: getCommands(state),\n        oauthApps: getOAuthApps(state),\n        incomingHooks: getIncomingHooks(state),\n        outgoingHooks: getOutgoingHooks(state),\n        bots: getBotAccounts(state),\n    };\n}\n\nexport default connect(mapStateToProps)(ConfirmIntegration);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport DeleteModalTrigger from 'components/delete_modal_trigger.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nexport default class DeleteIntegration extends DeleteModalTrigger {\n    get triggerTitle() {\n        return (\n            <FormattedMessage\n                id='installed_integrations.delete'\n                defaultMessage='Delete'\n            />\n        );\n    }\n\n    get modalTitle() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.title'\n                defaultMessage='Delete Integration'\n            />\n        );\n    }\n\n    get modalMessage() {\n        return (\n            <div className='alert alert-warning'>\n                <WarningIcon additionalClassName='mr-1'/>\n                <FormattedMessage\n                    id={this.props.messageId}\n                    defaultMessage='This action permanently deletes the integration and breaks any integrations using it. Are you sure you want to delete it?'\n                />\n            </div>\n        );\n    }\n\n    get modalConfirmButton() {\n        return (\n            <FormattedMessage\n                id='integrations.delete.confirm.button'\n                defaultMessage='Delete'\n            />\n        );\n    }\n}\n\nDeleteIntegration.propTypes = {\n    messageId: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractCommand from '../abstract_command.jsx';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('edit_command.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('edit_command.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the command to edit\n        */\n        commandId: PropTypes.string.isRequired,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch team commands\n            */\n            getCustomTeamCommands: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit command\n            */\n            editCommand: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not commands are enabled.\n        */\n        enableCommands: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            originalCommand: null,\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableCommands) {\n            this.props.actions.getCustomTeamCommands(this.props.team.id).then(\n                () => {\n                    this.setState({\n                        originalCommand: Object.values(this.props.commands).filter((command) => command.id === this.props.commandId)[0],\n                    });\n                },\n            );\n        }\n    }\n\n    editCommand = async (command) => {\n        this.newCommand = command;\n\n        if (this.state.originalCommand.id) {\n            command.id = this.state.originalCommand.id;\n        }\n\n        if (this.state.originalCommand.url !== this.newCommand.url ||\n            this.state.originalCommand.trigger !== this.newCommand.trigger ||\n            this.state.originalCommand.method !== this.newCommand.method) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitCommand();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitCommand = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editCommand(this.newCommand);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/commands`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_command.confirm'\n                defaultMessage='Edit Slash Command'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_command.question'\n                defaultMessage='Your changes may break the existing slash command. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitCommand}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.state.originalCommand) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractCommand\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editCommand}\n                serverError={this.state.serverError}\n                initialCommand={this.state.originalCommand}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {editCommand, getCustomTeamCommands} from 'mattermost-redux/actions/integrations';\nimport {getCommands} from 'mattermost-redux/selectors/entities/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditCommand from './edit_command.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const commandId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableCommands = config.EnableCommands === 'true';\n\n    return {\n        commandId,\n        commands: getCommands(state),\n        enableCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getCustomTeamCommands,\n            editCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCommand);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {t} from 'utils/i18n';\nimport AbstractIncomingWebhook from 'components/integrations/abstract_incoming_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: t('integrations.edit'), defaultMessage: 'Edit'};\nconst FOOTER = {id: t('update_incoming_webhook.update'), defaultMessage: 'Update'};\nconst LOADING = {id: t('update_incoming_webhook.updating'), defaultMessage: 'Updating...'};\n\nexport default class EditIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The incoming webhook to edit\n        */\n        hook: PropTypes.object,\n\n        /**\n        * The id of the incoming webhook to edit\n        */\n        hookId: PropTypes.string.isRequired,\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post username.\n        */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n        * Whether to allow configuration of the default post icon.\n        */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to update an incoming webhook\n            */\n            updateIncomingHook: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to get an incoming webhook\n            */\n            getIncomingHook: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.getIncomingHook(this.props.hookId);\n        }\n    }\n\n    editIncomingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        await this.submitHook();\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.updateIncomingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/incoming_webhooks`);\n            return;\n        }\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractIncomingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n                action={this.editIncomingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getIncomingHook, updateIncomingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditIncomingWebhook from './edit_incoming_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n\n    return {\n        hookId,\n        hook: state.entities.integrations.incomingHooks[hookId],\n        enableIncomingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateIncomingHook,\n            getIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditIncomingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport LoadingScreen from 'components/loading_screen';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractOAuthApp from '../abstract_oauth_app.jsx';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_incoming_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_incoming_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The current team\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * The id of the OAuthApp to edit\n        */\n        oauthAppId: PropTypes.string.isRequired,\n\n        /**\n        * The OAuthApp data\n        */\n        oauthApp: PropTypes.object,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to get OAuthApp\n            */\n            getOAuthApp: PropTypes.func.isRequired,\n\n            /**\n            * The function to call to edit OAuthApp\n            */\n            editOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.getOAuthApp(this.props.oauthAppId);\n        }\n    }\n\n    editOAuthApp = async (app) => {\n        this.newApp = app;\n\n        if (this.props.oauthApp.id) {\n            app.id = this.props.oauthApp.id;\n        }\n\n        if (this.props.oauthApp.token) {\n            app.token = this.props.oauthApp.token;\n        }\n\n        const callbackUrlsSame = (this.props.oauthApp.callback_urls.length === app.callback_urls.length) &&\n            this.props.oauthApp.callback_urls.every((v, i) => v === app.callback_urls[i]);\n\n        if (callbackUrlsSame === false) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitOAuthApp();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitOAuthApp = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.editOAuthApp(this.newApp);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/oauth2-apps`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_command.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_oauth_app.confirm'\n                defaultMessage='Edit OAuth 2.0 application'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_oauth_app.question'\n                defaultMessage='Your changes may break the existing OAuth 2.0 application. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitOAuthApp}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.oauthApp) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOAuthApp\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOAuthApp}\n                serverError={this.state.serverError}\n                initialApp={this.props.oauthApp}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOAuthApp, editOAuthApp} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOAuthApp from './edit_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const oauthAppId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        oauthAppId,\n        oauthApp: state.entities.integrations.oauthApps[oauthAppId],\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getOAuthApp,\n            editOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {browserHistory} from 'utils/browser_history';\nimport ConfirmModal from 'components/confirm_modal';\nimport AbstractOutgoingWebhook from 'components/integrations/abstract_outgoing_webhook.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nconst HEADER = {id: 'integrations.edit', defaultMessage: 'Edit'};\nconst FOOTER = {id: 'update_outgoing_webhook.update', defaultMessage: 'Update'};\nconst LOADING = {id: 'update_outgoing_webhook.updating', defaultMessage: 'Updating...'};\n\nexport default class EditOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * The current team\n         */\n        team: PropTypes.object.isRequired,\n\n        /**\n         * The outgoing webhook to edit\n         */\n        hook: PropTypes.object,\n\n        /**\n         * The id of the outgoing webhook to edit\n         */\n        hookId: PropTypes.string.isRequired,\n\n        actions: PropTypes.shape({\n\n            /**\n             * The function to call to update an outgoing webhook\n             */\n            updateOutgoingHook: PropTypes.func.isRequired,\n\n            /**\n             * The function to call to get an outgoing webhook\n             */\n            getOutgoingHook: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n\n        /**\n         * Whether to allow configuration of the default post username.\n         */\n        enablePostUsernameOverride: PropTypes.bool.isRequired,\n\n        /**\n         * Whether to allow configuration of the default post icon.\n         */\n        enablePostIconOverride: PropTypes.bool.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConfirmModal: false,\n            serverError: '',\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.getOutgoingHook(this.props.hookId);\n        }\n    }\n\n    editOutgoingHook = async (hook) => {\n        this.newHook = hook;\n\n        if (this.props.hook.id) {\n            hook.id = this.props.hook.id;\n        }\n\n        if (this.props.hook.token) {\n            hook.token = this.props.hook.token;\n        }\n\n        const triggerWordsSame = (this.props.hook.trigger_words.length === hook.trigger_words.length) &&\n            this.props.hook.trigger_words.every((v, i) => v === hook.trigger_words[i]);\n\n        const callbackUrlsSame = (this.props.hook.callback_urls.length === hook.callback_urls.length) &&\n            this.props.hook.callback_urls.every((v, i) => v === hook.callback_urls[i]);\n\n        if (this.props.hook.content_type !== hook.content_type ||\n            !triggerWordsSame || !callbackUrlsSame) {\n            this.handleConfirmModal();\n        } else {\n            await this.submitHook();\n        }\n    }\n\n    handleConfirmModal = () => {\n        this.setState({showConfirmModal: true});\n    }\n\n    confirmModalDismissed = () => {\n        this.setState({showConfirmModal: false});\n    }\n\n    submitHook = async () => {\n        this.setState({serverError: ''});\n\n        const {data, error} = await this.props.actions.updateOutgoingHook(this.newHook);\n\n        if (data) {\n            browserHistory.push(`/${this.props.team.name}/integrations/outgoing_webhooks`);\n            return;\n        }\n\n        this.setState({showConfirmModal: false});\n\n        if (error) {\n            this.setState({serverError: error.message});\n        }\n    }\n\n    renderExtra = () => {\n        const confirmButton = (\n            <FormattedMessage\n                id='update_outgoing_webhook.update'\n                defaultMessage='Update'\n            />\n        );\n\n        const confirmTitle = (\n            <FormattedMessage\n                id='update_outgoing_webhook.confirm'\n                defaultMessage='Edit Outgoing Webhook'\n            />\n        );\n\n        const confirmMessage = (\n            <FormattedMessage\n                id='update_outgoing_webhook.question'\n                defaultMessage='Your changes may break the existing outgoing webhook. Are you sure you would like to update it?'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                title={confirmTitle}\n                message={confirmMessage}\n                confirmButtonText={confirmButton}\n                show={this.state.showConfirmModal}\n                onConfirm={this.submitHook}\n                onCancel={this.confirmModalDismissed}\n            />\n        );\n    }\n\n    render() {\n        if (!this.props.hook) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <AbstractOutgoingWebhook\n                team={this.props.team}\n                header={HEADER}\n                footer={FOOTER}\n                loading={LOADING}\n                renderExtra={this.renderExtra()}\n                action={this.editOutgoingHook}\n                serverError={this.state.serverError}\n                initialHook={this.props.hook}\n                enablePostUsernameOverride={this.props.enablePostUsernameOverride}\n                enablePostIconOverride={this.props.enablePostIconOverride}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getOutgoingHook, updateOutgoingHook} from 'mattermost-redux/actions/integrations';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditOutgoingWebhook from './edit_outgoing_webhook.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const config = getConfig(state);\n    const hookId = (new URLSearchParams(ownProps.location.search)).get('id');\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enablePostUsernameOverride = config.EnablePostUsernameOverride === 'true';\n    const enablePostIconOverride = config.EnablePostIconOverride === 'true';\n\n    return {\n        hookId,\n        hook: state.entities.integrations.outgoingHooks[hookId],\n        enableOutgoingWebhooks,\n        enablePostUsernameOverride,\n        enablePostIconOverride,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateOutgoingHook,\n            getOutgoingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport Integrations from './integrations.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n    const enableCommands = config.EnableCommands === 'true';\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        siteName,\n        enableIncomingWebhooks,\n        enableOutgoingWebhooks,\n        enableCommands,\n        enableOAuthServiceProvider,\n    };\n}\n\nexport default connect(mapStateToProps)(Integrations);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from '../copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(command, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return command.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        command.description.toLowerCase().indexOf(filter) !== -1 ||\n        command.trigger.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledCommand extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        * Installed slash command to display\n        */\n        command: PropTypes.object.isRequired,\n\n        /**\n        * The function to call when Regenerate Token link is clicked\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter command, comes from BackstageList\n        */\n        filter: PropTypes.string,\n\n        /**\n        * The creator user data\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        * Set to show edit link\n        */\n        canChange: PropTypes.bool.isRequired,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.command);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.command);\n    }\n\n    render() {\n        const command = this.props.command;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(command, filter)) {\n            return null;\n        }\n\n        let name;\n\n        if (command.display_name) {\n            name = command.display_name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_commands.unnamed_command'\n                    defaultMessage='Unnamed Slash Command'\n                />\n            );\n        }\n\n        let description = null;\n        if (command.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {command.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let trigger = '- /' + command.trigger;\n        if (command.auto_complete && command.auto_complete_hint) {\n            trigger += ' ' + command.auto_complete_hint;\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regenerate Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/commands/edit?id=${command.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_commands.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const commandToken = command.token;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <div>\n                            <strong className='item-details__name'>\n                                {name}\n                            </strong>\n                            <span className='item-details__trigger'>\n                                {trigger}\n                            </span>\n                        </div>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: commandToken,\n                                }}\n                            />\n                            <CopyText\n                                value={commandToken}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: command.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {deleteCommand, regenCommandToken} from 'mattermost-redux/actions/integrations';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport InstalledCommands from './installed_commands.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const canManageOthersSlashCommands = haveITeamPermission(state, {team: ownProps.team.id, permission: Permissions.MANAGE_OTHERS_SLASH_COMMANDS});\n\n    return {\n        canManageOthersSlashCommands,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            regenCommandToken,\n            deleteCommand,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledCommands);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledCommand, {matchesFilter} from '../installed_command.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledCommands extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team object\n        */\n        team: PropTypes.object,\n\n        /**\n        * The user object\n        */\n        user: PropTypes.object,\n\n        /**\n        * The users collection\n        */\n        users: PropTypes.object,\n\n        /**\n        * Installed slash commands to display\n        */\n        commands: PropTypes.array,\n\n        /**\n        * Set whether to show the loading... animation or not\n        */\n        loading: PropTypes.bool,\n\n        /**\n        * Set to allow changes to installed slash commands\n        */\n        canManageOthersSlashCommands: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call when Regenerate Token link is clicked\n            */\n            regenCommandToken: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteCommand: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    regenCommandToken = (command) => {\n        this.props.actions.regenCommandToken(command.id);\n    }\n\n    deleteCommand = (command) => {\n        this.props.actions.deleteCommand(command.id);\n    }\n\n    commandCompare(a, b) {\n        let nameA = a.display_name;\n        if (!nameA) {\n            nameA = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        let nameB = b.display_name;\n        if (!nameB) {\n            nameB = Utils.localizeMessage('installed_commands.unnamed_command', 'Unnamed Slash Command');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    render() {\n        const commands = (filter) => this.props.commands.\n            filter((command) => command.team_id === this.props.team.id).\n            filter((command) => matchesFilter(command, filter)).\n            sort(this.commandCompare).map((command) => {\n                const canChange = this.props.canManageOthersSlashCommands || this.props.user.id === command.creator_id;\n\n                return (\n                    <InstalledCommand\n                        key={command.id}\n                        team={this.props.team}\n                        command={command}\n                        onRegenToken={this.regenCommandToken}\n                        onDelete={this.deleteCommand}\n                        creator={this.props.users[command.creator_id] || {}}\n                        canChange={canChange}\n                    />\n                );\n            });\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_commands.header'\n                        defaultMessage='Installed Slash Commands'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_commands.add'\n                        defaultMessage='Add Slash Command'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/commands/add'}\n                addButtonId='addSlashCommand'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_commands.empty'\n                        defaultMessage='No slash commands found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_commands.emptySearch'\n                        defaultMessage='No slash commands match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_commands.help'\n                        defaultMessage='Use slash commands to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/slash-commands.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.buildYourOwn'\n                                        defaultMessage='Build Your Own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_commands.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_commands.search', 'Search Slash Commands')}\n                loading={this.props.loading}\n            >\n                {(filter) => {\n                    const children = commands(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\n\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(incomingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    if (incomingWebhook.display_name.toLowerCase().indexOf(filter) !== -1 ||\n        incomingWebhook.description.toLowerCase().indexOf(filter) !== -1) {\n        return true;\n    }\n\n    if (incomingWebhook.channel_id) {\n        if (channel && channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledIncomingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        incomingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhook based on filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.incomingWebhook);\n    }\n\n    render() {\n        const incomingWebhook = this.props.incomingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n\n        if (!matchesFilter(incomingWebhook, channel, filter)) {\n            return null;\n        }\n\n        let displayName;\n        if (incomingWebhook.display_name) {\n            displayName = incomingWebhook.display_name;\n        } else if (channel) {\n            displayName = channel.display_name;\n        } else {\n            displayName = (\n                <FormattedMessage\n                    id='installed_incoming_webhooks.unknown_channel'\n                    defaultMessage='A Private Webhook'\n                />\n            );\n        }\n\n        let description = null;\n        if (incomingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {incomingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <Link to={`/${this.props.team.name}/integrations/incoming_webhooks/edit?id=${incomingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_incoming_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        const incomingWebhookId = getSiteURL() + '/hooks/' + incomingWebhook.id;\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMessage\n                                id='installed_integrations.url'\n                                defaultMessage='URL: {url}'\n                                values={{\n                                    url: incomingWebhookId,\n                                }}\n                            />\n                            <span>\n                                <CopyText\n                                    value={incomingWebhookId}\n                                />\n                            </span>\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: incomingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getIncomingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadIncomingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledIncomingWebhooks from './installed_incoming_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_INCOMING_WEBHOOKS});\n    const incomingHooks = getIncomingHooks(state);\n    const incomingWebhooks = Object.keys(incomingHooks).\n        map((key) => incomingHooks[key]).\n        filter((incomingWebhook) => incomingWebhook.team_id === teamId);\n    const enableIncomingWebhooks = config.EnableIncomingWebhooks === 'true';\n\n    return {\n        incomingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableIncomingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadIncomingHooksAndProfilesForTeam,\n            removeIncomingHook: Actions.removeIncomingHook,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledIncomingWebhooks);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledIncomingWebhook, {matchesFilter} from 'components/integrations/installed_incoming_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledIncomingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        incomingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n\n        teamId: PropTypes.string,\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing incomingWebhook\n            */\n            removeIncomingHook: PropTypes.func,\n\n            /**\n            * The function to call for incomingWebhook List and for the status of api\n            */\n            loadIncomingHooksAndProfilesForTeam: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not incoming webhooks are enabled.\n        */\n        enableIncomingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableIncomingWebhooks) {\n            this.props.actions.loadIncomingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE,\n            ).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    deleteIncomingWebhook = (incomingWebhook) => {\n        this.props.actions.removeIncomingHook(incomingWebhook.id);\n    }\n\n    incomingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_incoming_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        const displayNameB = b.display_name;\n\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    incomingWebhooks = (filter) => this.props.incomingWebhooks.\n        sort(this.incomingWebhookCompare).\n        filter((incomingWebhook) => matchesFilter(incomingWebhook, this.props.channels[incomingWebhook.channel_id], filter)).\n        map((incomingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === incomingWebhook.user_id;\n            const channel = this.props.channels[incomingWebhook.channel_id];\n            return (\n                <InstalledIncomingWebhook\n                    key={incomingWebhook.id}\n                    incomingWebhook={incomingWebhook}\n                    onDelete={this.deleteIncomingWebhook}\n                    creator={this.props.users[incomingWebhook.user_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.header'\n                        defaultMessage='Installed Incoming Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.add'\n                        defaultMessage='Add Incoming Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/incoming_webhooks/add'}\n                addButtonId='addIncomingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.empty'\n                        defaultMessage='No incoming webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_incoming_webhooks.emptySearch'\n                        defaultMessage='No incoming webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_incoming_webhooks.help'\n                        defaultMessage='Use incoming webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-incoming.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build Your Own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_incoming_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_incoming_webhooks.search', 'Search Incoming Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.incomingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {getDisplayNameByUser} from 'utils/utils';\n\nimport InstalledOAuthApp from './installed_oauth_app.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const oauthApp = ownProps.oauthApp || {};\n    return {\n        creatorName: getDisplayNameByUser(state, getUser(state, oauthApp.creator_id)),\n    };\n}\n\nexport default connect(mapStateToProps)(InstalledOAuthApp);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport FormError from 'components/form_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from '../delete_integration.jsx';\n\nconst FAKE_SECRET = '***************';\n\nexport function matchesFilter(oauthApp, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    return oauthApp.name.toLowerCase().indexOf(filter) !== -1;\n}\n\nexport default class InstalledOAuthApp extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApp data\n        */\n        oauthApp: PropTypes.object.isRequired,\n\n        creatorName: PropTypes.string.isRequired,\n\n        /**\n        * The function to call when Regenerate Secret link is clicked\n        */\n        onRegenerateSecret: PropTypes.func.isRequired,\n\n        /**\n        * The function to call when Delete link is clicked\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * Set to filter OAuthApp\n        */\n        filter: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            clientSecret: FAKE_SECRET,\n        };\n    }\n\n    handleShowClientSecret = (e) => {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        this.setState({clientSecret: this.props.oauthApp.client_secret});\n    }\n\n    handleHideClientSecret = (e) => {\n        e.preventDefault();\n        this.setState({clientSecret: FAKE_SECRET});\n    }\n\n    handleRegenerate = (e) => {\n        e.preventDefault();\n        this.props.onRegenerateSecret(this.props.oauthApp.id).then(\n            ({error}) => {\n                if (error) {\n                    this.setState({error: error.message});\n                } else {\n                    this.setState({error: null});\n                    this.handleShowClientSecret();\n                }\n            },\n        );\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.oauthApp);\n    }\n\n    render() {\n        const {oauthApp, creatorName} = this.props;\n        let error;\n\n        if (this.state.error) {\n            error = (\n                <FormError\n                    error={this.state.error}\n                />\n            );\n        }\n\n        if (!matchesFilter(oauthApp, this.props.filter)) {\n            return null;\n        }\n\n        let name;\n        if (oauthApp.name) {\n            name = oauthApp.name;\n        } else {\n            name = (\n                <FormattedMessage\n                    id='installed_integrations.unnamed_oauth_app'\n                    defaultMessage='Unnamed OAuth 2.0 Application'\n                />\n            );\n        }\n\n        let description;\n        if (oauthApp.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {oauthApp.description}\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: oauthApp.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let isTrusted;\n        if (oauthApp.is_trusted) {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.yes', 'Yes');\n        } else {\n            isTrusted = Utils.localizeMessage('installed_oauth_apps.trusted.no', 'No');\n        }\n\n        let showHide;\n        let clientSecret;\n        if (this.state.clientSecret === FAKE_SECRET) {\n            showHide = (\n                <button\n                    id='showSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleShowClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.showSecret'\n                        defaultMessage='Show Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            showHide = (\n                <button\n                    id='hideSecretButton'\n                    className='style--none color--link'\n                    onClick={this.handleHideClientSecret}\n                >\n                    <FormattedMessage\n                        id='installed_integrations.hideSecret'\n                        defaultMessage='Hide Secret'\n                    />\n                </button>\n            );\n            clientSecret = (\n                <span className='item-details__token'>\n                    <FormattedMarkdownMessage\n                        id='installed_integrations.client_secret'\n                        defaultMessage='Client Secret: **{clientSecret}**'\n                        values={{\n                            clientSecret: this.state.clientSecret,\n                        }}\n                    />\n                    <CopyText\n                        idMessage='integrations.copy_client_secret'\n                        defaultMessage='Copy Client Secret'\n                        value={this.state.clientSecret}\n                    />\n                </span>\n            );\n        }\n\n        const regen = (\n            <button\n                id='regenerateSecretButton'\n                className='style--none color--link'\n                onClick={this.handleRegenerate}\n            >\n                <FormattedMessage\n                    id='installed_integrations.regenSecret'\n                    defaultMessage='Regenerate Secret'\n                />\n            </button>\n        );\n\n        let icon;\n        if (oauthApp.icon_url) {\n            icon = (\n                <div className='integration__icon integration-list__icon'>\n                    <img\n                        alt={'get app screenshot'}\n                        src={oauthApp.icon_url}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                {icon}\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {name}\n                        </strong>\n                        <div className='item-actions'>\n                            {showHide}\n                            {' - '}\n                            {regen}\n                            {' - '}\n                            <Link to={`/${this.props.team.name}/integrations/oauth2-apps/edit?id=${oauthApp.id}`}>\n                                <FormattedMessage\n                                    id='installed_integrations.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                            {' - '}\n                            <DeleteIntegration\n                                messageId={t('installed_oauth_apps.delete.confirm')}\n                                onDelete={this.handleDelete}\n                            />\n                        </div>\n                    </div>\n                    {error}\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__url word-break--all'>\n                            <FormattedMarkdownMessage\n                                id='installed_oauth_apps.is_trusted'\n                                defaultMessage='Is Trusted: **{isTrusted}**'\n                                values={{\n                                    isTrusted,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMarkdownMessage\n                                id='installed_integrations.client_id'\n                                defaultMessage='Client ID: **{clientId}**'\n                                values={{\n                                    clientId: oauthApp.id,\n                                }}\n                            />\n                            <CopyText\n                                idMessage='integrations.copy_client_id'\n                                defaultMessage='Copy Client Id'\n                                value={oauthApp.id}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        {clientSecret}\n                    </div>\n                    {urls}\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: creatorName,\n                                    createAt: oauthApp.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOAuthApps} from 'mattermost-redux/selectors/entities/integrations';\nimport {haveISystemPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOAuthAppsAndProfiles} from 'actions/integration_actions';\n\nimport InstalledOAuthApps from './installed_oauth_apps.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const enableOAuthServiceProvider = config.EnableOAuthServiceProvider === 'true';\n\n    return {\n        canManageOauth: haveISystemPermission(state, {permission: Permissions.MANAGE_OAUTH}),\n        oauthApps: getOAuthApps(state),\n        enableOAuthServiceProvider,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOAuthAppsAndProfiles,\n            regenOAuthAppSecret: Actions.regenOAuthAppSecret,\n            deleteOAuthApp: Actions.deleteOAuthApp,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOAuthApps);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOAuthApp from '../installed_oauth_app';\nimport {matchesFilter} from '../installed_oauth_app/installed_oauth_app';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOAuthApps extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * The team data\n        */\n        team: PropTypes.object,\n\n        /**\n        * The oauthApps data\n        */\n        oauthApps: PropTypes.object,\n\n        /**\n        * Set if user can manage oath\n        */\n        canManageOauth: PropTypes.bool,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call to fetch OAuth apps\n            */\n            loadOAuthAppsAndProfiles: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Regenerate Secret link is clicked\n            */\n            regenOAuthAppSecret: PropTypes.func.isRequired,\n\n            /**\n            * The function to call when Delete link is clicked\n            */\n            deleteOAuthApp: PropTypes.func.isRequired,\n        }).isRequired,\n\n        /**\n        * Whether or not OAuth applications are enabled.\n        */\n        enableOAuthServiceProvider: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOAuthServiceProvider) {\n            this.props.actions.loadOAuthAppsAndProfiles().then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    deleteOAuthApp = (app) => {\n        if (app && app.id) {\n            this.props.actions.deleteOAuthApp(app.id);\n        }\n    }\n\n    oauthAppCompare(a, b) {\n        let nameA = a.name;\n        if (!nameA) {\n            nameA = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        let nameB = b.name;\n        if (!nameB) {\n            nameB = localizeMessage('installed_integrations.unnamed_oauth_app', 'Unnamed OAuth 2.0 Application');\n        }\n\n        return nameA.localeCompare(nameB);\n    }\n\n    oauthApps = (filter) => Object.values(this.props.oauthApps).\n        filter((app) => matchesFilter(app, filter)).\n        sort(this.oauthAppCompare).\n        map((app) => {\n            return (\n                <InstalledOAuthApp\n                    key={app.id}\n                    team={this.props.team}\n                    oauthApp={app}\n                    onRegenerateSecret={this.props.actions.regenOAuthAppSecret}\n                    onDelete={this.deleteOAuthApp}\n                />\n            );\n        });\n\n    render() {\n        const integrationsEnabled = this.props.enableOAuthServiceProvider && this.props.canManageOauth;\n        let props;\n        if (integrationsEnabled) {\n            props = {\n                addLink: '/' + this.props.team.name + '/integrations/oauth2-apps/add',\n                addText: localizeMessage('installed_oauth_apps.add', 'Add OAuth 2.0 Application'),\n                addButtonId: 'addOauthApp',\n            };\n        }\n\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_oauth_apps.header'\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.help'\n                        defaultMessage='Create {oauthApplications} to securely integrate bots and third-party apps with Mattermost. Visit the {appDirectory} to find available self-hosted apps.'\n                        values={{\n                            oauthApplications: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://docs.mattermost.com/developer/oauth-2-0-applications.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.oauthApplications'\n                                        defaultMessage='OAuth 2.0 applications'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_oauth_apps.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                emptyText={\n                    <FormattedMessage\n                        id='installed_oauth_apps.empty'\n                        defaultMessage='No OAuth 2.0 Applications found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_oauth_apps.emptySearch'\n                        defaultMessage='No OAuth 2.0 Applications match {searchTerm}'\n                    />\n                }\n                searchPlaceholder={localizeMessage('installed_oauth_apps.search', 'Search OAuth 2.0 Applications')}\n                loading={this.state.loading}\n                {...props}\n            >\n                {(filter) => {\n                    const children = this.oauthApps(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {t} from 'utils/i18n';\nimport CopyText from 'components/copy_text';\n\nimport DeleteIntegration from './delete_integration.jsx';\n\nexport function matchesFilter(outgoingWebhook, channel, filter) {\n    if (!filter) {\n        return true;\n    }\n\n    const {\n        display_name: displayName,\n        description,\n        trigger_words: triggerWords,\n    } = outgoingWebhook;\n\n    if (\n        (displayName && displayName.toLowerCase().indexOf(filter) !== -1) ||\n        (description && description.toLowerCase().indexOf(filter) !== -1)\n    ) {\n        return true;\n    }\n\n    if (triggerWords) {\n        for (const triggerWord of triggerWords) {\n            if (triggerWord.toLowerCase().indexOf(filter) !== -1) {\n                return true;\n            }\n        }\n    }\n\n    if (channel && channel.name) {\n        if (channel.name.toLowerCase().indexOf(filter) !== -1) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport default class InstalledOutgoingWebhook extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Data used for showing webhook details\n        */\n        outgoingWebhook: PropTypes.object.isRequired,\n\n        /**\n        * Function used for webhook token regeneration\n        */\n        onRegenToken: PropTypes.func.isRequired,\n\n        /**\n        * Function to call when webhook delete button is pressed\n        */\n        onDelete: PropTypes.func.isRequired,\n\n        /**\n        * String used for filtering webhook item\n        */\n        filter: PropTypes.string,\n\n        /**\n        * Data used for showing created by details\n        */\n        creator: PropTypes.object.isRequired,\n\n        /**\n        *  Set to show available actions on webhook\n        */\n        canChange: PropTypes.bool.isRequired,\n\n        /**\n        *  Data used in routing of webhook for modifications\n        */\n        team: PropTypes.object.isRequired,\n\n        /**\n        *  Data used for filtering of webhooks based in filter prop\n        */\n        channel: PropTypes.object,\n    }\n\n    handleRegenToken = (e) => {\n        e.preventDefault();\n\n        this.props.onRegenToken(this.props.outgoingWebhook);\n    }\n\n    handleDelete = () => {\n        this.props.onDelete(this.props.outgoingWebhook);\n    }\n\n    makeDisplayName(outgoingWebhook, channel) {\n        if (outgoingWebhook.display_name) {\n            return outgoingWebhook.display_name;\n        } else if (channel) {\n            return channel.display_name;\n        }\n        return (\n            <FormattedMessage\n                id='installed_outgoing_webhooks.unknown_channel'\n                defaultMessage='A Private Webhook'\n            />\n        );\n    }\n\n    render() {\n        const outgoingWebhook = this.props.outgoingWebhook;\n        const channel = this.props.channel;\n        const filter = this.props.filter ? this.props.filter.toLowerCase() : '';\n        const triggerWordsFull = 0;\n        const triggerWordsStartsWith = 1;\n\n        if (outgoingWebhook && !matchesFilter(outgoingWebhook, channel, filter)) {\n            return null;\n        }\n\n        const displayName = this.makeDisplayName(outgoingWebhook, channel);\n\n        let description = null;\n        if (outgoingWebhook.description) {\n            description = (\n                <div className='item-details__row'>\n                    <span className='item-details__description'>\n                        {outgoingWebhook.description}\n                    </span>\n                </div>\n            );\n        }\n\n        let triggerWords = null;\n        if (outgoingWebhook.trigger_words && outgoingWebhook.trigger_words.length > 0) {\n            triggerWords = (\n                <div className='item-details__row'>\n                    <span className='item-details__trigger-words'>\n                        <FormattedMessage\n                            id='installed_integrations.triggerWords'\n                            defaultMessage='Trigger Words: {triggerWords}'\n                            values={{\n                                triggerWords: outgoingWebhook.trigger_words.join(', '),\n                            }}\n                        />\n                    </span>\n                </div>\n            );\n        }\n\n        const urls = (\n            <div className='item-details__row'>\n                <span className='item-details__url word-break--all'>\n                    <FormattedMessage\n                        id='installed_integrations.callback_urls'\n                        defaultMessage='Callback URLs: {urls}'\n                        values={{\n                            urls: outgoingWebhook.callback_urls.join(', '),\n                        }}\n                    />\n                </span>\n            </div>\n        );\n\n        let triggerWhen;\n        if (outgoingWebhook.trigger_when === triggerWordsFull) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenFullWord'\n                    defaultMessage='First word matches a trigger word exactly'\n                />\n            );\n        } else if (outgoingWebhook.trigger_when === triggerWordsStartsWith) {\n            triggerWhen = (\n                <FormattedMessage\n                    id='add_outgoing_webhook.triggerWordsTriggerWhenStartsWith'\n                    defaultMessage='First word starts with a trigger word'\n                />\n            );\n        }\n\n        let actions = null;\n        if (this.props.canChange) {\n            actions = (\n                <div className='item-actions'>\n                    <button\n                        className='style--none color--link'\n                        onClick={this.handleRegenToken}\n                    >\n                        <FormattedMessage\n                            id='installed_integrations.regenToken'\n                            defaultMessage='Regen Token'\n                        />\n                    </button>\n                    {' - '}\n                    <Link to={`/${this.props.team.name}/integrations/outgoing_webhooks/edit?id=${outgoingWebhook.id}`}>\n                        <FormattedMessage\n                            id='installed_integrations.edit'\n                            defaultMessage='Edit'\n                        />\n                    </Link>\n                    {' - '}\n                    <DeleteIntegration\n                        messageId={t('installed_outgoing_webhooks.delete.confirm')}\n                        onDelete={this.handleDelete}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className='backstage-list__item'>\n                <div className='item-details'>\n                    <div className='item-details__row d-flex flex-column flex-md-row justify-content-between'>\n                        <strong className='item-details__name'>\n                            {displayName}\n                        </strong>\n                        {actions}\n                    </div>\n                    {description}\n                    <div className='item-details__row'>\n                        <span className='item-details__content_type'>\n                            <FormattedMessage\n                                id='installed_integrations.content_type'\n                                defaultMessage='Content-Type: {contentType}'\n                                values={{\n                                    contentType: outgoingWebhook.content_type || 'application/x-www-form-urlencoded',\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {triggerWords}\n                    <div className='item-details__row'>\n                        <span className='item-details__trigger-when'>\n                            <FormattedMessage\n                                id='installed_integrations.triggerWhen'\n                                defaultMessage='Trigger When: {triggerWhen}'\n                                values={{\n                                    triggerWhen,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__token'>\n                            <FormattedMessage\n                                id='installed_integrations.token'\n                                defaultMessage='Token: {token}'\n                                values={{\n                                    token: outgoingWebhook.token,\n                                }}\n                            />\n                            <CopyText\n                                value={outgoingWebhook.token}\n                            />\n                        </span>\n                    </div>\n                    <div className='item-details__row'>\n                        <span className='item-details__creation'>\n                            <FormattedMessage\n                                id='installed_integrations.creation'\n                                defaultMessage='Created by {creator} on {createAt, date, full}'\n                                values={{\n                                    creator: this.props.creator.username,\n                                    createAt: outgoingWebhook.create_at,\n                                }}\n                            />\n                        </span>\n                    </div>\n                    {urls}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport * as Actions from 'mattermost-redux/actions/integrations';\nimport {getOutgoingHooks} from 'mattermost-redux/selectors/entities/integrations';\nimport {getCurrentTeamId} from 'mattermost-redux/selectors/entities/teams';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadOutgoingHooksAndProfilesForTeam} from 'actions/integration_actions';\n\nimport InstalledOutgoingWebhook from './installed_outgoing_webhooks.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const teamId = getCurrentTeamId(state);\n    const canManageOthersWebhooks = haveITeamPermission(state, {team: teamId, permission: Permissions.MANAGE_OTHERS_OUTGOING_WEBHOOKS});\n    const outgoingHooks = getOutgoingHooks(state);\n    const outgoingWebhooks = Object.keys(outgoingHooks).\n        map((key) => outgoingHooks[key]).\n        filter((outgoingWebhook) => outgoingWebhook.team_id === teamId);\n    const enableOutgoingWebhooks = config.EnableOutgoingWebhooks === 'true';\n\n    return {\n        outgoingWebhooks,\n        channels: getAllChannels(state),\n        users: getUsers(state),\n        teamId,\n        canManageOthersWebhooks,\n        enableOutgoingWebhooks,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadOutgoingHooksAndProfilesForTeam,\n            removeOutgoingHook: Actions.removeOutgoingHook,\n            regenOutgoingHookToken: Actions.regenOutgoingHookToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InstalledOutgoingWebhook);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\nimport BackstageList from 'components/backstage/components/backstage_list.jsx';\nimport InstalledOutgoingWebhook, {matchesFilter} from 'components/integrations/installed_outgoing_webhook.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nexport default class InstalledOutgoingWebhooks extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        *  Data used in passing down as props for webhook modifications\n        */\n        team: PropTypes.object,\n\n        /**\n        * Data used for checking if webhook is created by current user\n        */\n        user: PropTypes.object,\n\n        /**\n        *  Data used for checking modification privileges\n        */\n        canManageOthersWebhooks: PropTypes.bool,\n\n        /**\n        * Data used in passing down as props for showing webhook details\n        */\n        outgoingWebhooks: PropTypes.array,\n\n        /**\n        * Data used in sorting for displaying list and as props channel details\n        */\n        channels: PropTypes.object,\n\n        /**\n        *  Data used in passing down as props for webhook -created by label\n        */\n        users: PropTypes.object,\n\n        /**\n        *  Data used in passing as argument for loading webhooks\n        */\n        teamId: PropTypes.string,\n\n        actions: PropTypes.shape({\n\n            /**\n            * The function to call for removing outgoingWebhook\n            */\n            removeOutgoingHook: PropTypes.func,\n\n            /**\n            * The function to call for outgoingWebhook List and for the status of api\n            */\n            loadOutgoingHooksAndProfilesForTeam: PropTypes.func,\n\n            /**\n            * The function to call for regeneration of webhook token\n            */\n            regenOutgoingHookToken: PropTypes.func,\n        }),\n\n        /**\n        * Whether or not outgoing webhooks are enabled.\n        */\n        enableOutgoingWebhooks: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.enableOutgoingWebhooks) {\n            this.props.actions.loadOutgoingHooksAndProfilesForTeam(\n                this.props.teamId,\n                Constants.Integrations.START_PAGE_NUM,\n                Constants.Integrations.PAGE_SIZE,\n            ).then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    regenOutgoingWebhookToken = (outgoingWebhook) => {\n        this.props.actions.regenOutgoingHookToken(outgoingWebhook.id);\n    }\n\n    removeOutgoingHook = (outgoingWebhook) => {\n        this.props.actions.removeOutgoingHook(outgoingWebhook.id);\n    }\n\n    outgoingWebhookCompare = (a, b) => {\n        let displayNameA = a.display_name;\n        if (!displayNameA) {\n            const channelA = this.props.channels[a.channel_id];\n            if (channelA) {\n                displayNameA = channelA.display_name;\n            } else {\n                displayNameA = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n\n        let displayNameB = b.display_name;\n        if (!displayNameB) {\n            const channelB = this.props.channels[b.channel_id];\n            if (channelB) {\n                displayNameB = channelB.display_name;\n            } else {\n                displayNameB = Utils.localizeMessage('installed_outgoing_webhooks.unknown_channel', 'A Private Webhook');\n            }\n        }\n        return displayNameA.localeCompare(displayNameB);\n    }\n\n    outgoingWebhooks = (filter) => this.props.outgoingWebhooks.\n        sort(this.outgoingWebhookCompare).\n        filter((outgoingWebhook) => matchesFilter(outgoingWebhook, this.props.channels[outgoingWebhook.channel_id], filter)).\n        map((outgoingWebhook) => {\n            const canChange = this.props.canManageOthersWebhooks || this.props.user.id === outgoingWebhook.creator_id;\n            const channel = this.props.channels[outgoingWebhook.channel_id];\n            return (\n                <InstalledOutgoingWebhook\n                    key={outgoingWebhook.id}\n                    outgoingWebhook={outgoingWebhook}\n                    onRegenToken={this.regenOutgoingWebhookToken}\n                    onDelete={this.removeOutgoingHook}\n                    creator={this.props.users[outgoingWebhook.creator_id] || {}}\n                    canChange={canChange}\n                    team={this.props.team}\n                    channel={channel}\n                />\n            );\n        });\n\n    render() {\n        return (\n            <BackstageList\n                header={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.header'\n                        defaultMessage='Installed Outgoing Webhooks'\n                    />\n                }\n                addText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.add'\n                        defaultMessage='Add Outgoing Webhook'\n                    />\n                }\n                addLink={'/' + this.props.team.name + '/integrations/outgoing_webhooks/add'}\n                addButtonId='addOutgoingWebhook'\n                emptyText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.empty'\n                        defaultMessage='No outgoing webhooks found'\n                    />\n                }\n                emptyTextSearch={\n                    <FormattedMarkdownMessage\n                        id='installed_outgoing_webhooks.emptySearch'\n                        defaultMessage='No outgoing webhooks match {searchTerm}'\n                    />\n                }\n                helpText={\n                    <FormattedMessage\n                        id='installed_outgoing_webhooks.help'\n                        defaultMessage='Use outgoing webhooks to connect external tools to Mattermost. {buildYourOwn} or visit the {appDirectory} to find self-hosted, third-party apps and integrations.'\n                        values={{\n                            buildYourOwn: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='http://docs.mattermost.com/developer/webhooks-outgoing.html'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.buildYourOwn'\n                                        defaultMessage='Build your own'\n                                    />\n                                </a>\n                            ),\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='installed_outgoing_webhooks.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                }\n                searchPlaceholder={Utils.localizeMessage('installed_outgoing_webhooks.search', 'Search Outgoing Webhooks')}\n                loading={this.state.loading}\n            >\n                {(filter) => {\n                    const children = this.outgoingWebhooks(filter);\n                    return [children, children.length > 0];\n                }}\n            </BackstageList>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class IntegrationOption extends React.PureComponent {\n    static get propTypes() {\n        return {\n            image: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            description: PropTypes.node.isRequired,\n            link: PropTypes.string.isRequired,\n        };\n    }\n\n    render() {\n        const {image, title, description, link} = this.props;\n\n        return (\n            <Link\n                to={link}\n                className='integration-option'\n            >\n                <img\n                    alt={'integration image'}\n                    className='integration-option__image'\n                    src={image}\n                />\n                <div className='integration-option__title'>\n                    {title}\n                </div>\n                <div className='integration-option__description'>\n                    {description}\n                </div>\n            </Link>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport BotAccountsIcon from 'images/bot_default_icon.png';\n\nimport * as Utils from 'utils/utils.jsx';\nimport IncomingWebhookIcon from 'images/incoming_webhook.jpg';\nimport OAuthIcon from 'images/oauth_icon.png';\nimport OutgoingWebhookIcon from 'images/outgoing_webhook.jpg';\nimport SlashCommandIcon from 'images/slash_command_icon.jpg';\n\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport TeamPermissionGate from 'components/permissions_gates/team_permission_gate';\n\nimport IntegrationOption from './integration_option.jsx';\n\nexport default class Integrations extends React.PureComponent {\n    static get propTypes() {\n        return {\n            team: PropTypes.object,\n            user: PropTypes.object,\n            siteName: PropTypes.string,\n            enableIncomingWebhooks: PropTypes.bool,\n            enableOutgoingWebhooks: PropTypes.bool,\n            enableCommands: PropTypes.bool,\n            enableOAuthServiceProvider: PropTypes.bool,\n        };\n    }\n\n    componentDidMount() {\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const currentSiteName = this.props.siteName || '';\n        document.title = Utils.localizeMessage('admin.sidebar.integrations', 'Integrations') + ' - ' + this.props.team.display_name + ' ' + currentSiteName;\n    }\n\n    render() {\n        const options = [];\n\n        if (this.props.enableIncomingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_INCOMING_WEBHOOKS]}\n                    key='incomingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='incomingWebhook'\n                        image={IncomingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.title'\n                                defaultMessage='Incoming Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.incomingWebhook.description'\n                                defaultMessage='Incoming webhooks allow external integrations to send messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/incoming_webhooks'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableOutgoingWebhooks) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_OUTGOING_WEBHOOKS]}\n                    key='outgoingWebhookPermission'\n                >\n                    <IntegrationOption\n                        key='outgoingWebhook'\n                        image={OutgoingWebhookIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.title'\n                                defaultMessage='Outgoing Webhooks'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.outgoingWebhook.description'\n                                defaultMessage='Outgoing webhooks allow external integrations to receive and respond to messages'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/outgoing_webhooks'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableCommands) {\n            options.push(\n                <TeamPermissionGate\n                    teamId={this.props.team.id}\n                    permissions={[Permissions.MANAGE_SLASH_COMMANDS]}\n                    key='commandPermission'\n                >\n                    <IntegrationOption\n                        key='command'\n                        image={SlashCommandIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.command.title'\n                                defaultMessage='Slash Commands'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.command.description'\n                                defaultMessage='Slash commands send events to an external integration'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/commands'}\n                    />\n                </TeamPermissionGate>,\n            );\n        }\n\n        if (this.props.enableOAuthServiceProvider) {\n            options.push(\n                <SystemPermissionGate\n                    permissions={[Permissions.MANAGE_OAUTH]}\n                    key='oauth2AppsPermission'\n                >\n                    <IntegrationOption\n                        key='oauth2Apps'\n                        image={OAuthIcon}\n                        title={\n                            <FormattedMessage\n                                id='integrations.oauthApps.title'\n                                defaultMessage='OAuth 2.0 Applications'\n                            />\n                        }\n                        description={\n                            <FormattedMessage\n                                id='integrations.oauthApps.description'\n                                defaultMessage='Auth 2.0 allows external applications to make authorized requests to the Mattermost API'\n                            />\n                        }\n                        link={'/' + this.props.team.name + '/integrations/oauth2-apps'}\n                    />\n                </SystemPermissionGate>,\n            );\n        }\n\n        options.push(\n            <SystemPermissionGate\n                permissions={['manage_bots']}\n                key='botsPermissions'\n            >\n                <IntegrationOption\n                    image={BotAccountsIcon}\n                    title={\n                        <FormattedMessage\n                            id='bots.manage.header'\n                            defaultMessage='Bot Accounts'\n                        />\n                    }\n                    description={\n                        <FormattedMessage\n                            id='bots.manage.description'\n                            defaultMessage='Use bot accounts to integrate with Mattermost through plugins or the API'\n                        />\n                    }\n                    link={'/' + this.props.team.name + '/integrations/bots'}\n                />\n            </SystemPermissionGate>,\n        );\n\n        return (\n            <div className='backstage-content row'>\n                <div className='backstage-header'>\n                    <h1>\n                        <FormattedMessage\n                            id='integrations.header'\n                            defaultMessage='Integrations'\n                        />\n                    </h1>\n                </div>\n                <div className='backstage-list__help'>\n                    <FormattedMessage\n                        id='integrations.help'\n                        defaultMessage='Visit the {appDirectory} to find self-hosted, third-party apps and integrations for Mattermost.'\n                        values={{\n                            appDirectory: (\n                                <a\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href='https://about.mattermost.com/default-app-directory/'\n                                >\n                                    <FormattedMessage\n                                        id='integrations.help.appDirectory'\n                                        defaultMessage='App Directory'\n                                    />\n                                </a>\n                            ),\n                        }}\n                    />\n                </div>\n                <div className='integrations-list d-flex flex-wrap'>\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class AnyTeamPermissionGate extends React.PureComponent {\n    static defaultProps = {\n        invert: false,\n    }\n\n    static propTypes = {\n\n        /**\n         * Permissions enough to pass the gate (binary OR)\n         */\n        permissions: PropTypes.arrayOf(PropTypes.string).isRequired,\n\n        /**\n         * Has permission\n         */\n        hasPermission: PropTypes.bool.isRequired,\n\n        /**\n         * Invert the permission (used for else)\n         */\n        invert: PropTypes.bool.isRequired,\n\n        /**\n         * Content protected by the permissions gate\n         */\n        children: PropTypes.node.isRequired,\n    };\n\n    render() {\n        if (this.props.hasPermission && !this.props.invert) {\n            return this.props.children;\n        }\n        if (!this.props.hasPermission && this.props.invert) {\n            return this.props.children;\n        }\n        return null;\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {haveITeamPermission} from 'mattermost-redux/selectors/entities/roles';\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport AnyTeamPermissionGate from './any_team_permission_gate.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    const teams = getMyTeams(state);\n    for (const team of teams) {\n        for (const permission of ownProps.permissions) {\n            if (haveITeamPermission(state, {team: team.id, permission})) {\n                return {hasPermission: true};\n            }\n        }\n    }\n\n    return {hasPermission: false};\n}\n\nexport default connect(mapStateToProps)(AnyTeamPermissionGate);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class NextIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-1x fa-angle-right' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.next'), defaultMessage: 'Next Icon'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class PreviousIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-1x fa-angle-left' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.previous'), defaultMessage: 'Previous Icon'}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nexport default class SearchIcon extends React.PureComponent {\n    render() {\n        return (\n            <FormattedMessage\n                id='generic_icons.search'\n                defaultMessage='Search Icon'\n            >\n                {(title) => (\n                    <i\n                        className='fa fa-search'\n                        title={title}\n                    />\n                )}\n            </FormattedMessage>\n        );\n    }\n}\n","module.exports = __webpack_public_path__ + \"files/203bb715ffa845749235bfbae7dd67d9.png\";","module.exports = __webpack_public_path__ + \"files/eeb84efa55ddbcf4fe4d0dd0a7829bc4.jpg\";","module.exports = __webpack_public_path__ + \"files/abc4c21efbbb4f3c8aef13a1baa930b6.png\";","module.exports = __webpack_public_path__ + \"files/096de7a698dbb6dc2ff0dcfa422fc576.jpg\";","module.exports = __webpack_public_path__ + \"files/d184fcdb23c1e24bfd7132950ceb4f68.jpg\";","\"use strict\";\r\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar client_1 = require(\"../client\");\r\nvar action_types_1 = require(\"../action_types\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar BOTS_PER_PAGE_DEFAULT = 20;\r\nfunction createBot(bot) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.createBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            bot,\r\n        ],\r\n    });\r\n}\r\nexports.createBot = createBot;\r\nfunction patchBot(botUserId, botPatch) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.patchBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            botUserId,\r\n            botPatch,\r\n        ],\r\n    });\r\n}\r\nexports.patchBot = patchBot;\r\nfunction loadBot(botUserId) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.getBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            botUserId,\r\n        ],\r\n    });\r\n}\r\nexports.loadBot = loadBot;\r\nfunction loadBots(page, perPage) {\r\n    if (page === void 0) { page = 0; }\r\n    if (perPage === void 0) { perPage = BOTS_PER_PAGE_DEFAULT; }\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.getBotsIncludeDeleted,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNTS,\r\n        params: [\r\n            page,\r\n            perPage,\r\n        ],\r\n    });\r\n}\r\nexports.loadBots = loadBots;\r\nfunction disableBot(botUserId) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.disableBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            botUserId,\r\n        ],\r\n    });\r\n}\r\nexports.disableBot = disableBot;\r\nfunction enableBot(botUserId) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.enableBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            botUserId,\r\n        ],\r\n    });\r\n}\r\nexports.enableBot = enableBot;\r\nfunction assignBot(botUserId, newOwnerId) {\r\n    return helpers_1.bindClientFunc({\r\n        clientFunc: client_1.Client4.assignBot,\r\n        onSuccess: action_types_1.BotTypes.RECEIVED_BOT_ACCOUNT,\r\n        params: [\r\n            botUserId,\r\n            newOwnerId,\r\n        ],\r\n    });\r\n}\r\nexports.assignBot = assignBot;\r\n//# sourceMappingURL=bots.js.map","\"use strict\";\r\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getBotAccounts(state) {\r\n    return state.entities.bots.accounts;\r\n}\r\nexports.getBotAccounts = getBotAccounts;\r\n//# sourceMappingURL=bots.js.map","\"use strict\";\r\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\r\n// See LICENSE.txt for license information.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar reselect_1 = require(\"reselect\");\r\nvar teams_1 = require(\"./teams\");\r\nfunction getIncomingHooks(state) {\r\n    return state.entities.integrations.incomingHooks;\r\n}\r\nexports.getIncomingHooks = getIncomingHooks;\r\nfunction getOutgoingHooks(state) {\r\n    return state.entities.integrations.outgoingHooks;\r\n}\r\nexports.getOutgoingHooks = getOutgoingHooks;\r\nfunction getCommands(state) {\r\n    return state.entities.integrations.commands;\r\n}\r\nexports.getCommands = getCommands;\r\nfunction getOAuthApps(state) {\r\n    return state.entities.integrations.oauthApps;\r\n}\r\nexports.getOAuthApps = getOAuthApps;\r\nfunction getSystemCommands(state) {\r\n    return state.entities.integrations.systemCommands;\r\n}\r\nexports.getSystemCommands = getSystemCommands;\r\n/**\r\n * get outgoing hooks in current team\r\n */\r\nexports.getOutgoingHooksInCurrentTeam = reselect_1.createSelector(teams_1.getCurrentTeamId, getOutgoingHooks, function (teamId, hooks) {\r\n    return Object.values(hooks).filter(function (o) { return o.team_id === teamId; });\r\n});\r\nexports.getAllCommands = reselect_1.createSelector(getCommands, getSystemCommands, function (commands, systemCommands) {\r\n    return tslib_1.__assign(tslib_1.__assign({}, commands), systemCommands);\r\n});\r\nexports.getAutocompleteCommandsList = reselect_1.createSelector(exports.getAllCommands, teams_1.getCurrentTeamId, function (commands, currentTeamId) {\r\n    return Object.values(commands).filter(function (command) {\r\n        return command && (!command.team_id || command.team_id === currentTeamId) && command.auto_complete;\r\n    }).sort(function (a, b) { return a.display_name.localeCompare(b.display_name); });\r\n});\r\n//# sourceMappingURL=integrations.js.map"],"sourceRoot":""}